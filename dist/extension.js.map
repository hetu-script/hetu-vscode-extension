{"version":3,"sources":[".././node_modules/balanced-match/index.js",".././node_modules/brace-expansion/index.js",".././node_modules/concat-map/index.js",".././node_modules/lru-cache/index.js",".././node_modules/minimatch/minimatch.js",".././node_modules/semver/classes/comparator.js",".././node_modules/semver/classes/range.js",".././node_modules/semver/classes/semver.js",".././node_modules/semver/functions/clean.js",".././node_modules/semver/functions/cmp.js",".././node_modules/semver/functions/coerce.js",".././node_modules/semver/functions/compare-build.js",".././node_modules/semver/functions/compare-loose.js",".././node_modules/semver/functions/compare.js",".././node_modules/semver/functions/diff.js",".././node_modules/semver/functions/eq.js",".././node_modules/semver/functions/gt.js",".././node_modules/semver/functions/gte.js",".././node_modules/semver/functions/inc.js",".././node_modules/semver/functions/lt.js",".././node_modules/semver/functions/lte.js",".././node_modules/semver/functions/major.js",".././node_modules/semver/functions/minor.js",".././node_modules/semver/functions/neq.js",".././node_modules/semver/functions/parse.js",".././node_modules/semver/functions/patch.js",".././node_modules/semver/functions/prerelease.js",".././node_modules/semver/functions/rcompare.js",".././node_modules/semver/functions/rsort.js",".././node_modules/semver/functions/satisfies.js",".././node_modules/semver/functions/sort.js",".././node_modules/semver/functions/valid.js",".././node_modules/semver/index.js",".././node_modules/semver/internal/constants.js",".././node_modules/semver/internal/debug.js",".././node_modules/semver/internal/identifiers.js",".././node_modules/semver/internal/parse-options.js",".././node_modules/semver/internal/re.js",".././node_modules/semver/ranges/gtr.js",".././node_modules/semver/ranges/intersects.js",".././node_modules/semver/ranges/ltr.js",".././node_modules/semver/ranges/max-satisfying.js",".././node_modules/semver/ranges/min-satisfying.js",".././node_modules/semver/ranges/min-version.js",".././node_modules/semver/ranges/outside.js",".././node_modules/semver/ranges/simplify.js",".././node_modules/semver/ranges/subset.js",".././node_modules/semver/ranges/to-comparators.js",".././node_modules/semver/ranges/valid.js",".././src/extension/analysis/analyzer_lsp.ts",".././src/extension/analysis/file_tracker_lsp.ts",".././src/extension/commands/channels.ts",".././src/extension/config.ts",".././src/extension/extension.ts",".././src/extension/lsp/analyzer_status_reporter.ts",".././src/extension/project.ts",".././src/extension/sdk/utils.ts",".././src/extension/utils.ts",".././src/extension/utils/log.ts",".././src/extension/utils/misc.ts",".././src/extension/utils/processes.ts",".././src/shared/analysis/lsp/custom_protocol.ts",".././src/shared/analyzer.ts",".././src/shared/constants.ts",".././src/shared/enums.ts",".././src/shared/events.ts",".././src/shared/logging.ts",".././src/shared/processes.ts",".././src/shared/pub/package_map.ts",".././src/shared/symbols.ts",".././src/shared/utils.ts",".././src/shared/utils/array.ts",".././src/shared/utils/fs.ts",".././src/shared/utils/promises.ts",".././src/shared/vscode/extension_utils.ts",".././src/shared/vscode/utils.ts",".././src/shared/vscode/workspace.ts",".././src/shared/workspace.ts",".././node_modules/vscode-jsonrpc/lib/common/api.js",".././node_modules/vscode-jsonrpc/lib/common/cancellation.js",".././node_modules/vscode-jsonrpc/lib/common/connection.js",".././node_modules/vscode-jsonrpc/lib/common/disposable.js",".././node_modules/vscode-jsonrpc/lib/common/events.js",".././node_modules/vscode-jsonrpc/lib/common/is.js",".././node_modules/vscode-jsonrpc/lib/common/linkedMap.js",".././node_modules/vscode-jsonrpc/lib/common/messageBuffer.js",".././node_modules/vscode-jsonrpc/lib/common/messageReader.js",".././node_modules/vscode-jsonrpc/lib/common/messageWriter.js",".././node_modules/vscode-jsonrpc/lib/common/messages.js",".././node_modules/vscode-jsonrpc/lib/common/ral.js",".././node_modules/vscode-jsonrpc/lib/common/semaphore.js",".././node_modules/vscode-jsonrpc/lib/node/main.js",".././node_modules/vscode-jsonrpc/lib/node/ril.js",".././node_modules/vscode-jsonrpc/node.js",".././node_modules/vscode-languageclient/lib/common/api.js",".././node_modules/vscode-languageclient/lib/common/callHierarchy.js",".././node_modules/vscode-languageclient/lib/common/client.js",".././node_modules/vscode-languageclient/lib/common/codeConverter.js",".././node_modules/vscode-languageclient/lib/common/colorProvider.js",".././node_modules/vscode-languageclient/lib/common/commonClient.js",".././node_modules/vscode-languageclient/lib/common/configuration.js",".././node_modules/vscode-languageclient/lib/common/declaration.js",".././node_modules/vscode-languageclient/lib/common/fileOperations.js",".././node_modules/vscode-languageclient/lib/common/foldingRange.js",".././node_modules/vscode-languageclient/lib/common/implementation.js",".././node_modules/vscode-languageclient/lib/common/linkedEditingRange.js",".././node_modules/vscode-languageclient/lib/common/progress.js",".././node_modules/vscode-languageclient/lib/common/progressPart.js",".././node_modules/vscode-languageclient/lib/common/protocolCallHierarchyItem.js",".././node_modules/vscode-languageclient/lib/common/protocolCodeAction.js",".././node_modules/vscode-languageclient/lib/common/protocolCodeLens.js",".././node_modules/vscode-languageclient/lib/common/protocolCompletionItem.js",".././node_modules/vscode-languageclient/lib/common/protocolConverter.js",".././node_modules/vscode-languageclient/lib/common/protocolDiagnostic.js",".././node_modules/vscode-languageclient/lib/common/protocolDocumentLink.js",".././node_modules/vscode-languageclient/lib/common/selectionRange.js",".././node_modules/vscode-languageclient/lib/common/semanticTokens.js",".././node_modules/vscode-languageclient/lib/common/typeDefinition.js",".././node_modules/vscode-languageclient/lib/common/utils/async.js",".././node_modules/vscode-languageclient/lib/common/utils/is.js",".././node_modules/vscode-languageclient/lib/common/utils/uuid.js",".././node_modules/vscode-languageclient/lib/common/workspaceFolders.js",".././node_modules/vscode-languageclient/lib/node/main.js",".././node_modules/vscode-languageclient/lib/node/processes.js",".././node_modules/vscode-languageclient/node.js",".././node_modules/vscode-languageclient/node_modules/semver/classes/comparator.js",".././node_modules/vscode-languageclient/node_modules/semver/classes/range.js",".././node_modules/vscode-languageclient/node_modules/semver/classes/semver.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/clean.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/cmp.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/coerce.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/compare-build.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/compare-loose.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/compare.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/diff.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/eq.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/gt.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/gte.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/inc.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/lt.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/lte.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/major.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/minor.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/neq.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/parse.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/patch.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/prerelease.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/rcompare.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/rsort.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/satisfies.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/sort.js",".././node_modules/vscode-languageclient/node_modules/semver/functions/valid.js",".././node_modules/vscode-languageclient/node_modules/semver/index.js",".././node_modules/vscode-languageclient/node_modules/semver/internal/constants.js",".././node_modules/vscode-languageclient/node_modules/semver/internal/debug.js",".././node_modules/vscode-languageclient/node_modules/semver/internal/identifiers.js",".././node_modules/vscode-languageclient/node_modules/semver/internal/parse-options.js",".././node_modules/vscode-languageclient/node_modules/semver/internal/re.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/gtr.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/intersects.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/ltr.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/max-satisfying.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/min-satisfying.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/min-version.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/outside.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/simplify.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/subset.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/to-comparators.js",".././node_modules/vscode-languageclient/node_modules/semver/ranges/valid.js",".././node_modules/vscode-languageserver-protocol/lib/common/api.js",".././node_modules/vscode-languageserver-protocol/lib/common/connection.js",".././node_modules/vscode-languageserver-protocol/lib/common/messages.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js",".././node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js",".././node_modules/vscode-languageserver-protocol/lib/common/utils/is.js",".././node_modules/vscode-languageserver-protocol/lib/node/main.js",".././node_modules/vscode-languageserver-protocol/node.js",".././node_modules/vscode-languageserver-types/lib/esm/main.js",".././node_modules/yallist/iterator.js",".././node_modules/yallist/yallist.js","../external \"child_process\"","../external \"crypto\"","../external \"events\"","../external \"fs\"","../external \"https\"","../external \"net\"","../external \"os\"","../external \"path\"","../external \"stream\"","../external \"url\"","../external \"util\"","../external \"vscode\"","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/startup"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,eAAe,mBAAO,CAAC,8DAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACvMA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACZY;;AAEZ;AACA,gBAAgB,mBAAO,CAAC,kDAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,2BAA2B;;AAE3B,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7UA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,kBAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,gEAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;;;;;AC15BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,mBAAO,CAAC,kFAA2B;AACxD,OAAO,MAAM,GAAG,mBAAO,CAAC,4DAAgB;AACxC,YAAY,mBAAO,CAAC,gEAAkB;AACtC,cAAc,mBAAO,CAAC,kEAAmB;AACzC,eAAe,mBAAO,CAAC,yDAAU;AACjC,cAAc,mBAAO,CAAC,uDAAS;;;;;;;;;;;ACtI/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,MAAM;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,SAAS,GAAG,MAAM;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,oDAAW;AAC/B,uBAAuB,YAAY;;AAEnC,qBAAqB,mBAAO,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A;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9RA,cAAc,mBAAO,CAAC,yDAAS;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;AAC3B,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;AAC3B,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AA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O,CAAC,8DAAiB;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC3DA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD,OAAO,IAAI;AACX,cAAc,mBAAO,CAAC,gEAAkB;AACxC,kBAAkB,mBAAO,CAAC,4EAAwB;AAClD,WAAW,mBAAO,CAAC,8DAAiB;AACpC,WAAW,mBAAO,CAAC,8DAAiB;AACpC,YAAY,mBAAO,CAAC,gEAAkB;AACtC,YAAY,mBAAO,CAAC,gEAAkB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/EA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,+EAA2B;AACrD,gBAAgB,mBAAO,CAAC,2EAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,uBAAuB,IAAI;AAC3B;A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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,wC;;;;;;;;;;;AChGa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,+BAA+B,GAAG,yBAAyB,GAAG,4BAA4B,GAAG,kCAAkC,GAAG,oCAAoC,GAAG,0BAA0B,GAAG,uBAAuB,GAAG,wBAAwB,GAAG,4BAA4B,GAAG,4BAA4B,GAAG,mBAAmB,GAAG,aAAa,GAAG,kBAAkB,GAAG,oBAAoB;AACxY,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,mBAAmB,mBAAO,CAAC,wEAAY;AACvC,oBAAoB,mBAAO,CAAC,0EAAa;AACzC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC,uBAAuB,mBAAO,CAAC,gFAAgB;AAC/C;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD,kBAAkB;AAClB,kBAAkB,EAAE;AACpB,iBAAiB,EAAE;AACnB,iBAAiB,EAAE;AACnB,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;AACpH;AACA;AACA;AACA;AACA,4DAA4D,KAAK;AACjE,SAAS;AACT,oBAAoB;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,WAAW,oBAAoB;AACzK;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,wBAAwB,cAAc;AAChL;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,sBAAsB,wBAAwB,cAAc;AACxK;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,eAAe,WAAW,oBAAoB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,eAAe;AAC5E;AACA;AACA,6DAA6D,eAAe,WAAW,oBAAoB,uBAAuB,sBAAsB;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,2CAA2C,eAAe,MAAM,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,MAAM,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,4CAA4C,eAAe,MAAM,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sBAAsB,IAAI,mBAAmB;AAC/G,iDAAiD,uBAAuB,MAAM,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+BAA+B;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oEAAoE,eAAe;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,eAAe;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+BAA+B;AAC/B,sC;;;;;;;;;;;AC/jCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D,sC;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,GAAG,aAAa;AAC/B,cAAc,mBAAO,CAAC,8DAAO;AAC7B;AACA;AACA,yBAAyB,YAAY,EAAE;AACvC,8BAA8B,oBAAoB;AAClD,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,6BAA6B;AAC7B,kC;;;;;;;;;;;AChIa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AACtH;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB,8B;;;;;;;;;;;ACnCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gBAAgB,GAAG,iBAAiB,GAAG,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,qC;;;;;;;;;;;AClZa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yC;;;;;;;;;;;ACxJa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,mCAAmC,GAAG,6BAA6B,GAAG,qBAAqB;AAC3F,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC;AACnC,yC;;;;;;;;;;;AChMa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oCAAoC,GAAG,6BAA6B,GAAG,qBAAqB;AAC5F,cAAc,mBAAO,CAAC,8DAAO;AAC7B,WAAW,mBAAO,CAAC,4DAAM;AACzB,oBAAoB,mBAAO,CAAC,0EAAa;AACzC,iBAAiB,mBAAO,CAAC,oEAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,yC;;;;;;;;;;;ACpHa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,yBAAyB,GAAG,6BAA6B,GAAG,wBAAwB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,wBAAwB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,oBAAoB,GAAG,gCAAgC,GAAG,2BAA2B,GAAG,qBAAqB,GAAG,kBAAkB;AACjvB,WAAW,mBAAO,CAAC,4DAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC,kBAAkB,KAAK;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,oC;;;;;;;;;;;ACzRa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,eAAe;AACf,+B;;;;;;;;;;;ACvBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iBAAiB;AACjB,cAAc,mBAAO,CAAC,8DAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qC;;;;;;;;;;;ACpEa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,+BAA+B,GAAG,mCAAmC,GAAG,mCAAmC,GAAG,iCAAiC,GAAG,iCAAiC,GAAG,8BAA8B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,2BAA2B,GAAG,wBAAwB,GAAG,wBAAwB;AAClY;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,4DAAO;AAC7B;AACA;AACA,cAAc,mBAAO,CAAC,sEAAe;AACrC,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,aAAa,mBAAO,CAAC,sEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,0DAA0D,aAAa;AACvE;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA,6DAA6D,OAAO,mBAAmB,MAAM;AAC7F;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,+BAA+B;AAC/B,gC;;;;;;;;;;;ACpNa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,cAAc,mBAAO,CAAC,sEAAe;AACrC,eAAe,mBAAO,CAAC,kBAAM;AAC7B,qBAAqB,mBAAO,CAAC,oFAAsB;AACnD,wBAAwB,mBAAO,CAAC,0FAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB;AACnB,eAAe;AACf,+B;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACa;;AAEb,6GAA2C,C;;;;;;;;;;;ACN9B;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,sGAAgC;AACrD,aAAa,mBAAO,CAAC,2EAAU;AAC/B,aAAa,mBAAO,CAAC,uFAAgB;AACrC,+B;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B;AAC5B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yC;;;;;;;;;;;AC9Fa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,0BAA0B,GAAG,yBAAyB,GAAG,2BAA2B,GAAG,aAAa,GAAG,6BAA6B,GAAG,mBAAmB,GAAG,mBAAmB;AAChL,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,YAAY,mBAAO,CAAC,yFAAiB;AACrC,YAAY,mBAAO,CAAC,iGAAqB;AACzC,WAAW,mBAAO,CAAC,+EAAY;AAC/B,gBAAgB,mBAAO,CAAC,qFAAe;AACvC,aAAa,mBAAO,CAAC,mFAAc;AACnC,uBAAuB,mBAAO,CAAC,uFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yCAAyC,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,UAAU,kBAAkB,yBAAyB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B,aAAa,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAA4C,qCAAqC,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAA4C,qCAAqC,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,qCAAqC,GAAG,2CAA2C;AACvI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA,iDAAiD,GAAG,qCAAqC;AACzF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+DAA+D;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,eAAe,6BAA6B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,mBAAmB,mBAAmB,eAAe,mBAAmB;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,mBAAmB,mBAAmB,eAAe,mBAAmB;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAyD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4EAA4E;AACrG;AACA;AACA;AACA,aAAa;AACb,oCAAoC;AACpC;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uBAAuB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,0BAA0B;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,QAAQ;AACrH;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,qDAAqD;AACvJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAoD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yHAAyH,iBAAiB;AAC1I;AACA;AACA,qHAAqH,sDAAsD;AAC3K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qCAAqC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,qCAAqC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iEAAiE,MAAM;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA,iCAAiC,sBAAsB,YAAY,mBAAmB,GAAG,+DAA+D;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kCAAkC,IAAI,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kCAAkC,IAAI,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kCAAkC,IAAI,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,kCAAkC,IAAI,QAAQ;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kCAAkC;AACzF;AACA;AACA,uDAAuD,kCAAkC;AACzF;AACA;AACA,kDAAkD,qBAAqB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sEAAsE,WAAW;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,wBAAwB,oDAAoD;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,8BAA8B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,8BAA8B;AAC5F;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACbkCAAkC;AAClC;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,kDAAkD;AAClD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,sBAAsB;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,kHAAkH,SAAS,kBAAkB,EAAE;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,kC;;;;;;;;;;;AChnFa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB;AACvB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,cAAc,mBAAO,CAAC,sGAAgC;AACtD,WAAW,mBAAO,CAAC,+EAAY;AAC/B,iCAAiC,mBAAO,CAAC,2GAA0B;AACnE,2BAA2B,mBAAO,CAAC,+FAAoB;AACvD,+BAA+B,mBAAO,CAAC,uGAAwB;AAC/D,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D,oCAAoC,mBAAO,CAAC,iHAA6B;AACzE,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,2DAA2D;AAC/F,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA,wEAAwE,OAAO;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxuBAAuB;AACvB,yC;;;;;;;;;;;AC9rBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B;AAC5B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,yC;;;;;;;;;;;AC3Fa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,wBAAwB,GAAG,4BAA4B;AACvD,iBAAiB,mBAAO,CAAC,2EAAU;AACnC,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,2BAA2B,mBAAO,CAAC,+FAAoB;AACvD,uBAAuB,mBAAO,CAAC,uFAAgB;AAC/C,sBAAsB,mBAAO,CAAC,qFAAe;AAC7C,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,mBAAmB,mBAAO,CAAC,+EAAY;AACvC,wBAAwB,mBAAO,CAAC,yFAAiB;AACjD,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,yBAAyB,mBAAO,CAAC,2FAAkB;AACnD,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF,wC;;;;;;;;;;;AC5Da;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB,GAAG,4BAA4B;AACnD,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,yC;;;;;;;;;;;ACpFa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,0BAA0B;AAC1B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,uC;;;;;;;;;;;ACnDa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,8BAA8B,GAAG,8BAA8B,GAAG,8BAA8B,GAAG,6BAA6B,GAAG,6BAA6B,GAAG,6BAA6B;AAChM,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,kBAAkB,mBAAO,CAAC,wDAAW;AACrC,cAAc,mBAAO,CAAC,sGAAgC;AACtD,aAAa,mBAAO,CAAC,mFAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iBAAiB;AACjB;AACA;AACA,uEAAuE,uBAAuB,iBAAiB,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,eAAe;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,KAAK;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C,WAAW,QAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,0C;;;;;;;;;;;ACvQa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2BAA2B;AAC3B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,wC;;;;;;;;;;;AC5Ea;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0C;;;;;;;;;;;ACnDa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B;AAC5B,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,cAAc,mBAAO,CAAC,sGAAgC;AACtD,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,8C;;;;;;;;;;;ACnDa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB;AACvB,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,uBAAuB,mBAAO,CAAC,uFAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,oC;;;;;;;;;;;ACzCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB;AACpB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,WAAW,mBAAO,CAAC,+EAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sCAAsC,mGAAmG;AACzI;AACA;AACA;AACA;AACA,yHAAyH,qBAAqB;AAC9I,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA,mCAAmC,4CAA4C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,wC;;;;;;;;;;;ACjFa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,qD;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe,mBAAO,CAAC,sBAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,8C;;;;;;;;;;;ACda;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,4C;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kD;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,uBAAuB;AACvB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,WAAW,mBAAO,CAAC,sGAAgC;AACnD,WAAW,mBAAO,CAAC,+EAAY;AAC/B,iCAAiC,mBAAO,CAAC,2GAA0B;AACnE,2BAA2B,mBAAO,CAAC,+FAAoB;AACvD,+BAA+B,mBAAO,CAAC,uGAAwB;AAC/D,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D,6BAA6B,mBAAO,CAAC,mGAAsB;AAC3D,oCAAoC,mBAAO,CAAC,iHAA6B;AACzE,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvwBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpsBAAsB;AACtgFAAgF,qCAAqC;AACrH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChuBAAuB;AACvB,6C;;;;;;;;;;;ACv4Ba;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,0BAA0B,GAAG,sBAAsB;AACnD,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,WAAW,mBAAO,CAAC,+EAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,8C;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,aAAa,mBAAO,CAAC,sBAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,gD;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0C;;;;;;;;;;;ACtDa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,eAAe,mBAAO,CAAC,sBAAQ;AAC/B,iBAAiB,mBAAO,CAAC,2EAAU;AACnC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,WAAW,mBAAO,CAAC,+EAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,+FAA+F;AAC1L;AACA;AACA,6BAA6B;AAC7B,0C;;;;;;;;;;;AC3Ka;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF,iBAAiB,mBAAO,CAAC,2EAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,0C;;;;;;;;;;;ACpDa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,eAAe;AACf,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iC;;;;;;;;;;;AClEa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iBAAiB,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AAClL;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,8B;;;;;;;;;;;ACzDa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oBAAoB,GAAG,aAAa,GAAG,cAAc,GAAG,UAAU,GAAG,aAAa;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,UAAU;AACV,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACnF;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oBAAoB;AACpB,gC;;;;;;;;;;;ACjGa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,+BAA+B,GAAG,iBAAiB;AACnD,aAAa,mBAAO,CAAC,mFAAc;AACnC,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,yCAAyC,mBAAO,CAAC,sGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qCAAqC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B,4C;;;;;;;;;;;ACxIa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,sBAAsB,GAAG,sBAAsB,GAAG,qBAAqB;AACvE,WAAW,mBAAO,CAAC,oCAAe;AAClC,WAAW,mBAAO,CAAC,cAAI;AACvB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,WAAW,mBAAO,CAAC,uFAAoB;AACvC,uBAAuB,mBAAO,CAAC,+FAAwB;AACvD,iBAAiB,mBAAO,CAAC,mFAAkB;AAC3C,oBAAoB,mBAAO,CAAC,+EAAa;AACzC,eAAe,mBAAO,CAAC,kGAAqC;AAC5D,aAAa,mBAAO,CAAC,kGAAqC;AAC1D,aAAa,mBAAO,CAAC,6EAAe;AACpC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,iBAAiB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,wBAAwB,wBAAwB,iBAAiB;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA,8CAA8C,eAAe;AAC7D;AACA,mDAAmD,uBAAuB;AAC1E;AACA;AACA;AACA,oFAAoF,QAAQ;AAC5F;AACA;AACA;AACA;AACA;AACA,oDAAoD,yGAAyG;AAC7J;AACA;AACA,oDAAoD,4HAA4H;AAChL;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,wFAAwF,QAAQ;AAChG;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA,kDAAkD,eAAe;AACjE;AACA,uDAAuD,uBAAuB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qHAAqH;AAC9J;AACA;AACA,yCAAyC,sGAAsG;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2CAA2C;AACxF,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2CAA2C;AACxF,iCAAiC;AACjC,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,4EAA4E,gBAAgB;AAC5F;AACA;AACA;AACA;AACA,wCAAwC,4HAA4H;AACpK;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,gC;;;;;;;;;;;ACxea;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iBAAiB;AACjB,WAAW,mBAAO,CAAC,oCAAe;AAClC,eAAe,mBAAO,CAAC,kBAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qC;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACa;;AAEb,oHAA2C,C;;;;;;;;;;ACN3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,mBAAO,CAAC,qHAA2B;AACxD,OAAO,MAAM,GAAG,mBAAO,CAAC,+FAAgB;AACxC,YAAY,mBAAO,CAAC,mGAAkB;AACtC,cAAc,mBAAO,CAAC,qGAAmB;AACzC,eAAe,mBAAO,CAAC,4FAAU;AACjC,cAAc,mBAAO,CAAC,0FAAS;;;;;;;;;;;ACtI/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,MAAM;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,SAAS,GAAG,MAAM;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,oDAAW;AAC/B,uBAAuB,YAAY;;AAEnC,qBAAqB,mBAAO,CAAC,qHAA2B;AACxD,mBAAmB,mBAAO,CAAC,oGAAc;AACzC,cAAc,mBAAO,CAAC,qGAAmB;AACzC,eAAe,mBAAO,CAAC,4FAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,+FAAgB;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AAC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AAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7fA,cAAc,mBAAO,CAAC,qGAAmB;AACzC,OAAO,+BAA+B,GAAG,mBAAO,CAAC,6GAAuB;AACxE,OAAO,QAAQ,GAAG,mBAAO,CAAC,+FAAgB;;AAE1C,qBAAqB,mBAAO,CAAC,qHAA2B;AACxD,OAAO,qBAAqB,GAAG,mBAAO,CAAC,iHAAyB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,8CAA8C,QAAQ;AACtD;;AAEA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8CAA8C,QAAQ;AACtD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,WAAW,GAAG,WAAW,GAAG,WAAW;AAC7D;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9RA,cAAc,mBAAO,CAAC,4FAAS;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,sFAAM;AACzB,YAAY,mBAAO,CAAC,wFAAO;AAC3B,WAAW,mBAAO,CAAC,sFAAM;AACzB,YAAY,mBAAO,CAAC,wFAAO;AAC3B,WAAW,mBAAO,CAAC,sFAAM;AACzB,YAAY,mBAAO,CAAC,wFAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,GAAG;AAClD;AACA;AACA;;;;;;;;;;;AC/CA,eAAe,mBAAO,CAAC,qGAAmB;AAC1C,cAAc,mBAAO,CAAC,4FAAS;AAC/B,OAAO,MAAM,GAAG,mBAAO,CAAC,+FAAgB;;AAExC;AACA;AACA;AA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E,wBAAwB;;AAEzE;AACA,mCAAmC,YAAY,OAAO,kBAAkB;AACxE,8BAA8B,YAAY,OAAO,iBAAiB;;AAElE;AACA;AACA,uCAAuC;AACvC,CAAC,OAAO,kBAAkB,GAAG,mBAAmB;AAChD,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA,yCAAyC,wBAAwB;AACjE;AACA,4BAA4B,wBAAwB;AACpD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrLA;AACA,gBAAgB,mBAAO,CAAC,6FAAW;AACnC;AACA;;;;;;;;;;;ACHA,cAAc,mBAAO,CAAC,mGAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA,gBAAgB,mBAAO,CAAC,6FAAW;AACnC;AACA;AACA;;;;;;;;;;;ACHA,eAAe,mBAAO,CAAC,qGAAmB;AAC1C,cAAc,mBAAO,CAAC,mGAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,qGAAmB;AAC1C,cAAc,mBAAO,CAAC,mGAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACvBA,eAAe,mBAAO,CAAC,qGAAmB;AAC1C,cAAc,mBAAO,CAAC,mGAAkB;AACxC,WAAW,mBAAO,CAAC,iGAAiB;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC3DA,eAAe,mBAAO,CAAC,qGAAmB;AAC1C,mBAAmB,mBAAO,CAAC,6GAAuB;AAClD,OAAO,IAAI;AACX,cAAc,mBAAO,CAAC,mGAAkB;AACxC,kBAAkB,mBAAO,CAAC,+GAAwB;AAClD,WAAW,mBAAO,CAAC,iGAAiB;AACpC,WAAW,mBAAO,CAAC,iGAAiB;AACpC,YAAY,mBAAO,CAAC,mGAAkB;AACtC,YAAY,mBAAO,CAAC,mGAAkB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/EA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,kHAA2B;AACrD,gBAAgB,mBAAO,CAAC,8GAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,uBAAuB,IAAI;AAC3B;AACA,qBAAqB,IAAI,KAAK,IAAI;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3CA,cAAc,mBAAO,CAAC,sGAAqB;AAC3C,mBAAmB,mBAAO,CAAC,gHAA0B;AACrD,OAAO,MAAM;AACb,kBAAkB,mBAAO,CAAC,kHAA2B;AACrD,gBAAgB,mBAAO,CAAC,8GAAyB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtcAAc,mBAAO,CAAC,mGAAkB;;AAExC;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACPA,cAAc,mBAAO,CAAC,mGAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qBAAqB,GAAG,gCAAgC;AACxD,aAAa,mBAAO,CAAC,sEAAgB;AACrC,aAAa,mBAAO,CAAC,+FAA6B;AAClD,aAAa,mBAAO,CAAC,wFAAY;AACjC,aAAa,mBAAO,CAAC,wFAAY;AACjC,mBAAmB,mBAAO,CAAC,4FAAc;AACzC,4DAA2D,CAAC,qCAAqC,8CAA8C,EAAE,EAAE,EAAC;AACpJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE,+B;;;;;;;;;;;AC1Ca;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gCAAgC;AAChC,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,gCAAgC;AAChC,sC;;;;;;;;;;;ACfa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gCAAgC,GAAG,iCAAiC,GAAG,2BAA2B,GAAG,4BAA4B,GAAG,wBAAwB;AAC5J,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,4CAA4C,eAAe;AAC3D,4CAA4C,eAAe;AAC3D;AACA,oC;;;;;;;;;;;ACzCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,yCAAyC,GAAG,yCAAyC,GAAG,mCAAmC;AAC3H,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wEAAwE,mCAAmC,KAAK;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI,kD;;;;;;;;;;;ACvCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gCAAgC,GAAG,4BAA4B;AAC/D,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG,kD;;;;;;;;;;;AC7Ba;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,4BAA4B;AAC5B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F,kD;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,0BAA0B;AAC1B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF,gD;;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,8BAA8B,GAAG,kCAAkC,GAAG,kCAAkC,GAAG,8BAA8B,GAAG,kCAAkC,GAAG,8BAA8B,GAAG,gCAAgC;AAClP,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG,mD;;;;;;;;;;;AC3Fa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2BAA2B,GAAG,wBAAwB;AACtD,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF,iD;;;;;;;;;;;ACrCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,w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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sFAAsF,0CAA0C,KAAK;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF,wCAAwC,KAAK;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF,wCAAwC,KAAK;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F,4CAA4C,KAAK;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oFAAoF,yCAAyC,KAAK;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C,oBAAoB,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD,yBAAyB,KAAK;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE,gCAAgC,KAAK;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gFAAgF,uCAAuC,KAAK;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C,qBAAqB,KAAK;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D,4BAA4B,KAAK;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G,oC;;;;;;;;;;;AClvBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,iCAAiC;AACjC,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE,iCAAiC,KAAK;AAC3G,uD;;;;;;;;;;;AClBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,sBAAsB,GAAG,mBAAmB,GAAG,uBAAuB;AACtE,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD,uBAAuB,KAAK;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E,4C;;;;;;;;;;;ACnEa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,0CAA0C,GAAG,qCAAqC,GAAG,wBAAwB;AAC7G,yBAAyB,mBAAO,CAAC,sEAAgB;AACjD,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD,wBAAwB,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E,qCAAqC,KAAK;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sFAAsF,0CAA0C,KAAK;AACtI,6C;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F,mD;;;;;;;;;;;ACnBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,oCAAoC,GAAG,kCAAkC,GAAG,kCAAkC,GAAG,6BAA6B,GAAG,sCAAsC,GAAG,mBAAmB,GAAG,sBAAsB,GAAG,8BAA8B,GAAG,0BAA0B;AACpS,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD,0BAA0B,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D,8BAA8B,KAAK;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C,sBAAsB,KAAK;AAC1E;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA,CAAC,8EAA8E,sCAAsC,KAAK;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE,kCAAkC,KAAK;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E,oCAAoC,KAAK;AACpH,mD;;;;;;;;;;;ACtHa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,2BAA2B;AAC3B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD,2BAA2B,KAAK;AACzF,iD;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6BAA6B;AAC7B,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D,6BAA6B,KAAK;AAC/F,mD;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,6CAA6C,GAAG,+BAA+B;AAC/E,mBAAmB,mBAAO,CAAC,wFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE,+BAA+B,KAAK;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4FAA4F,6CAA6C,KAAK;AAC/I,qD;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACa;AACb,8CAA6C,CAAC,cAAc,EAAC;AAC7D,qBAAqB,GAAG,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,GAAG,YAAY,GAAG,aAAa,GAAG,cAAc,GAAG,cAAc,GAAG,eAAe;AACnK;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8B;;;;;;;;;;;AC9Ca;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,8CAA6C,CAAC,cAAc,EAAC;AAC7D,gCAAgC;AAChC,eAAe,mBAAO,CAAC,kEAAqB;AAC5C,aAAa,mBAAO,CAAC,kEAAqB;AAC1C,aAAa,mBAAO,CAAC,sFAAe;AACpC;AACA;AACA;AACA,gCAAgC;AAChC,gC;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACa;;AAEb,6HAA2C,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN3C;AACA;AACA;AACA;AACa;AACN;AACP;AACA;AACA;AACA,CAAC,0BAA0B;AACpB;AACP;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AACtB;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0FAA0F;AAC3F;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C,IAAI;AACjF;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;;;;;ACn3DL;AACZ;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;;;;;;;;;;;;ACPY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,yCAAyC,OAAO;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA,+BAA+B,iBAAiB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6BAA6B;AAClE;AACA;AACA,QAAQ,2BAA2B;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2BAA2B;AAC1E;AACA;AACA,QAAQ,6BAA6B;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,8BAA8B;AACnE;AACA;;AAEA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,EAAE,mBAAO,CAAC,yDAAe;AACzB,CAAC;;;;;;;;;;;;ACzaD,2C;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;UCNA;UACA;UACA;UACA","file":"extension.js","sourcesContent":["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","import * as path from \"path\";\r\nimport * as stream from \"stream\";\r\nimport { CancellationToken, CodeActionContext, CompletionContext, CompletionItem, CompletionItemKind, MarkdownString, workspace, Position, Range, TextDocument, window } from \"vscode\";\r\nimport { ExecuteCommandSignature, HandleWorkDoneProgressSignature, LanguageClientOptions, Location, Middleware, ProgressToken, ProvideCodeActionsSignature, ProvideCompletionItemsSignature, ProvideHoverSignature, ResolveCompletionItemSignature, TextDocumentPositionParams, WorkDoneProgressBegin, WorkDoneProgressEnd, WorkDoneProgressReport, WorkspaceEdit } from \"vscode-languageclient\";\r\nimport { LanguageClient, StreamInfo } from \"vscode-languageclient/node\";\r\nimport { AnalyzerStatusNotification, CompleteStatementRequest, DiagnosticServerRequest, ReanalyzeRequest, SuperRequest } from \"../../shared/analysis/lsp/custom_protocol\";\r\nimport { Analyzer } from \"../../shared/analyzer\";\r\nimport { hetuLSPPath, dartVMPath, validClassNameRegex, validMethodNameRegex } from \"../../shared/constants\";\r\nimport { LogCategory } from \"../../shared/enums\";\r\nimport { DartSdks, Logger } from \"../../shared/interfaces\";\r\nimport { CategoryLogger } from \"../../shared/logging\";\r\nimport { WorkspaceContext } from \"../../shared/workspace\";\r\nimport { config } from \"../config\";\r\nimport { HETU_MODE } from \"../extension\";\r\nimport { reportAnalyzerTerminatedWithError } from \"../utils/misc\";\r\nimport { safeToolSpawn } from \"../utils/processes\";\r\nimport { getAnalyzerArgs } from \"./analyzer\";\r\nimport { LspFileTracker } from \"./file_tracker_lsp\";\r\n\r\nexport class LspAnalyzer extends Analyzer {\r\n  public readonly client: LanguageClient;\r\n  public readonly fileTracker: LspFileTracker;\r\n\r\n  constructor(logger: Logger, sdks: DartSdks, wsContext: WorkspaceContext) {\r\n    super(new CategoryLogger(logger, LogCategory.Analyzer));\r\n    this.client = createClient(this.logger, sdks, wsContext, this.buildMiddleware());\r\n    this.fileTracker = new LspFileTracker(logger, this.client, wsContext);\r\n    this.disposables.push(this.client.start());\r\n    this.disposables.push(this.fileTracker);\r\n\r\n    // tslint:disable-next-line: no-floating-promises\r\n    this.client.onReady().then(() => {\r\n      // Reminder: These onNotification calls only hold ONE handler!\r\n      // https://github.com/microsoft/vscode-languageserver-node/issues/174\r\n      // TODO: Remove this once Dart/Flutter stable LSP servers are using $/progress.\r\n      this.client.onNotification(AnalyzerStatusNotification.type, (params) => {\r\n        this.onAnalysisStatusChangeEmitter.fire({ isAnalyzing: params.isAnalyzing });\r\n      });\r\n      this.onReadyCompleter.resolve();\r\n    });\r\n  }\r\n\r\n  private buildMiddleware(): Middleware {\r\n    // Why need this 🤷‍♂️?\r\n    function isLanguageValuePair(input: any): input is { language: string; value: string } {\r\n      return \"language\" in input && typeof input.language === \"string\" && \"value\" in input && typeof input.value === \"string\";\r\n    }\r\n\r\n    return {\r\n      handleWorkDoneProgress: (token: ProgressToken, params: WorkDoneProgressBegin | WorkDoneProgressReport | WorkDoneProgressEnd, next: HandleWorkDoneProgressSignature) => {\r\n        if (params.kind === \"begin\")\r\n          this.onAnalysisStatusChangeEmitter.fire({ isAnalyzing: true, suppressProgress: true });\r\n        else if (params.kind === \"end\")\r\n          this.onAnalysisStatusChangeEmitter.fire({ isAnalyzing: false, suppressProgress: true });\r\n\r\n        next(token, params);\r\n      },\r\n\r\n      resolveCompletionItem: (item: CompletionItem, token: CancellationToken, next: ResolveCompletionItemSignature) => {\r\n        return next(item, token);\r\n      },\r\n\r\n      provideHover: async (document: TextDocument, position: Position, token: CancellationToken, next: ProvideHoverSignature) => {\r\n        const item = await next(document, position, token);\r\n        return item;\r\n      },\r\n\r\n      executeCommand: async (command: string, args: any[], next: ExecuteCommandSignature) => {\r\n        if (command === \"refactor.perform\") {\r\n          const expectedCount = 6;\r\n          if (args && args.length === expectedCount) {\r\n            const refactorFailedErrorCode = -32011;\r\n            const refactorKind = args[0];\r\n            const optionsIndex = 5;\r\n            // Intercept EXTRACT_METHOD and EXTRACT_WIDGET to prompt the user for a name, since\r\n            // LSP doesn't currently allow us to prompt during a code-action invocation.\r\n            let name: string | undefined;\r\n            switch (refactorKind) {\r\n              case \"EXTRACT_METHOD\":\r\n                name = await window.showInputBox({\r\n                  prompt: \"Enter a name for the method\",\r\n                  validateInput: (s) => validMethodNameRegex.test(s) ? undefined : \"Enter a valid method name\",\r\n                  value: \"newMethod\",\r\n                });\r\n                if (!name)\r\n                  return;\r\n                args[optionsIndex] = Object.assign({}, args[optionsIndex], { name });\r\n                break;\r\n              case \"EXTRACT_WIDGET\":\r\n                name = await window.showInputBox({\r\n                  prompt: \"Enter a name for the widget\",\r\n                  validateInput: (s) => validClassNameRegex.test(s) ? undefined : \"Enter a valid widget name\",\r\n                  value: \"NewWidget\",\r\n                });\r\n                if (!name)\r\n                  return;\r\n                args[optionsIndex] = Object.assign({}, args[optionsIndex], { name });\r\n                break;\r\n            }\r\n\r\n            // The server may return errors for things like invalid names, so\r\n            // capture the errors and present the error better if it's a refactor\r\n            // error.\r\n            try {\r\n              return await next(command, args);\r\n            } catch (e) {\r\n              if (e?.code === refactorFailedErrorCode) {\r\n                window.showErrorMessage(e.message);\r\n                return;\r\n              } else {\r\n                throw e;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return next(command, args);\r\n      },\r\n    };\r\n  }\r\n\r\n  public async getDiagnosticServerPort(): Promise<{ port: number }> {\r\n    return this.client.sendRequest(DiagnosticServerRequest.type);\r\n  }\r\n\r\n  public async forceReanalyze(): Promise<void> {\r\n    try {\r\n      return await this.client.sendRequest(ReanalyzeRequest.type);\r\n    } catch (e) {\r\n      window.showErrorMessage(\"Reanalyze is not supported by this version of the Dart SDK's LSP server.\");\r\n    }\r\n  }\r\n\r\n  public async getSuper(params: TextDocumentPositionParams): Promise<Location | null> {\r\n    return this.client.sendRequest(\r\n      SuperRequest.type,\r\n      params,\r\n    );\r\n  }\r\n\r\n  public async completeStatement(params: TextDocumentPositionParams): Promise<WorkspaceEdit | null> {\r\n    return this.client.sendRequest(\r\n      CompleteStatementRequest.type,\r\n      params,\r\n    );\r\n  }\r\n}\r\n\r\nfunction createClient(logger: Logger, sdks: DartSdks, wsContext: WorkspaceContext, middleware: Middleware): LanguageClient {\r\n  const clientOptions: LanguageClientOptions = {\r\n    // Register the server for plain text documents\r\n    // documentSelector: [{ scheme: 'file', language: 'plaintext' }],\r\n    // synchronize: {\r\n    //   // Notify the server about file changes to '.clientrc files contained in the workspace\r\n    //   fileEvents: workspace.createFileSystemWatcher('**/.clientrc')\r\n    // }\r\n    initializationOptions: {\r\n      // \tonlyAnalyzeProjectsWithOpenFiles: true,\r\n      closingLabels: config.closingLabels,\r\n      outline: true,\r\n      suggestFromUnimportedLibraries: config.autoImportCompletions,\r\n    },\r\n    middleware,\r\n    outputChannelName: \"LSP\",\r\n  };\r\n\r\n  const client = new LanguageClient(\r\n    \"hetuLanguageServer\",\r\n    \"Hetu Language Server\",\r\n    () => spawnServer(logger, sdks),\r\n    clientOptions,\r\n  );\r\n\r\n  return client;\r\n}\r\n\r\nfunction spawnServer(logger: Logger, sdks: DartSdks): Promise<StreamInfo> {\r\n  // TODO: Replace with constructing an Analyzer that passes LSP flag (but still reads config\r\n  // from paths etc) and provide it's process.\r\n  const vmPath = path.join(sdks.dart, dartVMPath);\r\n  // const args = getAnalyzerArgs(logger, sdks);\r\n  const hetuLangServerPath = path.join(__dirname, hetuLSPPath);\r\n  const args = ['run', hetuLangServerPath];\r\n\r\n  logger.info(`Executing command: [${vmPath} run ${hetuLangServerPath}]`);\r\n  const process = safeToolSpawn(undefined, vmPath, args);\r\n  logger.info(`    PID: ${process.pid}`);\r\n\r\n  const reader = process.stdout.pipe(new LoggingTransform(logger, \"<==\"));\r\n  const writer = new LoggingTransform(logger, \"==>\");\r\n  writer.pipe(process.stdin);\r\n\r\n  process.stderr.on(\"data\", (data) => logger.error(data.toString()));\r\n  process.on(\"exit\", (code, signal) => {\r\n    if (code)\r\n      reportAnalyzerTerminatedWithError();\r\n  });\r\n\r\n  return Promise.resolve({ reader, writer });\r\n}\r\n\r\nclass LoggingTransform extends stream.Transform {\r\n  constructor(private readonly logger: Logger, private readonly prefix: string, opts?: stream.TransformOptions) {\r\n    super(opts);\r\n  }\r\n  public _transform(chunk: any, encoding: BufferEncoding, callback: () => void): void {\r\n    this.logger.info(`${this.prefix} ${chunk}`);\r\n    this.push(chunk, encoding);\r\n    callback();\r\n  }\r\n}\r\n","import { CancellationToken, TextDocument, Uri, workspace } from \"vscode\";\r\nimport { LanguageClient } from \"vscode-languageclient/node\";\r\nimport { FlutterOutline, FlutterOutlineParams, Outline, OutlineParams, PublishFlutterOutlineNotification, PublishOutlineNotification } from \"../../shared/analysis/lsp/custom_protocol\";\r\nimport { EventEmitter } from \"../../shared/events\";\r\nimport { IAmDisposable, Logger } from \"../../shared/interfaces\";\r\nimport { disposeAll } from \"../../shared/utils\";\r\nimport { fsPath } from \"../../shared/utils/fs\";\r\nimport { waitFor } from \"../../shared/utils/promises\";\r\nimport { lspToPosition } from \"../../shared/vscode/utils\";\r\nimport { WorkspaceContext } from \"../../shared/workspace\";\r\nimport { locateBestProjectRoot } from \"../project\";\r\nimport * as util from \"../utils\";\r\n\r\nexport class LspFileTracker implements IAmDisposable {\r\n\tprivate disposables: IAmDisposable[] = [];\r\n\tprivate readonly outlines: { [key: string]: Outline } = {};\r\n\tprivate readonly flutterOutlines: { [key: string]: FlutterOutline } = {};\r\n\tprivate readonly pubRunTestSupport: { [key: string]: boolean } = {};\r\n\r\n\tprotected readonly onOutlineEmitter = new EventEmitter<OutlineParams>();\r\n\tpublic readonly onOutline = this.onOutlineEmitter.event;\r\n\tprotected readonly onFlutterOutlineEmitter = new EventEmitter<FlutterOutlineParams>();\r\n\tpublic readonly onFlutterOutline = this.onFlutterOutlineEmitter.event;\r\n\r\n\tconstructor(private readonly logger: Logger, private readonly analyzer: LanguageClient, private readonly wsContext: WorkspaceContext) {\r\n\t\t// tslint:disable-next-line: no-floating-promises\r\n\t\tanalyzer.onReady().then(() => {\r\n\t\t\tthis.analyzer.onNotification(PublishOutlineNotification.type, (n) => {\r\n\t\t\t\tconst filePath = fsPath(Uri.parse(n.uri));\r\n\t\t\t\tthis.outlines[filePath] = n.outline;\r\n\t\t\t\tthis.onOutlineEmitter.fire(n);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic getOutlineFor(file: { fsPath: string } | string): Outline | undefined {\r\n\t\treturn this.outlines[fsPath(file)];\r\n\t}\r\n\t\r\n\t// TODO: Change this to withVersion when server sends versions.\r\n\tpublic async waitForOutlineWithLength(document: TextDocument, length: number, token: CancellationToken): Promise<Outline | undefined> {\r\n\t\treturn waitFor(() => {\r\n\t\t\tconst outline = this.outlines[fsPath(document.uri)];\r\n\t\t\treturn outline && document.offsetAt(lspToPosition(outline.range.end)) === length ? outline : undefined;\r\n\t\t}, 50, 5000, token);\r\n\t}\r\n\r\n\tpublic dispose(): any {\r\n\t\tdisposeAll(this.disposables);\r\n\t}\r\n}\r\n","import * as vs from \"vscode\";\r\nimport { SpawnedProcess } from \"../../shared/interfaces\";\r\n\r\nconst channels: { [key: string]: vs.OutputChannel } = {};\r\n\r\nexport function getOutputChannel(name: string, insertDivider = false): vs.OutputChannel {\r\n\tif (!channels[name]) {\r\n\t\tchannels[name] = vs.window.createOutputChannel(name);\r\n\t} else if (insertDivider) {\r\n\t\tconst ch = channels[name];\r\n\t\tch.appendLine(\"\");\r\n\t\tch.appendLine(\"--\");\r\n\t\tch.appendLine(\"\");\r\n\t}\r\n\r\n\treturn channels[name];\r\n}\r\n\r\nexport function runProcessInOutputChannel(process: SpawnedProcess, channel: vs.OutputChannel) {\r\n\tprocess.stdout.on(\"data\", (data) => channel.append(data.toString()));\r\n\tprocess.stderr.on(\"data\", (data) => channel.append(data.toString()));\r\n\tprocess.on(\"close\", (code) => channel.appendLine(`exit code ${code}`));\r\n}\r\n\r\n","import { ConfigurationTarget, Uri, workspace, WorkspaceConfiguration } from \"vscode\";\r\nimport { NullAsUndefined, nullToUndefined } from \"../shared/utils\";\r\nimport { createFolderForFile, resolvePaths } from \"./utils\";\r\nimport { setupToolEnv } from \"./utils/processes\";\r\n\r\nclass Config {\r\n\tprivate config: WorkspaceConfiguration;\r\n\r\n\tconstructor() {\r\n\t\tworkspace.onDidChangeConfiguration((e) => this.reloadConfig());\r\n\t\tthis.config = workspace.getConfiguration(\"hetu\");\r\n\t\tsetupToolEnv(this.env);\r\n\t}\r\n\r\n\tprivate reloadConfig() {\r\n\t\tthis.config = workspace.getConfiguration(\"hetu\");\r\n\t\tsetupToolEnv(this.env);\r\n\t}\r\n\r\n\tprivate getConfig<T>(key: string, defaultValue: T): NullAsUndefined<T> {\r\n\t\tconst value = this.config.get<T>(key, defaultValue);\r\n\t\treturn nullToUndefined(value);\r\n\t}\r\n\r\n\tprivate getWorkspaceConfig<T>(key: string): NullAsUndefined<T> {\r\n\t\tconst c = this.config.inspect<T>(key);\r\n\r\n\t\tif (c && c.workspaceValue)\r\n\t\t\treturn nullToUndefined(c.workspaceValue);\r\n\r\n\t\tif (c && c.workspaceFolderValue)\r\n\t\t\treturn nullToUndefined(c.workspaceFolderValue);\r\n\r\n\t\treturn undefined as NullAsUndefined<T>;\r\n\t}\r\n\r\n\tprivate async setConfig<T>(key: string, value: T, target: ConfigurationTarget): Promise<void> {\r\n\t\tawait this.config.update(key, value, target);\r\n\t}\r\n\r\n\tget additionalAnalyzerFileExtensions(): string[] { return this.getConfig<string[]>(\"additionalAnalyzerFileExtensions\", []); }\r\n\tget allowAnalytics(): boolean { return this.getConfig<boolean>(\"allowAnalytics\", true); }\r\n\tget allowTestsOutsideTestFolder(): boolean { return this.getConfig<boolean>(\"allowTestsOutsideTestFolder\", false); }\r\n\tget analysisServerFolding(): boolean { return this.getConfig<boolean>(\"analysisServerFolding\", true); }\r\n\tget analyzeAngularTemplates(): boolean { return this.getConfig<boolean>(\"analyzeAngularTemplates\", true); }\r\n\tget analyzerAdditionalArgs(): string[] { return this.getConfig<string[]>(\"analyzerAdditionalArgs\", []); }\r\n\tget analyzerDiagnosticsPort(): undefined | number { return this.getConfig<null | number>(\"analyzerDiagnosticsPort\", null); }\r\n\tget analyzerInstrumentationLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"analyzerInstrumentationLogFile\", null))); }\r\n\tget analyzerLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"analyzerLogFile\", null))); }\r\n\tget analyzerPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"analyzerPath\", null)); }\r\n\tget analyzerSshHost(): undefined | string { return this.getConfig<null | string>(\"analyzerSshHost\", null); }\r\n\tget analyzerVmServicePort(): undefined | number { return this.getConfig<null | number>(\"analyzerVmServicePort\", null); }\r\n\tget autoImportCompletions(): boolean { return this.getConfig<boolean>(\"autoImportCompletions\", true); }\r\n\tget automaticCommentSlashes(): \"none\" | \"tripleSlash\" | \"all\" { return this.getConfig<\"none\" | \"tripleSlash\" | \"all\">(\"automaticCommentSlashes\", \"tripleSlash\"); }\r\n\tget buildRunnerAdditionalArgs(): string[] { return this.getConfig<string[]>(\"buildRunnerAdditionalArgs\", []); }\r\n\tget checkForSdkUpdates(): boolean { return this.getConfig<boolean>(\"checkForSdkUpdates\", true); }\r\n\tget cliConsole(): \"debugConsole\" | \"terminal\" | \"externalTerminal\" { return this.getConfig<\"debugConsole\" | \"terminal\" | \"externalTerminal\">(\"cliConsole\", \"debugConsole\"); }\r\n\tget closingLabels(): boolean { return this.getConfig<boolean>(\"closingLabels\", true); }\r\n\tget debugExtensionBackendProtocol(): \"sse\" | \"ws\" { return this.getConfig<\"sse\" | \"ws\">(\"debugExtensionBackendProtocol\", \"ws\"); }\r\n\tget debugExternalLibraries(): boolean { return this.getConfig<boolean>(\"debugExternalLibraries\", false); }\r\n\tget debugSdkLibraries(): boolean { return this.getConfig<boolean>(\"debugSdkLibraries\", false); }\r\n\tget devToolsBrowser(): \"chrome\" | \"default\" { return this.getConfig<\"chrome\" | \"default\">(\"devToolsBrowser\", \"chrome\"); }\r\n\tget devToolsLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"devToolsLogFile\", null))); }\r\n\tget devToolsPort(): undefined | number { return this.getConfig<null | number>(\"devToolsPort\", null); }\r\n\tget devToolsReuseWindows(): boolean { return this.getConfig<boolean>(\"devToolsReuseWindows\", true); }\r\n\tget devToolsTheme(): \"dark\" | \"light\" { return this.getConfig<\"dark\" | \"light\">(\"devToolsTheme\", \"dark\"); }\r\n\tget embedDevTools(): boolean { return this.getConfig<boolean>(\"embedDevTools\", true); }\r\n\tget enableSdkFormatter(): boolean { return this.getConfig<boolean>(\"enableSdkFormatter\", true); }\r\n\tget enableServerSnippets(): boolean { return this.getConfig<boolean>(\"enableServerSnippets\", false); }\r\n\tget enableSnippets(): boolean { return this.getConfig<boolean>(\"enableSnippets\", true); }\r\n\tget env(): any { return this.getConfig<any>(\"env\", {}); }\r\n\tget evaluateToStringInDebugViews(): boolean { return this.getConfig<boolean>(\"evaluateToStringInDebugViews\", true); }\r\n\tget experimentalDartDapPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"experimentalDartDapPath\", null)); }\r\n\tget extensionLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"extensionLogFile\", null))); }\r\n\tget flutterAdbConnectOnChromeOs(): boolean { return this.getConfig<boolean>(\"flutterAdbConnectOnChromeOs\", false); }\r\n\tget flutterCreateAndroidLanguage(): \"java\" | \"kotlin\" { return this.getConfig<\"java\" | \"kotlin\">(\"flutterCreateAndroidLanguage\", \"kotlin\"); }\r\n\tget flutterCreateIOSLanguage(): \"objc\" | \"swift\" { return this.getConfig<\"objc\" | \"swift\">(\"flutterCreateIOSLanguage\", \"swift\"); }\r\n\tget flutterCreateOffline(): boolean { return this.getConfig<boolean>(\"flutterCreateOffline\", false); }\r\n\tget flutterCreateOrganization(): undefined | string { return this.getConfig<null | string>(\"flutterCreateOrganization\", null); }\r\n\tget flutterCustomEmulators(): Array<{ id: string, name: string, executable: string, args?: string[] }> { return this.getConfig<Array<{ id: string, name: string, executable: string, args?: string[] }>>(\"flutterCustomEmulators\", []); }\r\n\tget flutterDaemonLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterDaemonLogFile\", null))); }\r\n\tget flutterGutterIcons(): boolean { return this.getConfig<boolean>(\"flutterGutterIcons\", true); }\r\n\tget flutterHotReloadOnSave(): \"never\" | \"always\" | \"manual\" {\r\n\t\tconst value = this.getConfig<\"never\" | \"always\" | \"manual\" | true | false>(\"flutterHotReloadOnSave\", \"manual\");\r\n\r\n\t\t// Convert the legacy bool value to its new enum type, if required.\r\n\t\tif (value === true)\r\n\t\t\treturn \"manual\";\r\n\t\telse if (value === false)\r\n\t\t\treturn \"never\";\r\n\t\telse\r\n\t\t\treturn value;\r\n\t}\r\n\tget flutterHotRestartOnSave(): boolean { return this.getConfig<boolean>(\"flutterHotRestartOnSave\", true); }\r\n\tget flutterOutline(): boolean { return this.getConfig<boolean>(\"flutterOutline\", true); }\r\n\tget flutterRunLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterRunLogFile\", null))); }\r\n\tget flutterScreenshotPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"flutterScreenshotPath\", null)); }\r\n\tget flutterSdkPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"flutterSdkPath\", null)); }\r\n\tget flutterSdkPaths(): string[] { return this.getConfig<string[]>(\"flutterSdkPaths\", []).map(resolvePaths); }\r\n\tget flutterSelectDeviceWhenConnected(): boolean { return this.getConfig<boolean>(\"flutterSelectDeviceWhenConnected\", true); }\r\n\tget flutterShowEmulators(): \"local\" | \"always\" { return this.getConfig<\"local\" | \"always\">(\"flutterShowEmulators\", \"local\"); }\r\n\tget flutterShowWebServerDevice(): \"remote\" | \"always\" { return this.getConfig<\"remote\" | \"always\">(\"flutterShowWebServerDevice\", \"remote\"); }\r\n\tget flutterTestLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterTestLogFile\", null))); }\r\n\tget flutterWebRenderer(): \"auto\" | \"html\" | \"canvaskit\" { return this.getConfig<\"auto\" | \"html\" | \"canvaskit\">(\"flutterWebRenderer\", \"auto\"); }\r\n\tget hotReloadProgress(): \"notification\" | \"statusBar\" { return this.getConfig<\"notification\" | \"statusBar\">(\"hotReloadProgress\", \"notification\"); }\r\n\tget lspSnippetTextEdits(): boolean { return this.getConfig<boolean>(\"lspSnippetTextEdits\", true); }\r\n\tget maxLogLineLength(): number { return this.getConfig<number>(\"maxLogLineLength\", 2000); }\r\n\tget notifyAnalyzerErrors(): boolean { return this.getConfig<boolean>(\"notifyAnalyzerErrors\", true); }\r\n\tget openDevTools(): \"never\" | \"flutter\" | \"always\" { return this.getConfig<\"never\" | \"flutter\" | \"always\">(\"openDevTools\", \"never\"); }\r\n\tget openTestView(): Array<\"testRunStart\" | \"testFailure\"> { return this.getConfig<Array<\"testRunStart\" | \"testFailure\">>(\"openTestView\", [\"testRunStart\"]); }\r\n\tget previewBazelWorkspaceCustomScripts(): boolean { return this.getConfig<boolean>(\"previewBazelWorkspaceCustomScripts\", false); }\r\n\tget previewCommitCharacters(): boolean { return this.getConfig<boolean>(\"previewCommitCharacters\", false); }\r\n\tget previewFlutterUiGuides(): boolean { return this.getConfig<boolean>(\"previewFlutterUiGuides\", false); }\r\n\tget previewFlutterUiGuidesCustomTracking(): boolean { return this.getConfig<boolean>(\"previewFlutterUiGuidesCustomTracking\", false); }\r\n\tget previewHotReloadOnSaveWatcher(): boolean { return this.getConfig<boolean>(\"previewHotReloadOnSaveWatcher\", false); }\r\n\tget previewLsp(): undefined | boolean { return this.getConfig<null | boolean>(\"previewLsp\", null); }\r\n\tget promptToRunIfErrors(): boolean { return this.getConfig<boolean>(\"promptToRunIfErrors\", true); }\r\n\tget pubTestLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"pubTestLogFile\", null))); }\r\n\tget sdkPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"sdkPath\", null)); }\r\n\tget sdkPaths(): string[] { return this.getConfig<string[]>(\"sdkPaths\", []).map(resolvePaths); }\r\n\tget shareDevToolsWithFlutter(): boolean { return this.getConfig<boolean>(\"shareDevToolsWithFlutter\", true); }\r\n\tget showDartPadSampleCodeLens(): boolean { return this.getConfig<boolean>(\"showDartPadSampleCodeLens\", true); }\r\n\tget showDevToolsDebugToolBarButtons(): boolean { return this.getConfig<boolean>(\"showDevToolsDebugToolBarButtons\", true); }\r\n\tget showIgnoreQuickFixes(): boolean { return this.getConfig<boolean>(\"showIgnoreQuickFixes\", true); }\r\n\tget showInspectorNotificationsForWidgetErrors(): boolean { return this.getConfig<boolean>(\"showInspectorNotificationsForWidgetErrors\", true); }\r\n\tget showMainCodeLens(): boolean { return this.getConfig<boolean>(\"showMainCodeLens\", true); }\r\n\tget showSkippedTests(): boolean { return this.getConfig<boolean>(\"showSkippedTests\", true); }\r\n\tget showTestCodeLens(): boolean { return this.getConfig<boolean>(\"showTestCodeLens\", true); }\r\n\tget showTodos(): boolean { return this.getConfig<boolean>(\"showTodos\", true); }\r\n\tget triggerSignatureHelpAutomatically(): boolean { return this.getConfig<boolean>(\"triggerSignatureHelpAutomatically\", false); }\r\n\tget updateImportsOnRename(): boolean { return this.getConfig<boolean>(\"updateImportsOnRename\", true); }\r\n\tget useKnownChromeOSPorts(): boolean { return this.getConfig<boolean>(\"useKnownChromeOSPorts\", true); }\r\n\tget vmServiceLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"vmServiceLogFile\", null))); }\r\n\tget warnWhenEditingFilesInPubCache(): boolean { return this.getConfig<boolean>(\"warnWhenEditingFilesInPubCache\", true); }\r\n\tget warnWhenEditingFilesOutsideWorkspace(): boolean { return this.getConfig<boolean>(\"warnWhenEditingFilesOutsideWorkspace\", true); }\r\n\tget webDaemonLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"webDaemonLogFile\", null))); }\r\n\r\n\t// Helpers\r\n\tget useDevToolsDarkTheme() { return this.devToolsTheme === \"dark\"; }\r\n\tget openTestViewOnFailure() { return this.openTestView.indexOf(\"testFailure\") !== -1; }\r\n\tget openTestViewOnStart() { return this.openTestView.indexOf(\"testRunStart\") !== -1; }\r\n\r\n\tget workspaceSdkPath(): undefined | string { return resolvePaths(this.getWorkspaceConfig<null | string>(\"sdkPath\")); }\r\n\tget workspaceFlutterSdkPath(): undefined | string { return resolvePaths(this.getWorkspaceConfig<null | string>(\"flutterSdkPath\")); }\r\n\r\n\t// Options that can be set programatically.\r\n\tpublic setCheckForSdkUpdates(value: boolean): Thenable<void> { return this.setConfig(\"checkForSdkUpdates\", value, ConfigurationTarget.Global); }\r\n\tpublic setFlutterSdkPath(value: string | undefined): Thenable<void> { return this.setConfig(\"flutterSdkPath\", value, ConfigurationTarget.Workspace); }\r\n\tpublic setGlobalDartSdkPath(value: string): Thenable<void> { return this.setConfig(\"sdkPath\", value, ConfigurationTarget.Global); }\r\n\tpublic setGlobalDebugSdkLibraries(value: boolean): Thenable<void> { return this.setConfig(\"debugSdkLibraries\", value, ConfigurationTarget.Global); }\r\n\tpublic setGlobalDebugExternalLibraries(value: boolean): Thenable<void> { return this.setConfig(\"debugExternalLibraries\", value, ConfigurationTarget.Global); }\r\n\tpublic setGlobalFlutterSdkPath(value: string): Thenable<void> { return this.setConfig(\"flutterSdkPath\", value, ConfigurationTarget.Global); }\r\n\tpublic setPreviewLsp(value: boolean): Thenable<void> { return this.setConfig(\"previewLsp\", value, ConfigurationTarget.Global); }\r\n\tpublic setOpenDevTools(value: \"never\" | \"flutter\" | \"always\" | undefined): Thenable<void> { return this.setConfig(\"openDevTools\", value, ConfigurationTarget.Global); }\r\n\tpublic setShowInspectorNotificationsForWidgetErrors(value: boolean): Thenable<void> { return this.setConfig(\"showInspectorNotificationsForWidgetErrors\", value, ConfigurationTarget.Global); }\r\n\tpublic setShowSkippedTests(value: boolean): Thenable<void> { return this.setConfig(\"showSkippedTests\", value, ConfigurationTarget.Global); }\r\n\tpublic setSdkPath(value: string | undefined): Thenable<void> { return this.setConfig(\"sdkPath\", value, ConfigurationTarget.Workspace); }\r\n\tpublic setWarnWhenEditingFilesOutsideWorkspace(value: boolean): Thenable<void> { return this.setConfig(\"warnWhenEditingFilesOutsideWorkspace\", value, ConfigurationTarget.Global); }\r\n\tpublic setWarnWhenEditingFilesInPubCache(value: boolean): Thenable<void> { return this.setConfig(\"warnWhenEditingFilesInPubCache\", value, ConfigurationTarget.Global); }\r\n\r\n\tpublic for(uri?: Uri): ResourceConfig {\r\n\t\treturn new ResourceConfig(uri);\r\n\t}\r\n}\r\n\r\nexport class ResourceConfig {\r\n\tpublic uri?: Uri;\r\n\tpublic config: WorkspaceConfiguration;\r\n\r\n\tconstructor(uri?: Uri) {\r\n\t\tthis.uri = uri;\r\n\t\tthis.config = workspace.getConfiguration(\"hetu\", this.uri);\r\n\t}\r\n\r\n\tprivate getConfig<T>(key: string, defaultValue: T): NullAsUndefined<T> {\r\n\t\treturn nullToUndefined(this.config.get<T>(key, defaultValue));\r\n\t}\r\n\r\n\tget analysisExcludedFolders(): string[] { return this.getConfig<string[]>(\"analysisExcludedFolders\", []); }\r\n\tget analyzerInstrumentationLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"analyzerInstrumentationLogFile\", null))); }\r\n\tget analyzerLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"analyzerLogFile\", null))); }\r\n\tget analyzerPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"analyzerPath\", null)); }\r\n\tget completeFunctionCalls(): boolean { return this.getConfig<boolean>(\"completeFunctionCalls\", true); }\r\n\tget devToolsLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"devToolsLogFile\", null))); }\r\n\tget doNotFormat(): string[] { return this.getConfig<string[]>(\"doNotFormat\", []); }\r\n\tget enableCompletionCommitCharacters(): boolean { return this.getConfig<boolean>(\"enableCompletionCommitCharacters\", false); }\r\n\tget evaluateGettersInDebugViews(): boolean { return this.getConfig<boolean>(\"evaluateGettersInDebugViews\", true); }\r\n\tget extensionLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"extensionLogFile\", null))); }\r\n\tget flutterAdditionalArgs(): string[] { return this.getConfig<string[]>(\"flutterAdditionalArgs\", []); }\r\n\tget flutterAttachAdditionalArgs(): string[] { return this.getConfig<string[]>(\"flutterAttachAdditionalArgs\", []); }\r\n\tget flutterDaemonLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterDaemonLogFile\", null))); }\r\n\tget flutterRunAdditionalArgs(): string[] { return this.getConfig<string[]>(\"flutterRunAdditionalArgs\", []); }\r\n\tget flutterRunLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterRunLogFile\", null))); }\r\n\tget flutterScreenshotPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"flutterScreenshotPath\", null)); }\r\n\tget flutterSdkPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"flutterSdkPath\", null)); }\r\n\tget flutterSdkPaths(): string[] { return this.getConfig<string[]>(\"flutterSdkPaths\", []).map(resolvePaths); }\r\n\tget flutterStructuredErrors(): boolean { return this.getConfig<boolean>(\"flutterStructuredErrors\", true); }\r\n\tget flutterTestAdditionalArgs(): string[] { return this.getConfig<string[]>(\"flutterTestAdditionalArgs\", []); }\r\n\tget flutterTestLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"flutterTestLogFile\", null))); }\r\n\tget flutterTrackWidgetCreation(): boolean { return this.getConfig<boolean>(\"flutterTrackWidgetCreation\", true); }\r\n\tget insertArgumentPlaceholders(): boolean { return this.getConfig<boolean>(\"insertArgumentPlaceholders\", true); }\r\n\tget lineLength(): number { return this.getConfig<number>(\"lineLength\", 80); }\r\n\tget promptToGetPackages(): boolean { return this.getConfig<boolean>(\"promptToGetPackages\", true); }\r\n\tget pubAdditionalArgs(): string[] { return this.getConfig<string[]>(\"pubAdditionalArgs\", []); }\r\n\tget pubTestLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"pubTestLogFile\", null))); }\r\n\tget runPubGetOnPubspecChanges(): boolean { return this.getConfig<boolean>(\"runPubGetOnPubspecChanges\", true); }\r\n\tget sdkPath(): undefined | string { return resolvePaths(this.getConfig<null | string>(\"sdkPath\", null)); }\r\n\tget sdkPaths(): string[] { return this.getConfig<string[]>(\"sdkPaths\", []).map(resolvePaths); }\r\n\tget showDartDeveloperLogs(): boolean { return this.getConfig<boolean>(\"showDartDeveloperLogs\", true); }\r\n\tget vmAdditionalArgs(): string[] { return this.getConfig<string[]>(\"vmAdditionalArgs\", []); }\r\n\tget vmServiceLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"vmServiceLogFile\", null))); }\r\n\tget webDaemonLogFile(): undefined | string { return createFolderForFile(resolvePaths(this.getConfig<null | string>(\"webDaemonLogFile\", null))); }\r\n}\r\n\r\nexport const config = new Config();\r\n","import * as vs from \"vscode\";\r\nimport { dartPlatformName, flutterExtensionIdentifier, HAS_LAST_DEBUG_CONFIG, HAS_LAST_TEST_DEBUG_CONFIG, isWin, IS_LSP_CONTEXT, IS_RUNNING_LOCALLY_CONTEXT, platformDisplayName, PUB_OUTDATED_SUPPORTED_CONTEXT } from \"../shared/constants\";\r\nimport { LogCategory } from \"../shared/enums\";\r\nimport { DartWorkspaceContext, FlutterSdks, FlutterWorkspaceContext, IAmDisposable, Logger, Sdks, WritableWorkspaceConfig } from \"../shared/interfaces\";\r\nimport { captureLogs, EmittingLogger, logToConsole, RingLog } from \"../shared/logging\";\r\nimport { internalApiSymbol } from \"../shared/symbols\";\r\nimport { disposeAll } from \"../shared/utils\";\r\nimport { fsPath } from \"../shared/utils/fs\";\r\nimport { extensionVersion, isDevExtension } from \"../shared/vscode/extension_utils\";\r\nimport { InternalExtensionApi } from \"../shared/vscode/interfaces\";\r\nimport { envUtils, getDartWorkspaceFolders, warnIfPathCaseMismatch } from \"../shared/vscode/utils\";\r\nimport { Context } from \"../shared/vscode/workspace\";\r\nimport { WorkspaceContext } from \"../shared/workspace\";\r\nimport { LspAnalyzer } from \"./analysis/analyzer_lsp\";\r\nimport { getOutputChannel } from \"./commands/channels\";\r\nimport { EditCommands } from \"./commands/edit\";\r\nimport { LspEditCommands } from \"./commands/edit_lsp\";\r\nimport { config } from \"./config\";\r\nimport { LspAnalyzerStatusReporter } from \"./lsp/analyzer_status_reporter\";\r\nimport { LspGoToSuperCommand } from \"./lsp/go_to_super\";\r\nimport { SdkUtils } from \"./sdk/utils\";\r\nimport * as util from \"./utils\";\r\nimport { addToLogHeader, clearLogHeader, getExtensionLogPath, getLogHeader } from \"./utils/log\";\r\nimport { safeToolSpawn } from \"./utils/processes\";\r\n\r\nexport const HETU_MODE = { language: \"hetu\", scheme: \"file\" };\r\n\r\nconst PROJECT_LOADED = \"hetu-script:anyProjectLoaded\";\r\nexport const SERVICE_EXTENSION_CONTEXT_PREFIX = \"hetu-script:serviceExtension.\";\r\nexport const SERVICE_CONTEXT_PREFIX = \"hetu-script:service.\";\r\n\r\nlet lspAnalyzer: LspAnalyzer;\r\n\r\nlet showTodos: boolean | undefined;\r\nlet previousSettings: string;\r\n\r\nconst loggers: IAmDisposable[] = [];\r\nlet ringLogger: IAmDisposable | undefined;\r\nconst logger = new EmittingLogger();\r\n\r\n// Keep a running in-memory buffer of last 200 log events we can give to the\r\n// user when something crashed even if they don't have disk-logging enabled.\r\nexport const ringLog: RingLog = new RingLog(200);\r\n\r\nexport async function activate(context: vs.ExtensionContext, isRestart: boolean = false) {\r\n  // Ring logger is only set up once and presist over silent restarts.\r\n  if (!ringLogger)\r\n    ringLogger = logger.onLog((message) => ringLog.log(message.toLine(500)));\r\n\r\n  context.subscriptions.push(logToConsole(logger));\r\n\r\n  const extContext = Context.for(context);\r\n\r\n  // Wire up a reload command that will re-initialise everything.\r\n  context.subscriptions.push(vs.commands.registerCommand(\"_hetu.reloadExtension\", async () => {\r\n    logger.info(\"Performing silent extension reload...\");\r\n    await deactivate(true);\r\n    disposeAll(context.subscriptions);\r\n    await activate(context, true);\r\n    logger.info(\"Done!\");\r\n  }));\r\n\r\n\r\n  const sdkUtils = new SdkUtils(logger);\r\n  const workspaceContextUnverified = await sdkUtils.scanWorkspace();\r\n  util.logTime(\"initWorkspace\");\r\n\r\n  // Set up log files.\r\n  setupLog(config.analyzerLogFile, LogCategory.Analyzer);\r\n\r\n  // if (!workspaceContextUnverified.sdks.dart || (workspaceContextUnverified.hasAnyFlutterProjects && !workspaceContextUnverified.sdks.flutter)) {\r\n  //   // Don't set anything else up; we can't work like this!\r\n  //   return sdkUtils.handleMissingSdks(context, workspaceContextUnverified);\r\n  // }\r\n\r\n  const workspaceContext = workspaceContextUnverified as DartWorkspaceContext;\r\n  const sdks = workspaceContext.sdks;\r\n  const writableConfig = workspaceContext.config as WritableWorkspaceConfig;\r\n\r\n  lspAnalyzer = new LspAnalyzer(logger, sdks, workspaceContext);\r\n  const lspClient = lspAnalyzer.client;\r\n  context.subscriptions.push(lspAnalyzer);\r\n\r\n  const activeFileFilters: vs.DocumentFilter[] = [HETU_MODE];\r\n\r\n  // TODO: Push the differences into the Analyzer classes so we can have one reporter.\r\n  // tslint:disable-next-line: no-unused-expression\r\n  new LspAnalyzerStatusReporter(lspAnalyzer);\r\n\r\n  // Handle config changes so we can reanalyze if necessary.\r\n  context.subscriptions.push(vs.workspace.onDidChangeConfiguration(() => handleConfigurationChange(sdks)));\r\n\r\n  // TODO: LSP equivs of the others...\r\n  // Refactors\r\n  // TypeHierarchyCommand\r\n  // context.subscriptions.push(new LspGoToSuperCommand(lspAnalyzer));\r\n\r\n  // Set up commands for Dart editors.\r\n  // context.subscriptions.push(new EditCommands());\r\n  // context.subscriptions.push(new LspEditCommands(lspAnalyzer));\r\n\r\n  // Warn the user if they've opened a folder with mismatched casing.\r\n  if (vs.workspace.workspaceFolders && vs.workspace.workspaceFolders.length) {\r\n    for (const wf of vs.workspace.workspaceFolders) {\r\n      if (warnIfPathCaseMismatch(logger, fsPath(wf.uri), \"the open workspace folder\", \"re-open the folder using the File Open dialog\"))\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Handle changes to the workspace.\r\n  // Set the roots, handling project changes that might affect SDKs.\r\n  // context.subscriptions.push(vs.workspace.onDidChangeWorkspaceFolders(async (f) => {\r\n  //   recalculateAnalysisRoots();\r\n  // }));\r\n\r\n  return {\r\n    [internalApiSymbol]: {\r\n      analyzer: lspAnalyzer,\r\n      context: extContext,\r\n      currentAnalysis: () => lspAnalyzer.onCurrentAnalysisComplete,\r\n      envUtils,\r\n      fileTracker: lspAnalyzer.fileTracker,\r\n      getLogHeader,\r\n      getOutputChannel,\r\n      initialAnalysis: lspAnalyzer.onInitialAnalysis,\r\n      logger,\r\n      nextAnalysis: () => lspAnalyzer.onNextAnalysisComplete,\r\n      safeToolSpawn,\r\n      workspaceContext,\r\n    } as InternalExtensionApi,\r\n  };\r\n}\r\n\r\nfunction setupLog(logFile: string | undefined, category: LogCategory) {\r\n  if (logFile)\r\n    loggers.push(captureLogs(logger, logFile, getLogHeader(), config.maxLogLineLength, [category]));\r\n}\r\n\r\nfunction buildLogHeaders(logger?: Logger, workspaceContext?: WorkspaceContext) {\r\n  clearLogHeader();\r\n  addToLogHeader(() => `!! PLEASE REVIEW THIS LOG FOR SENSITIVE INFORMATION BEFORE SHARING !!`);\r\n  addToLogHeader(() => ``);\r\n  addToLogHeader(() => `Dart Code extension: ${extensionVersion}`);\r\n  addToLogHeader(() => {\r\n    const ext = vs.extensions.getExtension(flutterExtensionIdentifier)!;\r\n    return `Flutter extension: ${ext.packageJSON.version} (${ext.isActive ? \"\" : \"not \"}activated)`;\r\n  });\r\n  addToLogHeader(() => ``);\r\n  addToLogHeader(() => `App: ${vs.env.appName}`);\r\n  addToLogHeader(() => `Version: ${vs.version}`);\r\n  addToLogHeader(() => `Platform: ${platformDisplayName}`);\r\n  if (workspaceContext) {\r\n    addToLogHeader(() => ``);\r\n    addToLogHeader(() => `Workspace type: ${workspaceContext.workspaceTypeDescription}`);\r\n    addToLogHeader(() => `Analyzer type: ${workspaceContext.config.useLsp ? \"LSP\" : \"DAS\"}`);\r\n    addToLogHeader(() => `Multi-root?: ${vs.workspace.workspaceFolders && vs.workspace.workspaceFolders.length > 1}`);\r\n    const sdks = workspaceContext.sdks;\r\n    addToLogHeader(() => ``);\r\n    addToLogHeader(() => `Dart SDK:\\n    Loc: ${sdks.dart}\\n    Ver: ${sdks.dartVersion}`);\r\n    addToLogHeader(() => `Flutter SDK:\\n    Loc: ${sdks.flutter}\\n    Ver: ${sdks.flutterVersion}`);\r\n  }\r\n  addToLogHeader(() => ``);\r\n  addToLogHeader(() => `HTTP_PROXY: ${process.env.HTTP_PROXY}`);\r\n  addToLogHeader(() => `NO_PROXY: ${process.env.NO_PROXY}`);\r\n\r\n  // Any time the log headers are rebuilt, we should re-log them.\r\n  logger?.info(getLogHeader());\r\n}\r\n\r\nfunction handleConfigurationChange(sdks: Sdks) {\r\n  // TODOs\r\n  const newShowTodoSetting = config.showTodos;\r\n  const todoSettingChanged = showTodos !== newShowTodoSetting;\r\n  showTodos = newShowTodoSetting;\r\n\r\n  // SDK\r\n  const newSettings = getSettingsThatRequireRestart();\r\n  const settingsChanged = previousSettings !== newSettings;\r\n  previousSettings = newSettings;\r\n\r\n  if (settingsChanged) {\r\n    // Delay the restart slightly, because the config change may be transmitted to the LSP server\r\n    // and shutting the server down too quickly results in that trying to write to a closed\r\n    // stream.\r\n    setTimeout(util.promptToReloadExtension, 50);\r\n  }\r\n}\r\n\r\nfunction getSettingsThatRequireRestart() {\r\n  // The return value here is used to detect when any config option changes that requires a project reload.\r\n  // It doesn't matter how these are combined; it just gets called on every config change and compared.\r\n  // Usually these are options that affect the analyzer and need a reload, but config options used at\r\n  // activation time will also need to be included.\r\n  // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\r\n  return \"CONF-\"\r\n    + config.sdkPath\r\n}\r\n\r\nexport async function deactivate(isRestart: boolean = false): Promise<void> {\r\n  vs.commands.executeCommand(\"setContext\", PROJECT_LOADED, false);\r\n  lspAnalyzer?.dispose();\r\n  if (loggers) {\r\n    await Promise.all(loggers.map((logger) => logger.dispose()));\r\n    loggers.length = 0;\r\n  }\r\n  if (!isRestart) {\r\n    logger.dispose();\r\n  }\r\n}\r\n\r\nfunction setCommandVisiblity(enable: boolean, workspaceContext?: WorkspaceContext) {\r\n  vs.commands.executeCommand(\"setContext\", PROJECT_LOADED, enable);\r\n}","import { ProgressLocation, window } from \"vscode\";\r\nimport { Analyzer, AnalyzingEvent } from \"../../shared/analyzer\";\r\nimport { PromiseCompleter } from \"../../shared/utils\";\r\n\r\n// TODO: Remove this class once Flutter Stable has an LSP server that uses $/progress.\r\n\r\nexport class LspAnalyzerStatusReporter {\r\n\tprivate analysisInProgress = false;\r\n\tprivate analyzingPromise?: PromiseCompleter<void>;\r\n\r\n\tconstructor(readonly analyzer: Analyzer) {\r\n\t\tanalyzer.onAnalysisStatusChange.listen((params) => this.handleServerStatus(params));\r\n\t}\r\n\r\n\tprivate handleServerStatus(params: AnalyzingEvent) {\r\n\t\tif (params.suppressProgress) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.analysisInProgress = params.isAnalyzing;\r\n\r\n\t\tif (this.analysisInProgress) {\r\n\t\t\t// Debounce short analysis times.\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// When the timeout fires, we need to check analysisInProgress again in case\r\n\t\t\t\t// analysis has already finished.\r\n\t\t\t\tif (this.analysisInProgress && !this.analyzingPromise) {\r\n\t\t\t\t\twindow.withProgress({ location: ProgressLocation.Window, title: \"Analyzing…\" }, () => {\r\n\t\t\t\t\t\tif (!this.analyzingPromise) // Re-check, since we don't know how long before this callback is called.\r\n\t\t\t\t\t\t\tthis.analyzingPromise = new PromiseCompleter();\r\n\t\t\t\t\t\treturn this.analyzingPromise.promise;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}, 100);\r\n\t\t} else {\r\n\t\t\tif (this.analyzingPromise) {\r\n\t\t\t\tthis.analyzingPromise.resolve();\r\n\t\t\t\tthis.analyzingPromise = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import * as path from \"path\";\r\nimport { hasPackagesFile, hasPubspec } from \"../shared/utils/fs\";\r\nimport { isWithinWorkspace } from \"./utils\";\r\n\r\nexport const UPGRADE_TO_WORKSPACE_FOLDERS = \"Mark Projects as Workspace Folders\";\r\n\r\nexport function locateBestProjectRoot(folder: string): string | undefined {\r\n\tif (!folder || !isWithinWorkspace(folder))\r\n\t\treturn undefined;\r\n\r\n\tlet dir = folder;\r\n\twhile (dir !== path.dirname(dir)) {\r\n\t\tif (hasPubspec(dir) || hasPackagesFile(dir))\r\n\t\t\treturn dir;\r\n\t\tdir = path.dirname(dir);\r\n\t}\r\n\r\n\treturn undefined;\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport { commands, ExtensionContext, window } from \"vscode\";\r\nimport { analyzerSnapshotPath, dartPlatformName, dartVMPath, DART_DOWNLOAD_URL, executableNames, flutterPath, FLUTTER_CREATE_PROJECT_TRIGGER_FILE, FLUTTER_DOWNLOAD_URL, isLinux, isMac, isWin, showLogAction } from \"../../shared/constants\";\r\nimport { Logger, Sdks, WorkspaceConfig } from \"../../shared/interfaces\";\r\nimport { nullLogger } from \"../../shared/logging\";\r\nimport { PackageMap } from \"../../shared/pub/package_map\";\r\nimport { flatMap, isDartSdkFromFlutter, notUndefined } from \"../../shared/utils\";\r\nimport { fsPath, getSdkVersion, hasPubspec } from \"../../shared/utils/fs\";\r\nimport { resolvedPromise } from \"../../shared/utils/promises\";\r\nimport { envUtils, getAllProjectFolders, getDartWorkspaceFolders } from \"../../shared/vscode/utils\";\r\nimport { WorkspaceContext } from \"../../shared/workspace\";\r\nimport { config } from \"../config\";\r\nimport { ringLog } from \"../extension\";\r\nimport { getExcludedFolders, openLogContents, promptToReloadExtension, resolvePaths } from \"../utils\";\r\n\r\n// TODO: Tidy this class up (it exists mainly to share logger).\r\nexport class SdkUtils {\r\n  constructor(private readonly logger: Logger) { }\r\n\r\n  public handleMissingSdks(context: ExtensionContext, workspaceContext: WorkspaceContext) {\r\n    // Note: This code only runs if we fail to find the Dart SDK, or fail to find the Flutter SDK\r\n    // and are in a Flutter project. In the case where we fail to find the Flutter SDK but are not\r\n    // in a Flutter project (eg. we ran Flutter Doctor without the extension activated) then\r\n    // this code will not be run as the extension will activate normally, and then the command-handling\r\n    // code for each command will detect the missing Flutter SDK and respond appropriately.\r\n\r\n    // Only show the \"startup\" message if we didn't already show another message as\r\n    // a result of one of the above commands beinv invoked.\r\n    // if (!this.hasShownActivationFailure) {\r\n    //   if (workspaceContext.hasAnyFlutterProjects) {\r\n    //     this.showRelevantActivationFailureMessage(workspaceContext, true);\r\n    //   } else if (workspaceContext.hasAnyStandardDartProjects) {\r\n    //     this.showRelevantActivationFailureMessage(workspaceContext, false);\r\n    //   } else {\r\n    //     this.logger.error(\"No Dart or Flutter SDK was found. Suppressing prompt because it doesn't appear that a Dart/Flutter project is open.\");\r\n    //   }\r\n    // }\r\n    return;\r\n  }\r\n\r\n  private hasShownActivationFailure = false;\r\n  private showRelevantActivationFailureMessage(workspaceContext: WorkspaceContext, isFlutter: boolean, commandToReRun?: string) {\r\n    if (isFlutter && workspaceContext.sdks.flutter && !workspaceContext.sdks.dart) {\r\n      this.showFluttersDartSdkActivationFailure();\r\n    } else if (isFlutter) {\r\n      this.showFlutterActivationFailure(commandToReRun);\r\n    } else {\r\n      this.showDartActivationFailure(commandToReRun);\r\n    }\r\n    if (!this.hasShownActivationFailure) {\r\n      this.hasShownActivationFailure = true;\r\n    }\r\n  }\r\n\r\n  public showFluttersDartSdkActivationFailure() {\r\n    // tslint:disable-next-line: no-floating-promises\r\n    promptToReloadExtension(\"Could not find Dart in your Flutter SDK. \" +\r\n      \"Please run 'flutter doctor' in the terminal then reload the project once all issues are resolved.\",\r\n      \"Reload\", // eslint-disable-line @typescript-eslint/indent\r\n      true, // eslint-disable-line @typescript-eslint/indent\r\n    );\r\n  }\r\n  public showFlutterActivationFailure(commandToReRun?: string) {\r\n    // tslint:disable-next-line: no-floating-promises\r\n    this.showSdkActivationFailure(\r\n      \"Flutter\",\r\n      (p) => this.findFlutterSdk(p),\r\n      FLUTTER_DOWNLOAD_URL,\r\n      (p) => config.setGlobalFlutterSdkPath(p),\r\n      commandToReRun,\r\n    );\r\n  }\r\n  public showDartActivationFailure(commandToReRun?: string) {\r\n    // tslint:disable-next-line: no-floating-promises\r\n    this.showSdkActivationFailure(\r\n      \"Dart\",\r\n      (p) => this.findDartSdk(p),\r\n      DART_DOWNLOAD_URL,\r\n      (p) => config.setGlobalDartSdkPath(p),\r\n      commandToReRun,\r\n    );\r\n  }\r\n\r\n  public async showSdkActivationFailure(\r\n    sdkType: string,\r\n    search: (path: string[]) => string | undefined,\r\n    downloadUrl: string,\r\n    saveSdkPath: (path: string) => Thenable<void>,\r\n    commandToReRun?: string,\r\n  ) {\r\n    const locateAction = \"Locate SDK\";\r\n    const downloadAction = \"Download SDK\";\r\n    let displayMessage = `Could not find a ${sdkType} SDK. ` +\r\n      `Please ensure ${sdkType.toLowerCase()} is installed and in your PATH (you may need to restart).`;\r\n    while (true) {\r\n      const ringLogContents = ringLog.toString();\r\n      const selectedItem = await window.showErrorMessage(displayMessage,\r\n        locateAction,\r\n        downloadAction,\r\n        showLogAction,\r\n      );\r\n      // TODO: Refactor/reformat/comment this code - it's messy and hard to understand!\r\n      if (selectedItem === locateAction) {\r\n        const selectedFolders =\r\n          await window.showOpenDialog({ canSelectFolders: true, openLabel: `Set ${sdkType} SDK folder` });\r\n        if (selectedFolders && selectedFolders.length > 0) {\r\n          const matchingSdkFolder = search(selectedFolders.map(fsPath));\r\n          if (matchingSdkFolder) {\r\n            await saveSdkPath(matchingSdkFolder);\r\n            await promptToReloadExtension();\r\n            if (commandToReRun) {\r\n              commands.executeCommand(commandToReRun);\r\n            }\r\n            break;\r\n          } else {\r\n            displayMessage = `That folder does not appear to be a ${sdkType} SDK.`;\r\n          }\r\n        }\r\n      } else if (selectedItem === downloadAction) {\r\n        await envUtils.openInBrowser(downloadUrl);\r\n        break;\r\n      } else if (selectedItem === showLogAction) {\r\n        openLogContents(undefined, ringLogContents);\r\n        break;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public async scanWorkspace(): Promise<WorkspaceContext> {\r\n    this.logger.info(\"Searching for SDKs...\");\r\n    const pathOverride = (process.env.DART_PATH_OVERRIDE as string) || \"\";\r\n    const normalPath = (process.env.PATH as string) || \"\";\r\n    const paths = (pathOverride + path.delimiter + normalPath).split(path.delimiter).filter((p) => p);\r\n\r\n    // this.logger.info(\"Environment PATH:\");\r\n    // for (const p of paths)\r\n    //   this.logger.info(`    ${p}`);\r\n\r\n    // If we are running the analyzer remotely over SSH, we only support an analyzer, since none\r\n    // of the other SDKs will work remotely. Also, there is no need to validate the sdk path,\r\n    // since that file will exist on a remote machine.\r\n    if (config.analyzerSshHost) {\r\n      return new WorkspaceContext({\r\n        dart: config.sdkPath,\r\n        dartSdkIsFromFlutter: false,\r\n        flutter: undefined,\r\n      } as Sdks, {});//, false, false, false);\r\n    }\r\n\r\n    // TODO: This has gotten very messy and needs tidying up...\r\n\r\n    // let firstFlutterMobileProject: string | undefined;\r\n    // let hasAnyFlutterProject: boolean = false;\r\n    // let hasAnyFlutterMobileProject: boolean = false;\r\n    // let hasAnyWebProject: boolean = false;\r\n    // let hasAnyStandardDartProject: boolean = false;\r\n\r\n    // const possibleProjects = await getAllProjectFolders(this.logger, getExcludedFolders);\r\n\r\n    // Scan through them all to figure out what type of projects we have.\r\n    // for (const folder of possibleProjects) {\r\n    //   const hasPubspecFile = hasPubspec(folder);\r\n    //   const refsFlutter = hasPubspecFile && referencesFlutterSdk(folder);\r\n    //   const refsWeb = false; // hasPubspecFile && referencesWeb(folder);\r\n    //   const hasFlutterCreateProjectTriggerFile =\r\n    //     fs.existsSync(path.join(folder, FLUTTER_CREATE_PROJECT_TRIGGER_FILE));\r\n\r\n    //   // Special case to detect the Flutter repo root, so we always consider it a Flutter project and will use the local SDK\r\n    //   const isFlutterRepo = fs.existsSync(path.join(folder, \"bin/flutter\")) && fs.existsSync(path.join(folder, \"bin/cache/dart-sdk\"));\r\n\r\n    //   // Since we just blocked on a lot of sync FS, yield.\r\n    //   await resolvedPromise;\r\n\r\n    //   const isSomethingFlutter = refsFlutter || hasFlutterCreateProjectTriggerFile || isFlutterRepo;\r\n\r\n    //   if (isSomethingFlutter) {\r\n    //     this.logger.info(`Found Flutter project at ${folder}:\r\n\t\t// \tMobile? ${refsFlutter}\r\n\t\t// \tWeb? ${refsWeb}\r\n\t\t// \tCreate Trigger? ${hasFlutterCreateProjectTriggerFile}\r\n\t\t// \tFlutter Repo? ${isFlutterRepo}`);\r\n    //   }\r\n\r\n    //   // Track the first Flutter Project so we can try finding the Flutter SDK from its packages file.\r\n    //   firstFlutterMobileProject = firstFlutterMobileProject || (isSomethingFlutter ? folder : undefined);\r\n\r\n    //   // Set some flags we'll use to construct the workspace, so we know what things we need to light up.\r\n    //   hasAnyFlutterProject = hasAnyFlutterProject || isSomethingFlutter;\r\n    //   hasAnyFlutterMobileProject = hasAnyFlutterMobileProject || refsFlutter || hasFlutterCreateProjectTriggerFile;\r\n    //   hasAnyWebProject = hasAnyWebProject || refsWeb;\r\n    //   hasAnyStandardDartProject = hasAnyStandardDartProject || (!isSomethingFlutter && hasPubspecFile);\r\n    // }\r\n\r\n    // Certain types of workspaces will have special config, so read them here.\r\n    const workspaceConfig: WorkspaceConfig = {};\r\n    // Helper that searches for a specific folder/file up the tree and\r\n    // runs some specific processing.\r\n    const workspaceFolders = getDartWorkspaceFolders();\r\n    const topLevelFolders = workspaceFolders.map((w) => fsPath(w.uri));\r\n    const processWorkspaceType = async (search: (logger: Logger, folder: string) => Promise<string | undefined>, process: (logger: Logger, config: WorkspaceConfig, folder: string) => void): Promise<string | undefined> => {\r\n      for (const folder of topLevelFolders) {\r\n        const root = await search(this.logger, folder);\r\n        if (root) {\r\n          process(this.logger, workspaceConfig, root);\r\n          return root;\r\n        }\r\n      }\r\n      return undefined;\r\n    };\r\n\r\n    const flutterSdkSearchPaths = [\r\n      workspaceConfig?.flutterSdkHome,\r\n      config.flutterSdkPath,\r\n      process.env.FLUTTER_ROOT,\r\n      isLinux ? \"~/snap/flutter/common/flutter\" : undefined,\r\n      \"~/flutter-sdk\",\r\n      \"~/.flutter-sdk\",\r\n    ].concat(paths).filter(notUndefined);\r\n\r\n    const flutterSdkPath = this.findFlutterSdk(flutterSdkSearchPaths);\r\n\r\n    // Since we just blocked on a lot of sync FS, yield.\r\n    await resolvedPromise;\r\n\r\n    const dartSdkSearchPaths = [\r\n      isMac ? workspaceConfig?.dartSdkHomeMac : workspaceConfig?.dartSdkHomeLinux,\r\n      // firstFlutterMobileProject && \r\n      flutterSdkPath && path.join(flutterSdkPath, \"bin/cache/dart-sdk\"),\r\n      config.sdkPath,\r\n    ].concat(paths)\r\n      // The above array only has the Flutter SDK\tin the search path if we KNOW it's a flutter\r\n      // project, however this doesn't cover the activating-to-run-flutter.createProject so\r\n      // we need to always look in the flutter SDK, but only AFTER the users PATH so that\r\n      // we don't prioritise it over any real Dart versions.\r\n      .concat([flutterSdkPath && path.join(flutterSdkPath, \"bin/cache/dart-sdk\")])\r\n      .filter(notUndefined);\r\n\r\n    // Since we just blocked on a lot of sync FS, yield.\r\n    await resolvedPromise;\r\n\r\n    const dartSdkPath = this.findDartSdk(dartSdkSearchPaths);\r\n\r\n    // Since we just blocked on a lot of sync FS, yield.\r\n    await resolvedPromise;\r\n\r\n    return new WorkspaceContext(\r\n      {\r\n        dart: dartSdkPath,\r\n        dartSdkIsFromFlutter: !!dartSdkPath && isDartSdkFromFlutter(dartSdkPath),\r\n        dartVersion: getSdkVersion(this.logger, { sdkRoot: dartSdkPath }),\r\n        flutter: flutterSdkPath,\r\n        flutterVersion: getSdkVersion(this.logger, { sdkRoot: flutterSdkPath, versionFile: workspaceConfig?.flutterVersionFile }),\r\n      } as Sdks,\r\n      workspaceConfig,\r\n      // hasAnyFlutterMobileProject,\r\n      // hasAnyWebProject,\r\n      // hasAnyStandardDartProject,\r\n    );\r\n  }\r\n\r\n  private findDartSdk(folders: string[]) {\r\n    return this.searchPaths(folders, executableNames.dart, (p) => this.hasExecutable(p, dartVMPath) && hasDartAnalysisServer(p));\r\n  }\r\n\r\n  private findFlutterSdk(folders: string[]) {\r\n    return this.searchPaths(folders, executableNames.flutter, (p) => this.hasExecutable(p, flutterPath));\r\n  }\r\n\r\n  private hasExecutable(folder: string, executablePath: string) {\r\n    const fullPath = path.join(folder, executablePath);\r\n    return fs.existsSync(fullPath) && fs.statSync(fullPath).isFile();\r\n  }\r\n\r\n  public searchPaths(paths: string[], executableFilename: string, postFilter?: (s: string) => boolean): string | undefined {\r\n    this.logger.info(`Searching for ${executableFilename}`);\r\n\r\n    let sdkPaths =\r\n      paths\r\n        .filter((p) => p)\r\n        .map(resolvePaths)\r\n        .filter(notUndefined);\r\n\r\n    // Any that don't end with bin, add it on (as an extra path) since some of our\r\n    // paths may come from places that don't already include it (for ex. the\r\n    // user config.sdkPath).\r\n    const isBinFolder = (f: string) => [\"bin\", \"sbin\"].indexOf(path.basename(f)) !== -1;\r\n    sdkPaths = flatMap(sdkPaths, (p) => isBinFolder(p) ? [p] : [p, path.join(p, \"bin\")]);\r\n\r\n    // Add on the executable name, as we need to do filtering based on the resolve path.\r\n\r\n    // TODO: Make the list unique, but preserve the order of the first occurrences. We currently\r\n    // have uniq() and unique(), so also consolidate them.\r\n\r\n    // this.logger.info(`    Looking for ${executableFilename} in:`);\r\n    // for (const p of sdkPaths)\r\n    //   this.logger.info(`        ${p}`);\r\n\r\n    // Restrict only to the paths that have the executable.\r\n    sdkPaths = sdkPaths.filter((p) => fs.existsSync(path.join(p, executableFilename)));\r\n\r\n    this.logger.info(`    Found at:`);\r\n    for (const p of sdkPaths)\r\n      this.logger.info(`        ${p}`);\r\n\r\n    // Convert all the paths to their resolved locations.\r\n    sdkPaths = sdkPaths.map((p) => {\r\n      const fullPath = path.join(p, executableFilename);\r\n\r\n      // In order to handle symlinks on the binary (not folder), we need to add the executableName before calling realpath.\r\n      const realExecutableLocation = p && fs.realpathSync(fullPath);\r\n\r\n      if (realExecutableLocation.toLowerCase() !== fullPath.toLowerCase())\r\n        this.logger.info(`Following symlink: ${fullPath} ==> ${realExecutableLocation}`);\r\n\r\n      // Then we need to take the executable name and /bin back off\r\n      return path.dirname(path.dirname(realExecutableLocation));\r\n    });\r\n\r\n    // Now apply any post-filters.\r\n    this.logger.info(\"    Candidate paths to be post-filtered:\");\r\n    for (const p of sdkPaths)\r\n      this.logger.info(`        ${p}`);\r\n    const sdkPath = sdkPaths.find(postFilter || (() => true));\r\n\r\n    if (sdkPath)\r\n      this.logger.info(`    Found at ${sdkPath}`);\r\n\r\n    this.logger.info(`    Returning SDK path ${sdkPath} for ${executableFilename}`);\r\n\r\n    return sdkPath;\r\n  }\r\n}\r\n\r\nexport function referencesFlutterSdk(folder?: string): boolean {\r\n  if (folder && hasPubspec(folder)) {\r\n    const regex = new RegExp(\"sdk\\\\s*:\\\\s*flutter\", \"i\");\r\n    return regex.test(fs.readFileSync(path.join(folder, \"pubspec.yaml\")).toString());\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction extractFlutterSdkPathFromPackagesFile(projectFolder: string): string | undefined {\r\n  if (!fs.existsSync(projectFolder))\r\n    return undefined;\r\n\r\n  let packagePath = PackageMap.loadForProject(nullLogger, projectFolder).getPackagePath(\"flutter\");\r\n\r\n  if (!packagePath)\r\n    return undefined;\r\n\r\n  // Set windows slashes to / while manipulating.\r\n  if (isWin) {\r\n    packagePath = packagePath.replace(/\\\\/g, \"/\");\r\n  }\r\n\r\n  // Make sure ends with a slash.\r\n  if (!packagePath.endsWith(\"/\"))\r\n    packagePath = packagePath + \"/\";\r\n\r\n  // Trim suffix we don't need.\r\n  const pathSuffix = \"/packages/flutter/lib/\";\r\n  if (packagePath.endsWith(pathSuffix)) {\r\n    packagePath = packagePath.substr(0, packagePath.length - pathSuffix.length);\r\n  }\r\n\r\n  // Make sure ends with a slash.\r\n  if (!packagePath.endsWith(\"/\"))\r\n    packagePath = packagePath + \"/\";\r\n\r\n  // Append bin if required.\r\n  if (!packagePath.endsWith(\"/bin/\")) {\r\n    packagePath = packagePath + \"bin/\";\r\n  }\r\n\r\n  // Set windows paths back.\r\n  if (isWin) {\r\n    packagePath = packagePath.replace(/\\//g, \"\\\\\");\r\n    if (packagePath.startsWith(\"\\\\\"))\r\n      packagePath = packagePath.substring(1);\r\n  }\r\n\r\n  return packagePath;\r\n}\r\n\r\nfunction findRootContaining(folder: string, childName: string, expectFile = false): string | undefined {\r\n  if (folder) {\r\n    // Walk up the directories from the workspace root, and see if there\r\n    // exists a directory which has `childName` file/directory as a child.\r\n    let child = folder;\r\n    while (child) {\r\n      try {\r\n        const stat = fs.statSync(path.join(child, childName));\r\n        if (expectFile ? stat.isFile() : stat.isDirectory()) {\r\n          return child;\r\n        }\r\n      } catch { }\r\n\r\n      const parentDir = path.dirname(child);\r\n      if (child === parentDir)\r\n        break;\r\n\r\n      child = parentDir;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport const hasDartAnalysisServer = (folder: string) => fs.existsSync(path.join(folder, analyzerSnapshotPath));\r\n","import * as fs from \"fs\";\r\nimport * as https from \"https\";\r\nimport * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport { commands, Uri, window, workspace, WorkspaceFolder } from \"vscode\";\r\nimport { showLogAction } from \"../shared/constants\";\r\nimport { WorkspaceConfig } from \"../shared/interfaces\";\r\nimport { fsPath, getRandomInt, hasPubspec, isWithinPath, mkDirRecursive } from \"../shared/utils/fs\";\r\nimport { isDartWorkspaceFolder } from \"../shared/vscode/utils\";\r\nimport { config } from \"./config\";\r\nimport { ringLog } from \"./extension\";\r\nimport { locateBestProjectRoot } from \"./project\";\r\nimport { referencesFlutterSdk } from \"./sdk/utils\";\r\n\r\nexport function isFlutterWorkspaceFolder(folder?: WorkspaceFolder): boolean {\r\n\treturn !!(folder && isDartWorkspaceFolder(folder) && isFlutterProjectFolder(fsPath(folder.uri)));\r\n}\r\n\r\nexport function isInsideFlutterProject(uri?: Uri): boolean {\r\n\tif (!uri)\r\n\t\treturn false;\r\n\r\n\tconst projectRoot = locateBestProjectRoot(fsPath(uri));\r\n\tif (projectRoot)\r\n\t\treturn isFlutterProjectFolder(projectRoot);\r\n\telse\r\n\t\treturn isFlutterWorkspaceFolder(workspace.getWorkspaceFolder(uri));\r\n}\r\n\r\nexport function isPathInsideFlutterProject(path: string): boolean {\r\n\tconst projectRoot = locateBestProjectRoot(path);\r\n\tif (!projectRoot)\r\n\t\treturn false;\r\n\r\n\treturn isFlutterProjectFolder(projectRoot);\r\n}\r\n\r\nexport function isFlutterProjectFolder(folder?: string): boolean {\r\n\treturn referencesFlutterSdk(folder);\r\n}\r\n\r\nexport function resolvePaths<T extends string | undefined>(p: T): string | (undefined extends T ? undefined : never) {\r\n\tif (typeof p !== \"string\")\r\n\t\treturn undefined as (undefined extends T ? undefined : never);\r\n\r\n\tif (p.startsWith(\"~/\"))\r\n\t\treturn path.join(os.homedir(), p.substr(2));\r\n\tif (!path.isAbsolute(p) && workspace.workspaceFolders && workspace.workspaceFolders.length)\r\n\t\treturn path.join(fsPath(workspace.workspaceFolders[0].uri), p);\r\n\treturn p;\r\n}\r\n\r\n/// Shortens a path to use ~ if it's inside the home directory.\r\nexport function homeRelativePath(p?: string) {\r\n\tif (!p) return undefined;\r\n\tconst homedir = os.homedir();\r\n\tif (isWithinPath(p, homedir))\r\n\t\treturn path.join(\"~\", path.relative(homedir, p));\r\n\treturn p;\r\n}\r\n\r\nexport function createFolderForFile(file?: string): string | undefined {\r\n\ttry {\r\n\t\tif (!file || !path.isAbsolute(file))\r\n\t\t\treturn undefined;\r\n\r\n\t\tconst folder = path.dirname(file);\r\n\t\tif (!fs.existsSync(folder))\r\n\t\t\tmkDirRecursive(folder);\r\n\r\n\t\treturn file;\r\n\t} catch {\r\n\t\tconsole.warn(`Ignoring invalid file path ${file}`);\r\n\t\treturn undefined;\r\n\t}\r\n}\r\n\r\nexport function isAnalyzable(file: { uri: Uri, isUntitled?: boolean, languageId?: string }): boolean {\r\n\tif (file.isUntitled || !fsPath(file.uri) || file.uri.scheme !== \"file\")\r\n\t\treturn false;\r\n\r\n\tconst analyzableLanguages = [\"hetu\"];\r\n\t// const analyzableFilenames = [\".analysis_options\", \"analysis_options.yaml\", \"pubspec.yaml\"];\r\n\t// We have to include dart/html extensions as this function may be called without a language ID\r\n\t// (for example when triggered by a file system watcher).\r\n\tconst analyzableFileExtensions = [\"dart\", \"htm\", \"html\"].concat(config.additionalAnalyzerFileExtensions);\r\n\r\n\tconst extName = path.extname(fsPath(file.uri));\r\n\tconst extension = extName ? extName.substr(1) : undefined;\r\n\r\n\treturn (file.languageId && analyzableLanguages.indexOf(file.languageId) >= 0)\r\n\t\t// || analyzableFilenames.indexOf(path.basename(fsPath(file.uri))) >= 0\r\n\t\t|| (extension !== undefined && analyzableFileExtensions.includes(extension));\r\n}\r\n\r\nexport function shouldHotReloadFor(file: { uri: Uri, isUntitled?: boolean, languageId?: string }): boolean {\r\n\tif (file.isUntitled || !fsPath(file.uri) || file.uri.scheme !== \"file\")\r\n\t\treturn false;\r\n\r\n\tconst reloadableFileExtensions = [\"dart\", \"htm\", \"html\", \"css\"];\r\n\r\n\tconst extName = path.extname(fsPath(file.uri));\r\n\tconst extension = extName ? extName.substr(1) : undefined;\r\n\r\n\treturn extension !== undefined && reloadableFileExtensions.includes(extension);\r\n}\r\n\r\nexport function isAnalyzableAndInWorkspace(file: { uri: Uri, isUntitled?: boolean, languageId?: string }): boolean {\r\n\treturn isAnalyzable(file) && isWithinWorkspace(fsPath(file.uri));\r\n}\r\n\r\nexport function isWithinWorkspace(file: string) {\r\n\treturn !!workspace.getWorkspaceFolder(Uri.file(file));\r\n}\r\n\r\nexport function isTestFileOrFolder(path: string | undefined): boolean {\r\n\treturn !!path && (isTestFile(path) || isTestFolder(path));\r\n}\r\n\r\nexport function isTestFile(file: string): boolean {\r\n\t// To be a test, you must be _test.dart AND inside a test folder.\r\n\t// https://github.com/Dart-Code/Dart-Code/issues/1165\r\n\t// https://github.com/Dart-Code/Dart-Code/issues/2021\r\n\t// https://github.com/Dart-Code/Dart-Code/issues/2034\r\n\treturn !!file && isDartFile(file)\r\n\t\t&& (\r\n\t\t\tisInsideFolderNamed(file, \"test\")\r\n\t\t\t|| isInsideFolderNamed(file, \"integration_test\")\r\n\t\t\t|| isInsideFolderNamed(file, \"test_driver\")\r\n\t\t\t|| config.allowTestsOutsideTestFolder\r\n\t\t)\r\n\t\t&& file.toLowerCase().endsWith(\"_test.dart\");\r\n}\r\n\r\n// Similar to isTestFile, but requires that the file is _test.dart because it will be used as\r\n// an entry point for pub test running.\r\nexport function isPubRunnableTestFile(file: string): boolean {\r\n\treturn !!file && isDartFile(file) && file.toLowerCase().endsWith(\"_test.dart\");\r\n}\r\n\r\nexport function isTestFolder(path: string | undefined): boolean {\r\n\treturn !!path\r\n\t\t&& (\r\n\t\t\tisInsideFolderNamed(path, \"test\")\r\n\t\t\t|| isInsideFolderNamed(path, \"integration_test\")\r\n\t\t) && fs.existsSync(path)\r\n\t\t&& fs.statSync(path).isDirectory();\r\n}\r\n\r\nexport function projectShouldUsePubForTests(folder: string, config: WorkspaceConfig): boolean {\r\n\treturn hasPubspec(folder) && !config.useVmForTests;\r\n}\r\n\r\nexport function isDartFile(file: string): boolean {\r\n\treturn !!file && path.extname(file.toLowerCase()) === \".dart\" && fs.existsSync(file) && fs.statSync(file).isFile();\r\n}\r\n\r\nexport function isInsideFolderNamed(file: string | undefined, folderName: string): boolean {\r\n\tif (!file)\r\n\t\treturn false;\r\n\r\n\tconst ws = workspace.getWorkspaceFolder(Uri.file(file));\r\n\r\n\tif (!ws)\r\n\t\treturn false;\r\n\r\n\tconst relPath = path.relative(fsPath(ws.uri), file).toLowerCase();\r\n\tconst segments = relPath.split(path.sep);\r\n\r\n\treturn segments.indexOf(folderName.toLowerCase()) !== -1;\r\n}\r\n\r\nexport function isValidEntryFile(file: string | undefined) {\r\n\treturn file && isDartFile(file) &&\r\n\t\t(\r\n\t\t\tisTestFile(file)\r\n\t\t\t|| isInsideFolderNamed(file, \"bin\") || isInsideFolderNamed(file, \"tool\") || isInsideFolderNamed(file, \"test_driver\")\r\n\t\t\t|| file.endsWith(`lib${path.sep}main.dart`)\r\n\t\t);\r\n}\r\n\r\nexport function getLatestSdkVersion(): Promise<string> {\r\n\treturn new Promise<string>((resolve, reject) => {\r\n\t\tconst options: https.RequestOptions = {\r\n\t\t\thostname: \"storage.googleapis.com\",\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tpath: \"/dart-archive/channels/stable/release/latest/VERSION\",\r\n\t\t\tport: 443,\r\n\t\t};\r\n\r\n\t\tconst req = https.request(options, (resp) => {\r\n\t\t\tif (!resp || !resp.statusCode || resp.statusCode < 200 || resp.statusCode > 300) {\r\n\t\t\t\treject({ message: `Failed to get Dart SDK Version ${resp && resp.statusCode}: ${resp && resp.statusMessage}` });\r\n\t\t\t} else {\r\n\t\t\t\tresp.on(\"data\", (d) => {\r\n\t\t\t\t\tresolve(JSON.parse(d.toString()).version);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treq.end();\r\n\t});\r\n}\r\n\r\n// Escapes a set of command line arguments so that the escaped string is suitable for passing as an argument\r\n// to another shell command.\r\n// Implementation is taken from https://github.com/xxorax/node-shell-escape\r\nexport function escapeShell(args: string[]) {\r\n\tconst ret: string[] = [];\r\n\targs.forEach((arg) => {\r\n\t\tif (/[^A-Za-z0-9_\\/:=-]/.test(arg)) {\r\n\t\t\targ = \"'\" + arg.replace(/'/g, \"'\\\\''\") + \"'\";\r\n\t\t\targ = arg.replace(/^(?:'')+/g, \"\") // unduplicate single-quote at the beginning\r\n\t\t\t\t.replace(/\\\\'''/g, \"\\\\'\"); // remove non-escaped single-quote if there are enclosed between 2 escaped\r\n\t\t}\r\n\t\tret.push(arg);\r\n\t});\r\n\treturn ret.join(\" \");\r\n}\r\n\r\nexport async function promptToReloadExtension(prompt?: string, buttonText?: string, offerLog?: boolean): Promise<void> {\r\n\tconst restartAction = buttonText || \"Reload\";\r\n\tconst actions = offerLog ? [restartAction, showLogAction] : [restartAction];\r\n\tconst ringLogContents = ringLog.toString();\r\n\tlet showPromptAgain = true;\r\n\tconst tempLogPath = path.join(os.tmpdir(), `log-${getRandomInt(0x1000, 0x10000).toString(16)}.txt`);\r\n\twhile (showPromptAgain) {\r\n\t\tshowPromptAgain = false;\r\n\t\tconst chosenAction = prompt && await window.showInformationMessage(prompt, ...actions);\r\n\t\tif (chosenAction === showLogAction) {\r\n\t\t\tshowPromptAgain = true;\r\n\t\t\topenLogContents(undefined, ringLogContents, tempLogPath);\r\n\t\t} else if (!prompt || chosenAction === restartAction) {\r\n\t\t\tcommands.executeCommand(\"_dart.reloadExtension\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst shouldLogTimings = false;\r\nconst start = process.hrtime.bigint();\r\nlet last = start;\r\nfunction pad(str: string, length: number) {\r\n\twhile (str.length < length)\r\n\t\tstr = \"0\" + str;\r\n\treturn str;\r\n}\r\nexport const logTime = (taskFinished?: string) => {\r\n\tif (!shouldLogTimings)\r\n\t\treturn;\r\n\tconst end = process.hrtime.bigint();\r\n\tconsole.log(`${pad((end - last).toString(), 15)} ${taskFinished ? \"<== \" + taskFinished : \"\"}`);\r\n\tlast = end;\r\n};\r\n\r\nexport function openLogContents(logType = `txt`, logContents: string, tempPath?: string) {\r\n\tif (!tempPath)\r\n\t\ttempPath = path.join(os.tmpdir(), `log-${getRandomInt(0x1000, 0x10000).toString(16)}.${logType}`);\r\n\tfs.writeFileSync(tempPath, logContents);\r\n\tworkspace.openTextDocument(tempPath).then(window.showTextDocument);\r\n}\r\n\r\n/// Gets all excluded folders (full absolute paths) for a given workspace\r\n/// folder based on config.\r\nexport function getExcludedFolders(f: WorkspaceFolder | undefined): string[] {\r\n\tif (!f)\r\n\t\treturn [];\r\n\r\n\tconst excludedForWorkspace = config.for(f.uri).analysisExcludedFolders;\r\n\tif (!excludedForWorkspace || !Array.isArray(excludedForWorkspace))\r\n\t\treturn [];\r\n\r\n\tconst workspacePath = fsPath(f.uri);\r\n\treturn excludedForWorkspace.map((folder) => {\r\n\t\t// Handle both relative and absolute paths.\r\n\t\tif (!path.isAbsolute(folder))\r\n\t\t\tfolder = path.join(workspacePath, folder);\r\n\t\treturn folder;\r\n\t});\r\n}\r\n","import * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport { platformEol } from \"../../shared/constants\";\r\nimport { LogCategory } from \"../../shared/enums\";\r\nimport { getRandomInt } from \"../../shared/utils/fs\";\r\nimport { config } from \"../config\";\r\n\r\nlet extensionLogPath: string;\r\nexport function getExtensionLogPath() {\r\n  extensionLogPath = extensionLogPath || config.extensionLogFile || path.join(process.env.DC_TEST_LOGS || os.tmpdir(), `dart-code-startup-log-${getRandomInt(0x1000, 0x10000).toString(16)}.txt`);\r\n  return extensionLogPath;\r\n}\r\nexport const userSelectableLogCategories: { [key: string]: LogCategory } = {\r\n  \"Analysis Server\": LogCategory.Analyzer,\r\n  \"Command Processes\": LogCategory.CommandProcesses,\r\n  \"Debugger and VM Service\": LogCategory.VmService,\r\n};\r\n\r\nexport const analysisServerLogCategories = [\r\n  LogCategory.Analyzer,\r\n  LogCategory.CommandProcesses,\r\n];\r\n\r\nexport const extensionsLogCategories = [\r\n  LogCategory.CommandProcesses,\r\n];\r\n\r\nexport const debuggingLogCategories = Object.values(userSelectableLogCategories)\r\n  .filter((c) => c !== LogCategory.Analyzer);\r\n\r\nconst logHeader: string[] = [];\r\nexport function clearLogHeader() {\r\n  logHeader.length = 0;\r\n}\r\nexport function getLogHeader() {\r\n  if (!logHeader.length)\r\n    return \"\";\r\n  return logHeader.join(platformEol) + platformEol + platformEol;\r\n}\r\nexport function addToLogHeader(f: () => string) {\r\n  try {\r\n    logHeader.push(f().replace(/\\r/g, \"\").replace(/\\n/g, \"\\r\\n\"));\r\n  } catch {\r\n    // Don't log here; we may be trying to access things that aren't available yet.\r\n  }\r\n}\r\n","import { promptToReloadExtension } from \"../utils\";\r\n\r\nexport type NullAsUndefined<T> = null extends T ? Exclude<T, null> | undefined : T;\r\n\r\nexport function nullToUndefined<T>(value: T): NullAsUndefined<T> {\r\n  return (value === null ? undefined : value) as NullAsUndefined<T>;\r\n}\r\n\r\nlet isShowingAnalyzerError = false;\r\n\r\nexport function reportAnalyzerTerminatedWithError(duringStartup: boolean = false) {\r\n  if (isShowingAnalyzerError)\r\n    return;\r\n  isShowingAnalyzerError = true;\r\n  const message = duringStartup\r\n    ? \"The Hetu Analyzer could not be started.\"\r\n    : \"The Hetu Analyzer has terminated.\";\r\n  // tslint:disable-next-line: no-floating-promises\r\n  promptToReloadExtension(message, undefined, true).then(() => isShowingAnalyzerError = false);\r\n}\r\n","import { LogCategory } from \"../../shared/enums\";\r\nimport { Logger, SpawnedProcess } from \"../../shared/interfaces\";\r\nimport { logProcess } from \"../../shared/logging\";\r\nimport { safeSpawn } from \"../../shared/processes\";\r\nimport { nullToUndefined } from \"./misc\";\r\n\r\n// Environment used when spawning Dart and Flutter processes.\r\nlet toolEnv: /* { [key: string]: string | undefined } */ any = {};\r\nlet globalFlutterArgs: string[] = [];\r\n\r\nexport function getToolEnv() {\r\n\treturn toolEnv;\r\n}\r\n\r\nexport function getGlobalFlutterArgs() {\r\n\treturn globalFlutterArgs;\r\n}\r\n\r\nexport function setupToolEnv(envOverrides?: any) {\r\n\ttoolEnv = {};\r\n\tglobalFlutterArgs = [];\r\n\r\n\ttoolEnv.FLUTTER_HOST = \"VSCode\";\r\n\ttoolEnv.PUB_ENVIRONMENT = (toolEnv.PUB_ENVIRONMENT ? `${toolEnv.PUB_ENVIRONMENT}:` : \"\") + \"vscode.dart-code\";\r\n\tif (process.env.DART_CODE_IS_TEST_RUN) {\r\n\t\ttoolEnv.PUB_ENVIRONMENT += \".test.bot\";\r\n\t\tglobalFlutterArgs.push(\"--suppress-analytics\");\r\n\t}\r\n\r\n\t// Add on any overrides.\r\n\tif (envOverrides)\r\n\t\ttoolEnv = Object.assign(toolEnv, envOverrides);\r\n}\r\n// TODO: Should we move this to extension activate?\r\nsetupToolEnv();\r\n\r\nexport function safeToolSpawn(workingDirectory: string | undefined, binPath: string, args: string[], envOverrides?: { [key: string]: string | undefined }): SpawnedProcess {\r\n\treturn safeSpawn(workingDirectory, binPath, args, { envOverrides, toolEnv });\r\n}\r\n\r\n/// Runs a process and returns the exit code, stdout, stderr. Always resolves even for non-zero exit codes.\r\nexport function runProcess(logger: Logger, workingDirectory: string | undefined, binPath: string, args: string[], envOverrides?: { [key: string]: string | undefined }): Promise<RunProcessResult> {\r\n\treturn new Promise((resolve) => {\r\n\t\tlogger.info(`Spawning ${binPath} with args ${JSON.stringify(args)} in ${workingDirectory} with env ${JSON.stringify(envOverrides)}`);\r\n\t\tconst proc = safeToolSpawn(workingDirectory, binPath, args, envOverrides);\r\n\t\tlogProcess(logger, LogCategory.CommandProcesses, proc);\r\n\r\n\t\tconst out: string[] = [];\r\n\t\tconst err: string[] = [];\r\n\t\tproc.stdout.on(\"data\", (data: Buffer) => out.push(data.toString()));\r\n\t\tproc.stderr.on(\"data\", (data: Buffer) => err.push(data.toString()));\r\n\t\tproc.on(\"exit\", (code) => {\r\n\t\t\tresolve(new RunProcessResult(nullToUndefined(code), out.join(\"\"), err.join(\"\")));\r\n\t\t});\r\n\t});\r\n}\r\n\r\nexport class RunProcessResult {\r\n\tconstructor(public readonly exitCode: number | undefined, public readonly stdout: string, public readonly stderr: string) { }\r\n}\r\n","import { Location, NotificationType, Range, RequestType, RequestType0, TextDocumentPositionParams, WorkspaceEdit } from \"vscode-languageclient\";\r\n\r\nexport class AnalyzerStatusNotification {\r\n\tpublic static type = new NotificationType<AnalyzerStatusParams>(\"$/analyzerStatus\");\r\n}\r\n\r\nexport interface AnalyzerStatusParams {\r\n\treadonly isAnalyzing: boolean;\r\n}\r\n\r\nexport class PublishClosingLabelsNotification {\r\n\tpublic static type = new NotificationType<ClosingLabelsParams>(\"dart/textDocument/publishClosingLabels\");\r\n}\r\n\r\nexport class PublishOutlineNotification {\r\n\tpublic static type = new NotificationType<OutlineParams>(\"dart/textDocument/publishOutline\");\r\n}\r\n\r\nexport class PublishFlutterOutlineNotification {\r\n\tpublic static type = new NotificationType<FlutterOutlineParams>(\"dart/textDocument/publishFlutterOutline\");\r\n}\r\n\r\nexport class SuperRequest {\r\n\tpublic static type = new RequestType<TextDocumentPositionParams, Location | null, void>(\"dart/textDocument/super\");\r\n}\r\n\r\nexport class DiagnosticServerRequest {\r\n\tpublic static type = new RequestType0<{ port: number }, void>(\"dart/diagnosticServer\");\r\n}\r\n\r\nexport class ReanalyzeRequest {\r\n\tpublic static type = new RequestType0<void, void>(\"dart/reanalyze\");\r\n}\r\n\r\nexport class CompleteStatementRequest {\r\n\tpublic static type = new RequestType<TextDocumentPositionParams, WorkspaceEdit | null, void>(\"dart/completeStatement\");\r\n}\r\n\r\nexport interface ClosingLabelsParams {\r\n\treadonly uri: string;\r\n\treadonly labels: ClosingLabel[];\r\n}\r\n\r\nexport interface ClosingLabel {\r\n\treadonly label: string;\r\n\treadonly range: Range;\r\n}\r\n\r\nexport interface OutlineParams {\r\n\treadonly uri: string;\r\n\treadonly outline: Outline;\r\n}\r\n\r\nexport interface Outline {\r\n\treadonly element: Element;\r\n\treadonly range: Range;\r\n\treadonly codeRange: Range;\r\n\treadonly children: Outline[] | undefined;\r\n}\r\n\r\nexport interface FlutterOutlineParams {\r\n\treadonly uri: string;\r\n\treadonly outline: FlutterOutline;\r\n}\r\n\r\nexport interface FlutterOutline {\r\n\treadonly attributes?: FlutterOutlineAttribute[];\r\n\treadonly variableName?: string;\r\n\treadonly className?: string;\r\n\treadonly label?: string;\r\n\treadonly dartElement?: Element;\r\n\treadonly range: Range;\r\n\treadonly codeRange: Range;\r\n\treadonly children?: FlutterOutline[];\r\n\treadonly kind: string;\r\n}\r\n\r\nexport interface FlutterOutlineAttribute {\r\n\tname: string;\r\n\tlabel: string;\r\n\tvalueRange: Range;\r\n}\r\n\r\nexport interface Element {\r\n\treadonly name: string;\r\n\treadonly range: Range | undefined;\r\n\treadonly kind: string;\r\n\treadonly parameters?: string;\r\n\treadonly typeParameters?: string;\r\n\treadonly returnType?: string;\r\n}\r\n","import { EventEmitter } from \"./events\";\r\nimport { IAmDisposable, Logger } from \"./interfaces\";\r\nimport { disposeAll, PromiseCompleter } from \"./utils\";\r\nimport { resolvedPromise } from \"./utils/promises\";\r\n\r\nexport abstract class Analyzer implements IAmDisposable {\r\n\tprotected disposables: IAmDisposable[] = [];\r\n\r\n\tprotected readonly onReadyCompleter = new PromiseCompleter<void>();\r\n\tpublic readonly onReady = this.onReadyCompleter.promise;\r\n\r\n\tprivate onAnalysisCompleteCompleter = new PromiseCompleter<void>();\r\n\t// InitialAnalysis uses the very first promise from onAnalysisCompleteCompleter.\r\n\tpublic readonly onInitialAnalysis = this.onAnalysisCompleteCompleter.promise;\r\n\r\n\tpublic get onCurrentAnalysisComplete() { return this.isAnalyzing ? this.onAnalysisCompleteCompleter.promise : resolvedPromise; }\r\n\tpublic get onNextAnalysisComplete() { return this.onAnalysisCompleteCompleter.promise; }\r\n\r\n\t// TODO: Remove suppressProgress when non-LSP is gone and Flutter stable has LSP server that uses $/progress.\r\n\tprotected readonly onAnalysisStatusChangeEmitter = new EventEmitter<AnalyzingEvent>();\r\n\tpublic readonly onAnalysisStatusChange = this.onAnalysisStatusChangeEmitter.event;\r\n\tprivate isAnalyzing = false;\r\n\r\n\tpublic abstract getDiagnosticServerPort(): Promise<{ port: number }>;\r\n\tpublic abstract forceReanalyze(): Promise<void>;\r\n\r\n\tconstructor(protected readonly logger: Logger) {\r\n\t\tthis.disposables.push(this.onAnalysisStatusChangeEmitter);\r\n\t\t// tslint:disable-next-line: no-floating-promises\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\tprivate async setup(): Promise<void> {\r\n\t\tawait this.onReady;\r\n\t\tthis.onAnalysisStatusChange.listen((status) => {\r\n\t\t\tthis.isAnalyzing = status.isAnalyzing;\r\n\t\t\tif (!status.isAnalyzing) {\r\n\t\t\t\tthis.onAnalysisCompleteCompleter.resolve();\r\n\t\t\t\tthis.onAnalysisCompleteCompleter = new PromiseCompleter<void>();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic dispose(): void | Promise<void> {\r\n\t\tdisposeAll(this.disposables);\r\n\t}\r\n}\r\n\r\nexport interface AnalyzingEvent {\r\n\tisAnalyzing: boolean;\r\n\tsuppressProgress?: boolean;\r\n}\r\n","import * as fs from \"fs\";\r\nimport { versionIsAtLeast } from \"./utils\";\r\n\r\nexport const hetuscriptExtensionIdentifier = \"hetu-script.hetuscript\";\r\nexport const dartCodeExtensionIdentifier = \"Dart-Code.dart-code\";\r\nexport const flutterExtensionIdentifier = \"Dart-Code.flutter\";\r\nexport const debugAdapterPath = \"out/dist/debug.js\";\r\n\r\nexport const isCI = !!process.env.CI;\r\nexport const isWin = process.platform.startsWith(\"win\");\r\nexport const isMac = process.platform === \"darwin\";\r\nexport const isLinux = !isWin && !isMac;\r\nexport const isChromeOS = isLinux && fs.existsSync(\"/dev/.cros_milestone\");\r\n// Used for code checks and in Dart SDK urls so Chrome OS is considered Linux.\r\nexport const dartPlatformName = isWin ? \"win\" : isMac ? \"mac\" : \"linux\";\r\n// Used for display (logs, analytics) so Chrome OS is its own.\r\nexport const platformDisplayName = isWin ? \"win\" : isMac ? \"mac\" : isChromeOS ? \"chromeos\" : \"linux\";\r\nexport const platformEol = isWin ? \"\\r\\n\" : \"\\n\";\r\n\r\nexport const androidStudioExecutableNames = isWin ? [\"studio64.exe\"] : [\"studio.sh\", \"studio\"];\r\nexport const executableNames = {\r\n  dart: isWin ? \"dart.exe\" : \"dart\",\r\n  dartdoc: isWin ? \"dartdoc.bat\" : \"dartdoc\",\r\n  flutter: isWin ? \"flutter.bat\" : \"flutter\",\r\n  pub: isWin ? \"pub.bat\" : \"pub\",\r\n};\r\n\r\nexport const hetuLSPPath = \"bin/ht_lsp.dill\";\r\n\r\nexport const getExecutableName = (cmd: string) => (executableNames as { [key: string]: string | undefined })[cmd] ?? cmd;\r\nexport const dartVMPath = \"bin/\" + executableNames.dart;\r\nexport const dartDocPath = \"bin/\" + executableNames.dartdoc;\r\nexport const pubPath = \"bin/\" + executableNames.pub;\r\nexport const flutterPath = \"bin/\" + executableNames.flutter;\r\nexport const pubSnapshotPath = \"bin/snapshots/pub.dart.snapshot\";\r\nexport const analyzerSnapshotPath = \"bin/snapshots/analysis_server.dart.snapshot\";\r\nexport const androidStudioPaths = androidStudioExecutableNames.map((s) => \"bin/\" + s);\r\nexport const DART_DOWNLOAD_URL = \"https://dart.dev/get-dart\";\r\nexport const FLUTTER_DOWNLOAD_URL = \"https://flutter.dev/setup/\";\r\n\r\nexport const IS_LSP_CONTEXT = \"dart-code:isLsp\";\r\n\r\nexport const DART_TEST_SUITE_NODE_CONTEXT = \"dart-code:testSuiteNode\";\r\nexport const DART_TEST_CONTAINER_NODE_WITH_SKIPS_CONTEXT = \"dart-code:testContainerNodeWithSkips\";\r\nexport const DART_TEST_CONTAINER_NODE_WITH_FAILURES_CONTEXT = \"dart-code:testContainerNodeWithFailures\";\r\nexport const DART_TEST_GROUP_NODE_CONTEXT = \"dart-code:testGroupNode\";\r\nexport const DART_TEST_TEST_NODE_CONTEXT = \"dart-code:testTestNode\";\r\nexport const DART_TEST_CAN_RUN_SKIPPED_CONTEXT = \"dart-code:canRunSkipped\";\r\n\r\nexport const DART_DEP_PROJECT_NODE_CONTEXT = \"dart-code:depProjectNode\";\r\nexport const DART_DEP_PACKAGE_NODE_CONTEXT = \"dart-code:depPackageNode\";\r\nexport const DART_DEP_FOLDER_NODE_CONTEXT = \"dart-code:depFolderNode\";\r\nexport const DART_DEP_FILE_NODE_CONTEXT = \"dart-code:depFileNode\";\r\nexport const DART_IS_CAPTURING_LOGS_CONTEXT = \"dart-code:isCapturingLogs\";\r\nexport const PUB_OUTDATED_SUPPORTED_CONTEXT = \"dart-code:pubOutdatedSupported\";\r\n\r\nexport const IS_RUNNING_LOCALLY_CONTEXT = \"dart-code:isRunningLocally\";\r\n\r\nexport const stopLoggingAction = \"Stop Logging\";\r\nexport const showLogAction = \"Show Log\";\r\n\r\nexport const restartReasonManual = \"manual\";\r\nexport const restartReasonSave = \"save\";\r\n\r\nexport const debugLaunchProgressId = \"launch\";\r\nexport const debugTerminatingProgressId = \"terminate\";\r\n\r\nexport const pubGlobalDocsUrl = \"https://www.dartlang.org/tools/pub/cmd/pub-global\";\r\nexport const stagehandInstallationInstructionsUrl = \"https://github.com/dart-lang/stagehand#installation\";\r\n\r\nexport const issueTrackerAction = \"Issue Tracker\";\r\nexport const issueTrackerUri = \"https://github.com/Dart-Code/Dart-Code/issues\";\r\n\r\nexport const wantToTryDevToolsPrompt = \"Dart DevTools includes additional tools for debugging and profiling Flutter apps, including a Widget Inspector. Try it?\";\r\nexport const openDevToolsAction = \"Open\";\r\nexport const alwaysOpenAction = \"Always Open\";\r\nexport const notTodayAction = \"Not Now\";\r\nexport const doNotAskAgainAction = \"Never Ask\";\r\nexport const moreInfoAction = \"More Info\";\r\n\r\nexport const flutterSurveyDataUrl = \"https://flutter.dev/f/flutter-survey-metadata.json\";\r\nexport const flutterSurveyAnalyticsText = \"By clicking on this link you agree to share feature usage along with the survey responses.\";\r\nexport const takeSurveyAction = \"Take Survey\";\r\nexport const skipThisSurveyAction = \"Skip This Survey\";\r\n\r\nexport const modifyingFilesOutsideWorkspaceInfoUrl = \"https://dartcode.org/docs/modifying-files-outside-workspace/\";\r\nexport const initializingFlutterMessage = \"Initializing Flutter. This may take a few minutes.\";\r\n\r\nexport const snapBinaryPath = \"/usr/bin/snap\";\r\nexport const snapFlutterBinaryPath = \"/snap/bin/flutter\";\r\n\r\n// Minutes.\r\nexport const fiveMinutesInMs = 1000 * 60 * 5;\r\nexport const tenMinutesInMs = 1000 * 60 * 10;\r\nexport const twentyMinutesInMs = 1000 * 60 * 20;\r\n\r\n// Hours.\r\nexport const twoHoursInMs = 1000 * 60 * 60 * 2;\r\nexport const twentyHoursInMs = 1000 * 60 * 60 * 20;\r\nexport const fortyHoursInMs = 1000 * 60 * 60 * 40;\r\n\r\n// Duration for not showing a prompt that has been shown before.\r\nexport const noRepeatPromptThreshold = twentyHoursInMs;\r\nexport const longRepeatPromptThreshold = fortyHoursInMs;\r\n\r\nexport const pleaseReportBug = \"Please raise a bug against the Dart extension for VS Code.\";\r\n\r\n// Chrome OS exposed ports: 8000, 8008, 8080, 8085, 8888, 9005, 3000, 4200, 5000\r\nexport const CHROME_OS_DEVTOOLS_PORT = 8080;\r\nexport const CHROME_OS_VM_SERVICE_PORT = 8085;\r\n\r\nexport const DART_CREATE_PROJECT_TRIGGER_FILE = \"dart.sh.create\";\r\nexport const FLUTTER_CREATE_PROJECT_TRIGGER_FILE = \"flutter.create\";\r\n\r\nexport const REFACTOR_FAILED_DOC_MODIFIED = \"This refactor cannot be applied because the document has changed.\";\r\nexport const REFACTOR_ANYWAY = \"Refactor Anyway\";\r\n\r\nexport const TRACK_WIDGET_CREATION_ENABLED = \"dart-code:trackWidgetCreationEnabled\";\r\nexport const HAS_LAST_DEBUG_CONFIG = \"dart-code:hasLastDebugConfig\";\r\nexport const HAS_LAST_TEST_DEBUG_CONFIG = \"dart-code:hasLastTestDebugConfig\";\r\nexport const isInFlutterDebugModeDebugSessionContext = \"dart-code:isInFlutterDebugModeDebugSession\";\r\nexport const isInFlutterProfileModeDebugSessionContext = \"dart-code:isInFlutterProfileModeDebugSession\";\r\nexport const showErrorsAction = \"Show Errors\";\r\nexport const debugAnywayAction = \"Debug Anyway\";\r\n\r\nexport const userPromptContextPrefix = \"hasPrompted.\";\r\nexport const installFlutterExtensionPromptKey = \"install_flutter_extension_3\";\r\nexport const useRecommendedSettingsPromptKey = \"use_recommended_settings\";\r\nexport const yesAction = \"Yes\";\r\nexport const noAction = \"No\";\r\nexport const skipAction = \"Skip\";\r\nexport const iUnderstandAction = \"I Understand\";\r\nexport const showRecommendedSettingsAction = \"Show Recommended Settings\";\r\nexport const recommendedSettingsUrl = \"https://dartcode.org/docs/recommended-settings/\";\r\nexport const openSettingsAction = \"Open Settings File\";\r\nexport const reactivateDevToolsAction = \"Reactivate DevTools\";\r\n\r\nexport const vmServiceListeningBannerPattern: RegExp = new RegExp(\"Observatory (?:listening on|.* is available at:) (http:.+)\");\r\nexport const vmServiceHttpLinkPattern: RegExp = new RegExp(\"(http://[\\\\d\\\\.:]+/)\");\r\n\r\nexport const runFlutterCreatePrompt = (platformType: string) => `Run 'flutter create --platforms ${platformType} .' to enable support for this platform?`;\r\nexport const cancelAction = \"Cancel\";\r\n\r\nexport const validMethodNameRegex = new RegExp(\"^[a-zA-Z_][a-zA-Z0-9_]*$\");\r\nexport const validClassNameRegex = validMethodNameRegex;\r\n\r\nexport const dartRecommendedConfig = {\r\n  // Automatically format code on save and during typing of certain characters\r\n  // (like `;` and `}`).\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.formatOnType\": true,\r\n\r\n  // Draw a guide line at 80 characters, where Dart's formatting will wrap code.\r\n  \"editor.rulers\": [80],\r\n\r\n  // Disables built-in highlighting of words that match your selection. Without\r\n  // this, all instances of the selected text will be highlighted, interfering\r\n  // with Dart's ability to highlight only exact references to the selected variable.\r\n  \"editor.selectionHighlight\": false,\r\n\r\n  // By default, VS Code prevents code completion from popping open when in\r\n  // \"snippet mode\" (editing placeholders in inserted code). Setting this option\r\n  // to `false` stops that and allows completion to open as normal, as if you\r\n  // weren't in a snippet placeholder.\r\n  \"editor.suggest.snippetsPreventQuickSuggestions\": false,\r\n\r\n  // By default, VS Code will pre-select the most recently used item from code\r\n  // completion. This is usually not the most relevant item.\r\n  //\r\n  // \"first\" will always select top item\r\n  // \"recentlyUsedByPrefix\" will filter the recently used items based on the\r\n  //     text immediately preceeding where completion was invoked.\r\n  \"editor.suggestSelection\": \"first\",\r\n\r\n  // Allows pressing <TAB> to complete snippets such as `for` even when the\r\n  // completion list is not visible.\r\n  \"editor.tabCompletion\": \"onlySnippets\",\r\n\r\n  // By default, VS Code will popualte code completion with words found in the\r\n  // current file when a language service does not provide its own completions.\r\n  // This results in code completion suggesting words when editing comments and\r\n  // strings. This setting will prevent that.\r\n  \"editor.wordBasedSuggestions\": false,\r\n};\r\n\r\nexport const defaultLaunchJson = JSON.stringify(\r\n  {\r\n    \"configurations\": [\r\n      {\r\n        \"name\": \"Dart & Flutter\",\r\n        \"request\": \"launch\",\r\n        \"type\": \"dart\",\r\n      },\r\n    ],\r\n    \"version\": \"0.2.0\",\r\n  },\r\n  undefined, \"\\t\"\r\n);\r\n\r\n// This indicates that a version is the latest possible.\r\nexport const MAX_VERSION = \"999.999.999\";\r\n","export enum DebuggerType {\r\n\tDart,\r\n\tPubTest,\r\n\tFlutter,\r\n\tFlutterTest,\r\n\tWeb,\r\n\tWebTest,\r\n}\r\n\r\nexport enum TestStatus {\r\n\t// This should be in order such that the highest number is the one to show\r\n\t// when aggregating (eg. from children).\r\n\tWaiting,\r\n\tSkipped,\r\n\tPassed,\r\n\tUnknown,\r\n\tFailed,\r\n\tRunning,\r\n}\r\n\r\n/// The service extensions we know about.\r\nexport enum VmServiceExtension {\r\n\tPlatformOverride = \"ext.flutter.platformOverride\",\r\n\tDebugBanner = \"ext.flutter.debugAllowBanner\",\r\n\tCheckElevations = \"ext.flutter.debugCheckElevationsEnabled\",\r\n\tDebugPaint = \"ext.flutter.debugPaint\",\r\n\tDriver = \"ext.flutter.driver\",\r\n\tPaintBaselines = \"ext.flutter.debugPaintBaselinesEnabled\",\r\n\tInspectorSelectMode = \"ext.flutter.inspector.show\",\r\n\tInspectorSetPubRootDirectories = \"ext.flutter.inspector.setPubRootDirectories\",\r\n\tInspectorStructuredErrors = \"ext.flutter.inspector.structuredErrors\",\r\n\tBrightnessOverride = \"ext.flutter.brightnessOverride\",\r\n\tRepaintRainbow = \"ext.flutter.repaintRainbow\",\r\n\tPerformanceOverlay = \"ext.flutter.showPerformanceOverlay\",\r\n\tSlowAnimations = \"ext.flutter.timeDilation\",\r\n}\r\n\r\n/// The service extensions we know about and allow toggling via commands.\r\nexport enum VmService {\r\n\tHotReload = \"reloadSources\",\r\n\tHotRestart = \"hotRestart\",\r\n\tLaunchDevTools = \"launchDevTools\",\r\n}\r\n\r\nexport enum VersionStatus {\r\n\tNotInstalled,\r\n\tUpdateRequired,\r\n\tUpdateAvailable,\r\n\tValid,\r\n}\r\n\r\nexport enum LogCategory {\r\n\tGeneral,\r\n\tCI,\r\n\tCommandProcesses,\r\n\tDevTools,\r\n\tAnalyzer,\r\n\tPubTest,\r\n\tFlutterDaemon,\r\n\tFlutterRun,\r\n\tFlutterTest,\r\n\tVmService,\r\n\tWebDaemon,\r\n}\r\n\r\nexport enum LogSeverity {\r\n\tInfo,\r\n\tWarn,\r\n\tError,\r\n}\r\n\r\nexport const debugOptionNames = [\"my code\", \"my code + packages\", \"my code + packages + SDK\", \"my code + SDK\"];\r\nexport enum DebugOption {\r\n\tMyCode,\r\n\tMyCodePackages,\r\n\tMyCodePackagesSdk,\r\n\tMyCodeSdk,\r\n}\r\n","import * as evt from \"events\";\r\nimport { IAmDisposable } from \"./interfaces\";\r\n\r\nexport class EventEmitter<T> implements IAmDisposable {\r\n\tprivate emitter = new evt.EventEmitter();\r\n\r\n\tpublic fire(x: T): void {\r\n\t\tthis.emitter.emit(\"thing\", x);\r\n\t}\r\n\r\n\tpublic listen(listener: (x: T) => void): IAmDisposable {\r\n\t\tthis.emitter.on(\"thing\", listener);\r\n\t\treturn {\r\n\t\t\tdispose: () => { this.emitter.removeListener(\"thing\", listener); },\r\n\t\t};\r\n\t}\r\n\r\n\tpublic get event(): Event<T> { return this; }\r\n\r\n\tpublic dispose() {\r\n\t\tthis.emitter.removeAllListeners();\r\n\t}\r\n}\r\n\r\nexport interface Event<T> {\r\n\tlisten(listener: (x: T) => void): IAmDisposable;\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport * as fs from \"fs\";\r\nimport * as os from \"os\";\r\nimport * as path from \"path\";\r\nimport { platformEol } from \"./constants\";\r\nimport { LogCategory, LogSeverity } from \"./enums\";\r\nimport { IAmDisposable, Logger, LogMessage, SomeError, SpawnedProcess } from \"./interfaces\";\r\nimport { errorString } from \"./utils\";\r\n\r\nclass LogEmitter extends EventEmitter {\r\n  public fire(msg: LogMessage): void {\r\n    this.emit(\"log\", msg);\r\n  }\r\n  public onLog(listener: (message: LogMessage) => void): IAmDisposable {\r\n    this.on(\"log\", listener);\r\n    return {\r\n      dispose: () => { this.removeListener(\"log\", listener); },\r\n    };\r\n  }\r\n}\r\n\r\nexport class EmittingLogger implements Logger, IAmDisposable {\r\n  private readonly onLogEmitter = new LogEmitter();\r\n  public readonly onLog = (listener: (message: LogMessage) => void) => this.onLogEmitter.onLog(listener);\r\n\r\n  private log(message: string, severity: LogSeverity, category = LogCategory.General): void {\r\n    this.onLogEmitter.fire(new LogMessageImpl(message, severity, category));\r\n  }\r\n\r\n  public info(message: string, category?: LogCategory): void {\r\n    this.log(message, LogSeverity.Info, category);\r\n  }\r\n  public warn(errorOrMessage: SomeError, category?: LogCategory): void {\r\n    this.log(errorString(errorOrMessage), LogSeverity.Warn, category);\r\n  }\r\n  public error(errorOrMessage: SomeError, category?: LogCategory): void {\r\n    this.log(errorString(errorOrMessage), LogSeverity.Error, category);\r\n  }\r\n\r\n  public dispose(): void {\r\n    this.onLogEmitter.removeAllListeners();\r\n  }\r\n}\r\n\r\nclass LogMessageImpl implements LogMessage {\r\n  constructor(\r\n    readonly message: string,\r\n    readonly severity: LogSeverity,\r\n    readonly category: LogCategory,\r\n  ) { }\r\n\r\n  public toLine(maxLength: number): string {\r\n    const logMessage = (\r\n      maxLength && this.message && this.message.length > maxLength\r\n        ? this.message.substring(0, maxLength) + \"…\"\r\n        : (this.message || \"<empty message>\")\r\n    ).trimRight();\r\n\r\n    const time = `[${(new Date()).toLocaleTimeString()}]`;\r\n    const prefix = `[${LogCategory[this.category]}] [${LogSeverity[this.severity]}]`;\r\n    return `${time} ${prefix} ${logMessage}`;\r\n  }\r\n}\r\n\r\nexport class CategoryLogger implements Logger {\r\n  constructor(private base: Logger, private defaultCategory: LogCategory) { }\r\n\r\n  public info(message: string, category: LogCategory = this.defaultCategory): void {\r\n    this.base.info(message, category);\r\n  }\r\n  public warn(errorOrMessage: SomeError, category: LogCategory = this.defaultCategory): void {\r\n    this.base.warn(errorOrMessage, category);\r\n  }\r\n  public error(errorOrMessage: SomeError, category: LogCategory = this.defaultCategory): void {\r\n    this.base.error(errorOrMessage, category);\r\n  }\r\n}\r\n\r\nclass NullLogger implements Logger {\r\n  // tslint:disable-next-line: no-empty\r\n  public info(message: string, category?: LogCategory): void { }\r\n  // tslint:disable-next-line: no-empty\r\n  public warn(message: SomeError, category?: LogCategory): void { }\r\n  // tslint:disable-next-line: no-empty\r\n  public error(error: SomeError, category?: LogCategory): void { }\r\n}\r\n\r\nexport const nullLogger = new NullLogger();\r\n\r\nexport function logProcess(logger: Logger, category: LogCategory, process: SpawnedProcess): void {\r\n  const prefix = `(PROC ${process.pid})`;\r\n  logger.info(`${prefix} Logging data for process...`, category);\r\n  process.stdout.on(\"data\", (data) => logger.info(`${prefix} ${data}`, category));\r\n  process.stderr.on(\"data\", (data) => logger.info(`${prefix} ${data}`, category));\r\n  process.on(\"close\", (code, signal) => logger.info(`${prefix} closed (${code}, ${signal})`, category));\r\n  process.on(\"exit\", (code, signal) => logger.info(`${prefix} exited (${code}, ${signal})`, category));\r\n}\r\n\r\nexport function logToConsole(logger: EmittingLogger): IAmDisposable {\r\n  return logger.onLog((m) => {\r\n    if (m.severity === LogSeverity.Error)\r\n      console.error(m.toLine(1000));\r\n    else if (m.severity === LogSeverity.Warn)\r\n      console.warn(m.toLine(1000));\r\n    else if (m.severity === LogSeverity.Info)\r\n      console.info(m.toLine(1000));\r\n  });\r\n}\r\n\r\nexport function captureLogs(logger: EmittingLogger, file: string, header: string, maxLogLineLength: number, logCategories: LogCategory[], excludeLogCategories = false): ({ dispose: () => Promise<void> | void }) {\r\n  if (!file || !path.isAbsolute(file))\r\n    throw new Error(\"Path passed to logTo must be an absolute path\");\r\n  const time = (detailed = false) => detailed ? `[${(new Date()).toTimeString()}] ` : `[${(new Date()).toLocaleTimeString()}] `;\r\n  let logStream: fs.WriteStream | undefined = fs.createWriteStream(file);\r\n  if (header)\r\n    logStream.write(header);\r\n\r\n  const categoryNames = logCategories.map((c) => LogCategory[c]);\r\n  logStream.write(`Logging Categories:${platformEol}    ${categoryNames.join(\", \")}${platformEol}${platformEol}`);\r\n\r\n  logStream.write(`${(new Date()).toDateString()} ${time(true)}Log file started${platformEol}`);\r\n  let fileLogger: IAmDisposable | undefined = logger.onLog((e) => {\r\n    if (!logStream)\r\n      return;\r\n\r\n    // We should log this event if:\r\n    // - We don't have a category filter; or\r\n    // - The category filter includes this category; or\r\n    // - The log is WARN/ERROR (they get logged everywhere).\r\n    const shouldLog = (excludeLogCategories\r\n      ? logCategories.indexOf(e.category) === -1\r\n      : logCategories.indexOf(e.category) !== -1)\r\n      || e.severity === LogSeverity.Warn\r\n      || e.severity === LogSeverity.Error;\r\n    if (!shouldLog)\r\n      return;\r\n\r\n    logStream.write(`${e.toLine(maxLogLineLength)}${os.EOL}`);\r\n  });\r\n  return {\r\n    dispose(): Promise<void> | void {\r\n      if (fileLogger) {\r\n        fileLogger.dispose();\r\n        fileLogger = undefined;\r\n      }\r\n      return new Promise((resolve) => {\r\n        if (logStream) {\r\n          logStream.write(`${(new Date()).toDateString()} ${time(true)}Log file ended${os.EOL}`);\r\n          logStream.end(resolve);\r\n          logStream = undefined;\r\n        }\r\n      });\r\n    },\r\n  };\r\n}\r\n\r\nexport class RingLog {\r\n  private readonly lines: string[];\r\n  private pointer = 0;\r\n\r\n  public get rawLines(): readonly string[] { return this.lines; }\r\n\r\n  constructor(private size: number) {\r\n    this.lines = new Array<string>(this.size);\r\n  }\r\n\r\n  public log(message: string) {\r\n    this.lines[this.pointer] = message;\r\n    this.pointer = (this.pointer + 1) % this.size;\r\n  }\r\n\r\n  public toString(): string {\r\n    return this.lines.slice(this.pointer, this.size).concat(this.lines.slice(0, this.pointer)).filter((l) => l).join(\"\\n\");\r\n  }\r\n}\r\n","import * as child_process from \"child_process\";\r\nimport { SpawnedProcess } from \"./interfaces\";\r\n\r\nexport function safeSpawn(workingDirectory: string | undefined, binPath: string, args: string[], env: { envOverrides?: { [key: string]: string | undefined }, toolEnv?: { [key: string]: string | undefined } }): SpawnedProcess {\r\n\t// Spawning processes on Windows with funny symbols in the path requires quoting. However if you quote an\r\n\t// executable with a space in its path and an argument also has a space, you have to then quote all of the\r\n\t// arguments too!\\\r\n\t// https://github.com/nodejs/node/issues/7367\r\n\tconst customEnv = Object.assign({}, process.env, env.toolEnv, env.envOverrides);\r\n\tconst quotedArgs = args.map((a) => `\"${a.replace(/\"/g, `\\\\\"`)}\"`);\r\n\treturn child_process.spawn(`\"${binPath}\"`, quotedArgs, { cwd: workingDirectory, env: customEnv, shell: true }) as SpawnedProcess;\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as url from \"url\";\r\nimport { Logger } from \"../interfaces\";\r\nimport { findFileInAncestor, uriToFilePath } from \"../utils\";\r\nimport { normalizeSlashes } from \"../utils/fs\";\r\n\r\nexport abstract class PackageMap {\r\n  public static findPackagesFile<T extends string | undefined>(entryPoint: T): string | (undefined extends T ? undefined : never) {\r\n    if (typeof entryPoint !== \"string\")\r\n      return undefined as (undefined extends T ? undefined : never);\r\n\r\n    const file = findFileInAncestor([path.join(\".dart_tool/package_config.json\"), \".packages\"], entryPoint);\r\n    return file as string | (undefined extends T ? undefined : never);\r\n  }\r\n\r\n  public static loadForProject(logger: Logger, projectFolder: string): PackageMap {\r\n    const paths = [\r\n      \".dart_tool/package_config.json\",\r\n      \".packages\",\r\n    ];\r\n    for (const p of paths) {\r\n      const fullP = path.join(projectFolder, p);\r\n      if (fs.existsSync(fullP))\r\n        return this.load(logger, fullP);\r\n    }\r\n    return new MissingPackageMap();\r\n  }\r\n\r\n  public static load(logger: Logger, file: string | undefined): PackageMap {\r\n    if (!file)\r\n      return new MissingPackageMap();\r\n    try {\r\n      if (path.basename(file).toLowerCase() === \".packages\")\r\n        return new DotPackagesPackageMap(file);\r\n      else\r\n        return new PackageConfigJsonPackageMap(logger, file);\r\n    } catch (e) {\r\n      logger.error(e);\r\n      return new MissingPackageMap();\r\n    }\r\n  }\r\n\r\n  abstract get packages(): { [name: string]: string };\r\n\r\n  public getPackagePath(name: string): string | undefined {\r\n    return this.packages[name];\r\n  }\r\n\r\n  public resolvePackageUri(uri: string): string | undefined {\r\n    if (!uri)\r\n      return undefined;\r\n\r\n    let name: string = uri;\r\n    if (name.startsWith(\"package:\"))\r\n      name = name.substring(8);\r\n    const index = name.indexOf(\"/\");\r\n    if (index === -1)\r\n      return undefined;\r\n\r\n    const rest = name.substring(index + 1);\r\n    name = name.substring(0, index);\r\n\r\n    const location = this.getPackagePath(name);\r\n    if (location)\r\n      return path.join(location, rest);\r\n    else\r\n      return undefined;\r\n  }\r\n}\r\n\r\nclass MissingPackageMap extends PackageMap {\r\n  public get packages(): { [name: string]: string; } {\r\n    return {};\r\n  }\r\n  public getPackagePath(name: string): string | undefined {\r\n    return undefined;\r\n  }\r\n  public resolvePackageUri(uri: string): string | undefined {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nclass DotPackagesPackageMap extends PackageMap {\r\n  private map: { [name: string]: string } = {};\r\n  private readonly localPackageRoot: string | undefined;\r\n  public get packages(): { [name: string]: string } { return Object.assign({}, this.map); }\r\n\r\n  constructor(file?: string) {\r\n    super();\r\n    if (!file) return;\r\n    this.localPackageRoot = path.dirname(file);\r\n\r\n    const lines: string[] = fs.readFileSync(file, { encoding: \"utf8\" }).split(\"\\n\");\r\n    for (let line of lines) {\r\n      line = line.trim();\r\n\r\n      if (line.length === 0 || line.startsWith(\"#\"))\r\n        continue;\r\n\r\n      const index = line.indexOf(\":\");\r\n      if (index !== -1) {\r\n        const name = line.substr(0, index);\r\n        const rest = line.substring(index + 1);\r\n\r\n        if (rest.startsWith(\"file:\"))\r\n          this.map[name] = uriToFilePath(rest);\r\n        else\r\n          this.map[name] = path.join(this.localPackageRoot, rest);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nclass PackageConfigJsonPackageMap extends PackageMap {\r\n  private readonly map: { [name: string]: string } = {};\r\n  private readonly config: PackageJsonConfig;\r\n\r\n  constructor(private readonly logger: Logger, private readonly packageConfigPath: string) {\r\n    super();\r\n    const json = fs.readFileSync(this.packageConfigPath, \"utf8\");\r\n    this.config = JSON.parse(json);\r\n\r\n    for (const pkg of this.config.packages) {\r\n      try {\r\n        const packageConfigFolderPath = path.dirname(this.packageConfigPath);\r\n        const packageRootPath = this.getPathForUri(pkg.rootUri);\r\n        const packageLibPath = this.getPathForUri(pkg.packageUri);\r\n        this.map[pkg.name] = path.resolve(packageConfigFolderPath, packageRootPath ?? \"\", packageLibPath ?? \"\");\r\n      } catch (e) {\r\n        logger.error(`Failed to resolve path for package ${pkg.name}: ${e}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getPathForUri(uri: string): string | undefined {\r\n    if (!uri)\r\n      return undefined;\r\n\r\n    const parsedPath = normalizeSlashes(\r\n      uri.startsWith(\"file:\")\r\n        ? url.fileURLToPath(uri)\r\n        : unescape(uri),\r\n    );\r\n\r\n    return parsedPath.endsWith(path.sep) ? parsedPath : `${parsedPath}${path.sep}`;\r\n  }\r\n\r\n  public get packages(): { [name: string]: string } { return Object.assign({}, this.map); }\r\n\r\n  public getPackagePath(name: string): string | undefined {\r\n    return this.map[name];\r\n  }\r\n}\r\n\r\ninterface PackageJsonConfig {\r\n  configVersion: number,\r\n  packages: PackageJsonConfigPackage[];\r\n}\r\n\r\ninterface PackageJsonConfigPackage {\r\n  name: string;\r\n  rootUri: string;\r\n  packageUri: string;\r\n}\r\n","// TODO: Can we make this work better when webpack'd?\r\nexport const internalApiSymbol = \"_privateApi\"; // Symbol();\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as semver from \"semver\";\r\nimport { executableNames, isWin } from \"./constants\";\r\nimport { LogCategory } from \"./enums\";\r\nimport { CustomScript, IAmDisposable, Logger, SomeError } from \"./interfaces\";\r\n\r\nexport function uniq<T>(array: T[]): T[] {\r\n\treturn array.filter((value, index) => array.indexOf(value) === index);\r\n}\r\n\r\nexport function flatMap<T1, T2>(input: readonly T1[], f: (input: T1) => readonly T2[]): T2[] {\r\n\treturn input.reduce((acc, x) => acc.concat(f(x)), [] as T2[]);\r\n}\r\n\r\nexport async function flatMapAsync<T1, T2>(input: T1[], f: (input: T1) => Promise<readonly T2[]>): Promise<T2[]> {\r\n\tlet res: T2[] = [];\r\n\tfor (const x of input)\r\n\t\tres = res.concat(await f(x));\r\n\treturn res;\r\n}\r\n\r\nexport function filenameSafe(input: string) {\r\n\treturn input.replace(/[^a-z0-9]+/gi, \"_\").toLowerCase();\r\n}\r\n\r\nexport function escapeRegExp(input: string): string {\r\n\treturn input.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\r\n}\r\n\r\nexport class PromiseCompleter<T> {\r\n\tpublic promise: Promise<T>;\r\n\tpublic resolve!: (value: T | PromiseLike<T>) => void;\r\n\tpublic reject!: (error?: any, stackTrace?: string) => void;\r\n\r\n\tconstructor() {\r\n\t\tthis.promise = new Promise((res, rej) => {\r\n\t\t\tthis.resolve = res;\r\n\t\t\tthis.reject = rej;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport function findFileInAncestor(files: string[], startLocation: string) {\r\n\tlet lastParent;\r\n\tlet parent = startLocation;\r\n\r\n\twhile (parent && parent.length > 1 && parent !== lastParent) {\r\n\t\tfor (const file of files) {\r\n\t\t\tconst child = path.join(parent, file);\r\n\t\t\tif (fs.existsSync(child))\r\n\t\t\t\treturn child;\r\n\t\t}\r\n\t\tlastParent = parent;\r\n\t\tparent = path.dirname(parent);\r\n\t}\r\n\r\n\treturn undefined;\r\n}\r\n\r\n/// Converts a file URI to file path without a dependency on vs.Uri.\r\nexport function uriToFilePath(uri: string, returnWindowsPath: boolean = isWin): string {\r\n\tlet filePath = uri;\r\n\tif (uri.startsWith(\"file://\"))\r\n\t\tfilePath = decodeURI(uri.substring(7));\r\n\telse if (uri.startsWith(\"file:\"))\r\n\t\tfilePath = decodeURI(uri.substring(5)); // TODO: Does this case ever get hit? Will it be over-decoded?\r\n\r\n\t// Windows fixup.\r\n\tif (returnWindowsPath) {\r\n\t\tfilePath = filePath.replace(/\\//g, \"\\\\\");\r\n\t\tif (filePath.startsWith(\"\\\\\"))\r\n\t\t\tfilePath = filePath.substring(1);\r\n\t} else {\r\n\t\tif (!filePath.startsWith(\"/\"))\r\n\t\t\tfilePath = `/${filePath}`;\r\n\t}\r\n\r\n\treturn filePath;\r\n}\r\n\r\nexport function isDartSdkFromFlutter(dartSdkPath: string) {\r\n\tconst possibleFlutterSdkPath = path.join(path.dirname(path.dirname(path.dirname(dartSdkPath))), \"bin\");\r\n\treturn fs.existsSync(path.join(possibleFlutterSdkPath, executableNames.flutter));\r\n}\r\n\r\nexport function versionIsAtLeast(inputVersion: string, requiredVersion: string): boolean {\r\n\treturn semver.gte(inputVersion, requiredVersion);\r\n}\r\n\r\nexport function pubVersionIsAtLeast(inputVersion: string, requiredVersion: string): boolean {\r\n\t// Standard semver gt/lt\r\n\tif (semver.gt(inputVersion, requiredVersion))\r\n\t\treturn true;\r\n\telse if (semver.lt(inputVersion, requiredVersion))\r\n\t\treturn false;\r\n\r\n\t// If the versions are equal, we need to handle build metadata like pub does.\r\n\t// https://github.com/dart-lang/pub_semver/\r\n\r\n\t// If only one of them has build metadata, it's newest.\r\n\tif (inputVersion.indexOf(\"+\") !== -1 && requiredVersion.indexOf(\"+\") === -1)\r\n\t\treturn true;\r\n\tif (inputVersion.indexOf(\"+\") === -1 && requiredVersion.indexOf(\"+\") !== -1)\r\n\t\treturn false;\r\n\r\n\t// Otherwise, since they're both otherwise equal and both have build\r\n\t// metadata we can treat the build metadata like pre-release by converting\r\n\t// it to pre-release (with -) or appending it to existing pre-release.\r\n\tinputVersion = inputVersion.replace(\"+\", inputVersion.indexOf(\"-\") === -1 ? \"-\" : \".\");\r\n\trequiredVersion = requiredVersion.replace(\"+\", requiredVersion.indexOf(\"-\") === -1 ? \"-\" : \".\");\r\n\treturn versionIsAtLeast(inputVersion, requiredVersion);\r\n}\r\n\r\nexport function isStableSdk(sdkVersion?: string): boolean {\r\n\t// We'll consider empty versions as dev; stable versions will likely always\r\n\t// be shipped with valid version files.\r\n\treturn !!(sdkVersion && !semver.prerelease(sdkVersion));\r\n}\r\n\r\nexport function usingCustomScript(binPath: string, binArgs: string[], customScript: CustomScript | undefined) {\r\n\tif (customScript) {\r\n\t\tbinPath = customScript.script;\r\n\t\tbinArgs = binArgs.slice(customScript.replacesArgs);\r\n\t}\r\n\r\n\treturn { binPath, binArgs };\r\n}\r\n\r\nexport function errorString(error: SomeError): string {\r\n\tif (!error)\r\n\t\treturn \"<empty error>\";\r\n\telse if (error instanceof Error)\r\n\t\treturn error.message + (error.stack ? `\\n${error.stack}` : \"\");\r\n\telse if (typeof error === \"string\")\r\n\t\treturn error;\r\n\telse\r\n\t\treturn error.message || \"<empty error message>\";\r\n}\r\n\r\ntype BufferedLogMessage =\r\n\t{ type: \"info\", message: string, category?: LogCategory }\r\n\t| { type: \"warn\", message: SomeError, category?: LogCategory }\r\n\t| { type: \"error\", message: SomeError, category?: LogCategory };\r\n\r\nexport class BufferedLogger implements Logger {\r\n\tprivate buffer: BufferedLogMessage[] = [];\r\n\r\n\tpublic info(message: string, category?: LogCategory): void {\r\n\t\tthis.buffer.push({ type: \"info\", message, category });\r\n\t}\r\n\tpublic warn(message: SomeError, category?: LogCategory): void {\r\n\t\tthis.buffer.push({ type: \"warn\", message, category });\r\n\t}\r\n\tpublic error(error: SomeError, category?: LogCategory): void {\r\n\t\tthis.buffer.push({ type: \"error\", message: error, category });\r\n\t}\r\n\r\n\tpublic flushTo(logger: Logger) {\r\n\t\tif (!this.buffer.length)\r\n\t\t\treturn;\r\n\r\n\t\tlogger.info(\"Flushing log messages...\");\r\n\t\tfor (const log of this.buffer) {\r\n\t\t\tswitch (log.type) {\r\n\t\t\t\tcase \"info\":\r\n\t\t\t\t\tlogger.info(log.message, log.category);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"warn\":\r\n\t\t\t\t\tlogger.warn(log.message, log.category);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"error\":\r\n\t\t\t\t\tlogger.error(log.message, log.category);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlogger.info(\"Done flushing log messages...\");\r\n\t}\r\n}\r\n\r\nexport type NullAsUndefined<T> = null extends T ? Exclude<T, null> | undefined : T;\r\n\r\nexport function nullToUndefined<T>(value: T): NullAsUndefined<T> {\r\n\treturn (value === null ? undefined : value) as NullAsUndefined<T>;\r\n}\r\n\r\nexport function notUndefined<T>(x: T | undefined): x is T {\r\n\treturn x !== undefined;\r\n}\r\n\r\nexport function notNull<T>(x: T | null): x is T {\r\n\treturn x !== null;\r\n}\r\n\r\nexport function notNullOrUndefined<T>(x: T | null | undefined): x is T {\r\n\treturn notUndefined(x) && notNull(x);\r\n}\r\n\r\nexport function asHexColor({ r, g, b, a }: { r: number, g: number, b: number, a: number }): string {\r\n\tr = clamp(r, 0, 255);\r\n\tg = clamp(g, 0, 255);\r\n\tb = clamp(b, 0, 255);\r\n\ta = clamp(a, 0, 255);\r\n\r\n\treturn `${asHex(a)}${asHex(r)}${asHex(g)}${asHex(b)}`.toLowerCase();\r\n}\r\n\r\nexport function asHex(v: number) {\r\n\treturn Math.round(v).toString(16).padStart(2, \"0\");\r\n}\r\n\r\nexport function clamp(v: number, min: number, max: number) {\r\n\treturn Math.min(Math.max(min, v), max);\r\n}\r\n\r\nexport function generateTestNameFromFileName(input: string) {\r\n\treturn path.basename(input).replace(\"_test.dart\", \"\").replace(/_/g, \" \");\r\n}\r\n\r\nexport function escapeDartString(input: string) {\r\n\treturn input.replace(/(['\"\\\\])/g, \"\\\\$1\");\r\n}\r\n\r\nexport function isWebDevice(deviceId: string | undefined): boolean {\r\n\treturn !!(deviceId?.startsWith(\"web\") || deviceId === \"chrome\" || deviceId === \"edge\");\r\n}\r\n\r\nexport function disposeAll(disposables: IAmDisposable[]) {\r\n\tconst toDispose = disposables.slice();\r\n\tdisposables.length = 0;\r\n\tfor (const d of toDispose) {\r\n\t\ttry {\r\n\t\t\td.dispose();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.warn(e);\r\n\t\t}\r\n\t}\r\n}\r\n","export function sortBy<T>(items: T[], f: (item: T) => any): T[] {\r\n\treturn items.sort((item1, item2) => {\r\n\t\tconst r1 = f(item1);\r\n\t\tconst r2 = f(item2);\r\n\t\tif (r1 < r2) return -1;\r\n\t\tif (r1 > r2) return 1;\r\n\t\treturn 0;\r\n\t});\r\n}\r\n\r\nexport function not(f: (x: any) => boolean): (x: any) => boolean {\r\n\treturn (x) => !f(x);\r\n}\r\n\r\nexport function unique<T>(items: T[]): T[] {\r\n\treturn Array.from(new Set(items));\r\n}\r\n\r\nexport function arraysEqual<T>(items1: T[], items2: T[]) {\r\n\treturn items1.length === items2.length && items1.every((val, i) => val === items2[i]);\r\n}\r\n\r\nexport function arrayStartsWith<T>(items1: T[], items2: T[]) {\r\n\treturn items1.length >= items2.length && arraysEqual(items1.slice(0, items2.length), items2);\r\n}\r\n\r\nexport function arrayContainsArray<T>(haystack: T[], needle: T[]): boolean {\r\n\t// Loop over valid starting points for the subarray\r\n\tfor (let i = 0; i <= haystack.length - needle.length; i++) {\r\n\t\t// Check if the relevant length sublist equals the other array.\r\n\t\tif (arraysEqual(haystack.slice(i, i + needle.length), needle))\r\n\t\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { FLUTTER_CREATE_PROJECT_TRIGGER_FILE, isWin } from \"../constants\";\r\nimport { Logger } from \"../interfaces\";\r\nimport { flatMapAsync } from \"../utils\";\r\nimport { sortBy } from \"./array\";\r\n\r\nexport function fsPath(uri: { fsPath: string } | string) {\r\n  // tslint:disable-next-line:disallow-fspath\r\n  return forceWindowsDriveLetterToUppercase(typeof uri === \"string\" ? uri : uri.fsPath);\r\n}\r\n\r\nexport function forceWindowsDriveLetterToUppercase(p: string): string {\r\n  if (p && isWin && path.isAbsolute(p) && p.startsWith(p.charAt(0).toLowerCase()))\r\n    p = p.substr(0, 1).toUpperCase() + p.substr(1);\r\n  return p;\r\n}\r\n\r\nexport function isWithinPath(file: string, folder: string) {\r\n  const relative = path.relative(folder, file);\r\n  return !!relative && !relative.startsWith(\"..\") && !path.isAbsolute(relative);\r\n}\r\n\r\nexport function isEqualOrWithinPath(file: string, folder: string) {\r\n  const relative = path.relative(folder, file);\r\n  return relative === \"\" || (!!relative && !relative.startsWith(\"..\") && !path.isAbsolute(relative));\r\n}\r\n\r\nexport async function getChildFolders(logger: Logger, parent: string, options?: { allowBin?: boolean; allowCache?: boolean }): Promise<string[]> {\r\n  if (!fs.existsSync(parent))\r\n    return [];\r\n  const files = await readDirAsync(logger, parent);\r\n\r\n  return files.filter((f) => f.isDirectory())\r\n    .filter((f) => f.name !== \"bin\" || (options && options.allowBin)) // Don't look in bin folders\r\n    .filter((f) => f.name !== \"cache\" || (options && options.allowCache)) // Don't look in cache folders\r\n    .map((item) => path.join(parent, item.name));\r\n}\r\n\r\nexport function readDirAsync(logger: Logger, folder: string): Promise<fs.Dirent[]> {\r\n  return new Promise<fs.Dirent[]>((resolve) => fs.readdir(folder,\r\n    { withFileTypes: true },\r\n    (err, files) => {\r\n      // We will generate errors if we don't have access to this folder\r\n      // so just skip over it.\r\n      if (err) {\r\n        logger.warn(`Skipping folder ${folder} due to error: ${err}`);\r\n        resolve([]);\r\n      } else {\r\n        resolve(files);\r\n      }\r\n    },\r\n  ));\r\n}\r\n\r\nexport function hasPackagesFile(folder: string): boolean {\r\n  return fs.existsSync(path.join(folder, \".packages\"));\r\n}\r\n\r\nexport function hasPubspec(folder: string): boolean {\r\n  return fs.existsSync(path.join(folder, \"pubspec.yaml\"));\r\n}\r\n\r\nexport async function hasPubspecAsync(folder: string): Promise<boolean> {\r\n  return await fileExists(path.join(folder, \"pubspec.yaml\"));\r\n}\r\n\r\nexport async function hasCreateTriggerFileAsync(folder: string): Promise<boolean> {\r\n  return await fileExists(path.join(folder, FLUTTER_CREATE_PROJECT_TRIGGER_FILE));\r\n}\r\n\r\nexport async function isFlutterRepoAsync(folder: string): Promise<boolean> {\r\n  return await fileExists(path.join(folder, \"bin/flutter\")) && await fileExists(path.join(folder, \"bin/cache/dart-sdk\"));\r\n}\r\n\r\nasync function fileExists(p: string): Promise<boolean> {\r\n  try {\r\n    await fs.promises.access(p);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Walks a few levels down and returns all folders that look like project\r\n// folders, such as:\r\n// - have a pubspec.yaml\r\n// - have a project create trigger file\r\n// - are the Flutter repo root\r\nexport async function findProjectFolders(logger: Logger, roots: string[], excludedFolders: string[], options: { sort?: boolean; requirePubspec?: boolean } = {}): Promise<string[]> {\r\n  const dartToolFolderName = `${path.sep}.dart_tool${path.sep}`;\r\n\r\n  const level2Folders = await flatMapAsync(roots, (f) => getChildFolders(logger, f));\r\n  const level3Folders = await flatMapAsync(level2Folders, (f) => getChildFolders(logger, f));\r\n  const allPossibleFolders = roots.concat(level2Folders).concat(level3Folders)\r\n    .filter((f) => !f.includes(dartToolFolderName) && excludedFolders.every((ef) => !isEqualOrWithinPath(f, ef)));\r\n\r\n  const projectFolderPromises = allPossibleFolders.map(async (folder) => ({\r\n    exists: options && options.requirePubspec\r\n      ? await hasPubspecAsync(folder)\r\n      : await hasPubspecAsync(folder) || await hasCreateTriggerFileAsync(folder) || await isFlutterRepoAsync(folder),\r\n    folder,\r\n  }));\r\n  const projectFoldersChecks = await Promise.all(projectFolderPromises);\r\n  const projectFolders = projectFoldersChecks\r\n    .filter((res) => res.exists)\r\n    .map((res) => res.folder);\r\n\r\n  return options && options.sort\r\n    ? sortBy(projectFolders, (p) => p.toLowerCase())\r\n    : projectFolders;\r\n}\r\n\r\nexport function getSdkVersion(logger: Logger, { sdkRoot, versionFile }: { sdkRoot?: string, versionFile?: string }): string | undefined {\r\n  if (!sdkRoot && !versionFile)\r\n    return undefined;\r\n  if (!versionFile)\r\n    versionFile = path.join(sdkRoot!, \"version\");\r\n  if (!fs.existsSync(versionFile))\r\n    return undefined;\r\n  try {\r\n    return fs\r\n      .readFileSync(versionFile, \"utf8\")\r\n      .trim()\r\n      .split(\"\\n\")\r\n      .filter((l) => l)\r\n      .filter((l) => l.trim().substr(0, 1) !== \"#\")\r\n      .join(\"\\n\")\r\n      .trim();\r\n  } catch (e) {\r\n    logger.error(e);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function tryDeleteFile(filePath: string) {\r\n  if (fs.existsSync(filePath)) {\r\n    try {\r\n      fs.unlinkSync(filePath);\r\n    } catch {\r\n      console.warn(`Failed to delete file ${path}.`);\r\n    }\r\n  }\r\n}\r\n\r\nexport function getRandomInt(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function mkDirRecursive(folder: string) {\r\n  const parent = path.dirname(folder);\r\n  if (!fs.existsSync(parent))\r\n    mkDirRecursive(parent);\r\n  if (!fs.existsSync(folder))\r\n    fs.mkdirSync(folder);\r\n}\r\n\r\nexport function areSameFolder(folder1: string, folder2: string) {\r\n  // Trim any trailing path separators of either direction.\r\n  folder1 = folder1.replace(/[\\\\/]+$/, \"\");\r\n  folder2 = folder2.replace(/[\\\\/]+$/, \"\");\r\n\r\n  return folder1 === folder2;\r\n}\r\n\r\nexport function normalizeSlashes(p: string) {\r\n  return p.replace(/[\\\\/]/g, path.sep);\r\n}\r\n\r\n/**\r\n * Gets a unique path or filename for the specified {folderUri} location, appending a numerical value\r\n * between {prefix} and suffix, as required.\r\n *\r\n * A directory/file location will be generated from {prefix} with a trailing number (eg. `mydir1`) and\r\n * its existence will be checked; if it already exists, the number will be incremented and checked again.\r\n *\r\n * This will continue until a non-existent directory/file is available, or until the maxiumum search\r\n * limit (of 128) is reached.\r\n *\r\n * @param folder directory to check for existing directories or files.\r\n * @param prefix prefix of the directory/file\r\n * @param suffix suffix of the directory/file\r\n */\r\nexport function nextAvailableFilename(folder: string, prefix: string, suffix: string = \"\"): string {\r\n  // Set an upper bound on how many attempts we should make in getting a non-existent name.\r\n  const maxSearchLimit = 128;\r\n\r\n  for (let index = 1; index <= maxSearchLimit; index++) {\r\n    const name = `${prefix}${index}${suffix}`;\r\n    const fullPath = path.join(folder, name);\r\n\r\n    if (!fs.existsSync(fullPath)) {\r\n      // Name doesn't appear to exist on-disk and thus can be used - return it.\r\n      return name;\r\n    }\r\n  }\r\n\r\n  // We hit the search limit, so return {prefix}{index} (eg. mydir1) and allow the extension to\r\n  // handle the already-exists condition if user doesn't change it manually.\r\n  return `${prefix}1${suffix}`;\r\n}\r\n","export const resolvedPromise = Promise.resolve(true);\r\n\r\nexport async function waitFor<T>(action: () => T | Promise<T>, checkEveryMilliseconds: number = 100, tryForMilliseconds: number = 10000, token?: { isCancellationRequested: boolean }): Promise<T | undefined> {\r\n\tlet timeRemaining = tryForMilliseconds;\r\n\twhile (timeRemaining > 0 && !(token && token.isCancellationRequested)) {\r\n\t\tconst res = await action();\r\n\t\tif (res)\r\n\t\t\treturn res;\r\n\t\tawait new Promise((resolve) => setTimeout(resolve, checkEveryMilliseconds));\r\n\t\ttimeRemaining -= checkEveryMilliseconds;\r\n\t}\r\n}\r\n","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { extensions, Uri } from \"vscode\";\r\nimport { hetuscriptExtensionIdentifier, dartCodeExtensionIdentifier, flutterExtensionIdentifier } from \"../constants\";\r\n\r\nexport const extensionPath = getExtensionPath();\r\nexport const extensionVersion = getExtensionVersion();\r\nexport const vsCodeVersionConstraint = getVsCodeVersionConstraint();\r\nexport const isDevExtension = checkIsDevExtension();\r\nexport const hasFlutterExtension = checkHasFlutterExtension();\r\nexport const docsIconPathFormat = Uri.file(path.join(extensionPath, \"media/doc-icons/\")).toString() + \"$1%402x.png\";\r\n\r\nexport function readJson(file: string) {\r\n  return JSON.parse(fs.readFileSync(file).toString());\r\n}\r\n\r\nfunction getExtensionPath(): string {\r\n  const ext = extensions.getExtension(hetuscriptExtensionIdentifier)!;\r\n  return ext.extensionPath;\r\n}\r\n\r\nfunction getExtensionVersion(): string {\r\n  const packageJson = readJson(path.join(extensionPath, \"package.json\"));\r\n  return packageJson.version;\r\n}\r\n\r\nfunction getVsCodeVersionConstraint(): string {\r\n  const packageJson = readJson(path.join(extensionPath, \"package.json\"));\r\n  return packageJson.engines.vscode;\r\n}\r\n\r\nfunction checkIsDevExtension() {\r\n  return extensionVersion.endsWith(\"-dev\");\r\n}\r\n\r\nexport function checkHasDartExtension() {\r\n  return extensions.getExtension(dartCodeExtensionIdentifier) !== undefined;\r\n}\r\n\r\nexport function checkHasFlutterExtension() {\r\n  return extensions.getExtension(flutterExtensionIdentifier) !== undefined;\r\n}\r\n","import * as fs from \"fs\";\r\nimport { URL } from \"url\";\r\nimport * as vs from \"vscode\";\r\nimport { CodeActionKind, env as vsEnv, extensions, Position, Range, Selection, TextDocument, TextEditor, TextEditorRevealType, Uri, workspace, WorkspaceFolder } from \"vscode\";\r\nimport * as lsp from \"vscode-languageclient\";\r\nimport { dartCodeExtensionIdentifier } from \"../constants\";\r\nimport { EventEmitter } from \"../events\";\r\nimport { Location, Logger } from \"../interfaces\";\r\nimport { nullLogger } from \"../logging\";\r\nimport { flatMap, notUndefined } from \"../utils\";\r\nimport { findProjectFolders, forceWindowsDriveLetterToUppercase, fsPath } from \"../utils/fs\";\r\n\r\nexport const SourceSortMembersCodeActionKind = CodeActionKind.Source.append(\"sortMembers\");\r\n\r\nconst dartExtension = extensions.getExtension(dartCodeExtensionIdentifier);\r\n\r\nexport function getDartWorkspaceFolders(): WorkspaceFolder[] {\r\n\tif (!workspace.workspaceFolders)\r\n\t\treturn [];\r\n\treturn workspace.workspaceFolders.filter(isDartWorkspaceFolder);\r\n}\r\n\r\nexport async function getAllProjectFolders(\r\n\tlogger: Logger,\r\n\tgetExcludedFolders: ((f: WorkspaceFolder | undefined) => string[]) | undefined,\r\n\toptions: { sort?: boolean; requirePubspec?: boolean } = {},\r\n) {\r\n\tconst workspaceFolders = getDartWorkspaceFolders();\r\n\tconst topLevelFolders = workspaceFolders.map((w) => fsPath(w.uri));\r\n\tconst allExcludedFolders = getExcludedFolders ? flatMap(workspaceFolders, getExcludedFolders) : [];\r\n\treturn findProjectFolders(logger, topLevelFolders, allExcludedFolders, options);\r\n}\r\n\r\nexport function isDartWorkspaceFolder(folder?: WorkspaceFolder): boolean {\r\n\tif (!folder || folder.uri.scheme !== \"file\")\r\n\t\treturn false;\r\n\r\n\t// Currently we don't have good logic to know what's a Dart folder.\r\n\t// We could require a pubspec, but it's valid to just write scripts without them.\r\n\t// For now, nothing calls this that will do bad things if the folder isn't a Dart\r\n\t// project so we can review amend this in future if required.\r\n\treturn true;\r\n}\r\n\r\nexport function toRange(document: TextDocument, offset: number, length: number): Range {\r\n\treturn new Range(document.positionAt(offset), document.positionAt(offset + length));\r\n}\r\n\r\nexport function lspToRange(range: lsp.Range): Range {\r\n\treturn new Range(lspToPosition(range.start), lspToPosition(range.end));\r\n}\r\n\r\nexport function toPosition(location: Location): Position {\r\n\treturn new Position(location.startLine - 1, location.startColumn - 1);\r\n}\r\n\r\nexport function lspToPosition(position: lsp.Position): Position {\r\n\treturn new Position(position.line, position.character);\r\n}\r\n\r\n// Translates an offset/length to a Range.\r\n// NOTE: Does not wrap lines because it does not have access to a TextDocument to know\r\n// where the line ends.\r\nexport function toRangeOnLine(location: Location): Range {\r\n\tconst startPos = toPosition(location);\r\n\treturn new Range(startPos, startPos.translate(0, location.length));\r\n}\r\n\r\nexport function showCode(editor: TextEditor, displayRange: Range, highlightRange: Range, selectionRange?: Range): void {\r\n\tif (selectionRange)\r\n\t\teditor.selection = new Selection(selectionRange.start, selectionRange.end);\r\n\r\n\t// Ensure the code is visible on screen.\r\n\teditor.revealRange(displayRange, TextEditorRevealType.InCenterIfOutsideViewport);\r\n\r\n\t// TODO: Implement highlighting\r\n\t// See https://github.com/Microsoft/vscode/issues/45059\r\n}\r\n\r\nexport function trimTrailingSlashes(s: string) {\r\n\treturn s.replace(/[\\/\\\\]+$/, \"\");\r\n}\r\n\r\nexport function warnIfPathCaseMismatch(logger: Logger, p: string, pathDescription: string, helpText: string) {\r\n\tconst userPath = trimTrailingSlashes(forceWindowsDriveLetterToUppercase(p));\r\n\tconst realPath = fs.existsSync(userPath) && trimTrailingSlashes(forceWindowsDriveLetterToUppercase(fs.realpathSync.native(userPath)));\r\n\t// Since realpathSync.native will resolve symlinks, we'll only show these warnings\r\n\t// when there was no symlink (eg. the lowercase version of both paths match).\r\n\tif (userPath && realPath && userPath.toLowerCase() === realPath.toLowerCase() && userPath !== realPath) {\r\n\t\tconst message = `The casing of ${pathDescription} does not match the casing on disk; please ${helpText}. `\r\n\t\t\t+ `Expected ${realPath} but got ${userPath}`;\r\n\t\tlogger.warn(message);\r\n\t\tvs.window.showWarningMessage(message);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nclass EnvUtils {\r\n\tpublic async openInBrowser(url: string, logger: Logger = nullLogger): Promise<boolean> {\r\n\t\tlogger.info(`Opening external URL: ${url}`);\r\n\t\treturn vsEnv.openExternal(Uri.parse(url));\r\n\t}\r\n\r\n\tpublic async exposeUrl(uri: vs.Uri, logger: Logger = nullLogger): Promise<string> {\r\n\t\tlogger.info(`Exposing URL: ${uri.toString()}`);\r\n\t\tconst isWebSocket = uri.scheme === \"ws\" || uri.scheme === \"wss\";\r\n\t\tconst isSecure = uri.scheme === \"wss\" || uri.scheme === \"https\";\r\n\r\n\t\t// TODO: Remove this scheme mapping when https://github.com/microsoft/vscode/issues/84819\r\n\t\t// is resolved.\r\n\t\tlet fakeScheme = uri.scheme;\r\n\t\tif (isWebSocket)\r\n\t\t\tfakeScheme = isSecure ? \"https\" : \"http\";\r\n\r\n\t\tconst url = new URL(uriToString(uri));\r\n\r\n\t\t// Ensure the URL always has a port, as some cloud providers fail to expose URLs correctly\r\n\t\t// that don't have explicit port numbers.\r\n\t\t//\r\n\t\t// Additionally, on some cloud providers we get an IPv6 loopback which fails to connect\r\n\t\t// correctly. Assume that if we get this, it's safe to use the \"localhost\" hostname.\r\n\t\tconst fakeHostname = url.hostname === \"[::]\" ? \"localhost\" : url.hostname;\r\n\t\tconst fakePort = url.port || (isSecure ? \"443\" : \"80\"); // Don't change to ??, port can be empty string!\r\n\t\tconst fakeAuthority = `${fakeHostname}:${fakePort}`;\r\n\r\n\t\tconst uriToMap = uri.with({ scheme: fakeScheme, authority: fakeAuthority });\r\n\t\tlogger.info(`Mapping URL: ${uriToMap.toString()}`);\r\n\r\n\t\t// const mappedUri = await vsEnv.asExternalUri(uriToMap);\r\n\t\t// logger.info(`Mapped URL: ${mappedUri.toString()}`);\r\n\r\n\t\t// Now we need to map the scheme back to WS if that's what was originally asked for, however\r\n\t\t// we need to take into account whether asExternalUri pushed is up to secure, so use\r\n\t\t// the http/https to decide which to go back to.\r\n\t\tlet newScheme = uriToMap.scheme;\r\n\t\tif (isWebSocket)\r\n\t\t\t// Note: We use mappedUri.scheme here and not isSecure because we\r\n\t\t\t// care if the *exposed* URI is secure.\r\n\t\t\tnewScheme = uriToMap.scheme === \"https\" ? \"wss\" : \"ws\";\r\n\r\n\t\tconst finalUri = uriToString(uriToMap.with({ scheme: newScheme }));\r\n\t\tlogger.info(`Final URI: ${finalUri}`);\r\n\r\n\t\tconst finalUrl = new URL(finalUri).toString();\r\n\t\tlogger.info(`Final URL: ${finalUrl}`);\r\n\r\n\t\treturn finalUrl;\r\n\t}\r\n}\r\n\r\nfunction uriToString(uri: vs.Uri) {\r\n\treturn uri.toString()\r\n\t\t.replace(/%24/g, \"$\")\r\n\t\t.replace(/%5B/g, \"[\");\r\n}\r\n\r\nexport function treeLabel(item: vs.TreeItem): string | undefined {\r\n\tif (!item.label || typeof item.label === \"string\")\r\n\t\treturn item.label;\r\n\t// return item.label.label;\r\n}\r\n\r\nexport const envUtils = new EnvUtils();\r\n\r\nfunction usedEditorColumns(): Set<number> {\r\n\treturn new Set(vs.window.visibleTextEditors.map((e) => e.viewColumn as number | undefined).filter(notUndefined));\r\n}\r\n\r\nexport function firstNonEditorColumn(): vs.ViewColumn | undefined {\r\n\tconst usedColumns = usedEditorColumns();\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tif (!usedColumns.has(i))\r\n\t\t\treturn i;\r\n\t}\r\n}\r\n\r\nexport function firstEditorColumn(): vs.ViewColumn | undefined {\r\n\tconst usedColumns = usedEditorColumns();\r\n\tfor (let i = 1; i <= 9; i++) {\r\n\t\tif (usedColumns.has(i))\r\n\t\t\treturn i;\r\n\t}\r\n}\r\n\r\nexport function createWatcher(pattern: string, emitter: EventEmitter<vs.Uri | void>) {\r\n\tconst watcher = vs.workspace.createFileSystemWatcher(pattern);\r\n\twatcher.onDidChange((uri) => emitter.fire(uri));\r\n\twatcher.onDidCreate((uri) => emitter.fire(uri));\r\n\twatcher.onDidDelete((uri) => emitter.fire(uri));\r\n\treturn watcher;\r\n}\r\n","import { ExtensionContext } from \"vscode\";\r\n\r\nexport class Context {\r\n\tprivate context: ExtensionContext;\r\n\r\n\tprivate constructor(context: ExtensionContext) {\r\n\t\tthis.context = context;\r\n\t}\r\n\r\n\tpublic static for(context: ExtensionContext): Context {\r\n\t\treturn new Context(context);\r\n\t}\r\n\r\n\t// get lastSeenVersion(): string | undefined { return this.context.globalState.get(\"lastSeenVersion\"); }\r\n\t// set lastSeenVersion(value: string | undefined) { this.context.globalState.update(\"lastSeenVersion\", value); }\r\n\r\n\tpublic getPackageLastCheckedForUpdates(packageID: string): number | undefined { return this.context.globalState.get(`packageLastCheckedForUpdates:${packageID}`) as number; }\r\n\tpublic setPackageLastCheckedForUpdates(packageID: string, value: number | undefined) { this.context.globalState.update(`packageLastCheckedForUpdates:${packageID}`, value); }\r\n\r\n\tpublic update(key: string, value: any): any {\r\n\t\treturn this.context.globalState.update(key, value);\r\n\t}\r\n\tpublic get(key: string): any {\r\n\t\treturn this.context.globalState.get(key);\r\n\t}\r\n\r\n\tget subscriptions(): Array<{ dispose(): any }> { return this.context.subscriptions; }\r\n}\r\n","import { EventEmitter } from \"./events\";\r\nimport { IAmDisposable, Sdks, WorkspaceConfig } from \"./interfaces\";\r\n\r\nexport class WorkspaceContext implements IAmDisposable {\r\n  public readonly workspaceTypeDescription: string;\r\n  public readonly events = new WorkspaceEvents();\r\n  // TODO: Move things from Sdks to this class that aren't related to the SDKs.\r\n  constructor(\r\n    public readonly sdks: Sdks,\r\n    public readonly config: WorkspaceConfig,\r\n    // public readonly hasAnyFlutterMobileProjects: boolean,\r\n    // public readonly hasAnyWebProjects: boolean,\r\n    // public readonly hasAnyStandardDartProjects: boolean,\r\n  ) {\r\n    this.workspaceTypeDescription = this.buildWorkspaceTypeDescription();\r\n  }\r\n\r\n  // get hasAnyFlutterProjects() { return this.hasAnyFlutterMobileProjects; }\r\n  // get shouldLoadFlutterExtension() { return this.hasAnyFlutterProjects; }\r\n\r\n  /// Used only for display (for ex stats), not behaviour.\r\n  private buildWorkspaceTypeDescription(): string {\r\n    const types: string[] = [];\r\n    // Don't re-order these, else stats won't easily combine as we could have\r\n    // Dart, Flutter and also Flutter, Dart.\r\n    // if (this.hasAnyStandardDartProjects)\r\n    //   types.push(\"Dart\");\r\n    // if (this.hasAnyFlutterMobileProjects)\r\n    //   types.push(\"Flutter\");\r\n\r\n    // If we didn't detect any projects, record as unknown, but include info\r\n    // on the type of SDK we had found.\r\n    if (types.length === 0) {\r\n      if (this.sdks && this.sdks.dartSdkIsFromFlutter)\r\n        types.push(\"Unknown (Flutter SDK)\");\r\n      else if (this.sdks && this.sdks.dart)\r\n        types.push(\"Unknown (Dart SDK)\");\r\n      else\r\n        types.push(\"Unknown (No SDK)\");\r\n    }\r\n\r\n    return types.join(\", \");\r\n  }\r\n\r\n  public dispose(): any {\r\n    this.events.dispose();\r\n  }\r\n\r\n  // TODO: Since this class is passed around, we may need to make it update itself\r\n  // (eg. if the last Flutter project is removed from the multi-root workspace)?\r\n}\r\n\r\nclass WorkspaceEvents implements IAmDisposable {\r\n  public readonly onPackageMapChange = new EventEmitter<void>();\r\n\r\n  public dispose(): any {\r\n    this.onPackageMapChange.dispose();\r\n  }\r\n}\r\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.ProgressType = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.RAL = void 0;\nexports.CancellationStrategy = void 0;\nconst messages_1 = require(\"../common/messages\");\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst disposable_1 = require(\"../common/disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"../common/events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"../common/cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst messageReader_1 = require(\"../common/messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"../common/messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst connection_1 = require(\"../common/connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n//# sourceMappingURL=api.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = ral_1.default().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { ral_1.default().timer.clearTimeout(handle); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n//# sourceMappingURL=cancellation.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.Trace = exports.NullLogger = exports.ProgressType = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.createCancellationTokenSource);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSquenceNumber = 0;\n    let unknownResponseSquenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = Object.create(null);\n    let starNotificationHandler = undefined;\n    const notificationHandlers = Object.create(null);\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = Object.create(null);\n    let requestTokens = Object.create(null);\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSquenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.isRequestMessage(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.isResponseMessage(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = ral_1.default().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            if (messages_1.isRequestMessage(message)) {\n                handleRequest(message);\n            }\n            else if (messages_1.isNotificationMessage(message)) {\n                handleNotification(message);\n            }\n            else if (messages_1.isResponseMessage(message)) {\n                handleResponse(message);\n            }\n            else {\n                handleInvalidMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\n                const key = createRequestQueueKey(message.params.id);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.isRequestMessage(toCancel)) {\n                    const strategy = options === null || options === void 0 ? void 0 : options.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response);\n                        return;\n                    }\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message);\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers[requestMessage.method];\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = String(requestMessage.id);\n            const cancellationSource = cancellationStrategy.receiver.createCancellationTokenSource(tokenKey);\n            requestTokens[tokenKey] = cancellationSource;\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but recevied none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    delete requestTokens[tokenKey];\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        delete requestTokens[tokenKey];\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        delete requestTokens[tokenKey];\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    delete requestTokens[tokenKey];\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                delete requestTokens[tokenKey];\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = String(responseMessage.id);\n            const responsePromise = responsePromises[key];\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise) {\n                delete responsePromises[key];\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            notificationHandler = (params) => {\n                const id = params.id;\n                const source = requestTokens[String(id)];\n                if (source) {\n                    source.cancel();\n                }\n            };\n        }\n        else {\n            const element = notificationHandlers[message.method];\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but recevied none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        if (type !== undefined) {\n                            if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                            }\n                            if (type.numberOfParams !== message.params.length) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${message.params.length} argumennts`);\n                            }\n                        }\n                        notificationHandler(...message.params);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = String(responseMessage.id);\n            const responseHandler = responsePromises[key];\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose && message.params) {\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.params) {\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n                break;\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Recevied parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            messageWriter.write(notificationMessage);\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers[type] = { type: undefined, handler };\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        delete notificationHandlers[method];\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Recevied ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    cancellationStrategy.sender.sendCancellation(connection, id);\n                });\n            }\n            const result = new Promise((resolve, reject) => {\n                const requestMessage = {\n                    jsonrpc: version,\n                    id: id,\n                    method: method,\n                    params: messageParams\n                };\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable === null || disposable === void 0 ? void 0 : disposable.dispose();\n                };\n                let responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                traceSendingRequest(requestMessage);\n                try {\n                    messageWriter.write(requestMessage);\n                }\n                catch (e) {\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\n                    responsePromise = null;\n                }\n                if (responsePromise) {\n                    responsePromises[String(id)] = responsePromise;\n                }\n            });\n            return result;\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers[type] = { handler: handler, type: undefined };\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers[type.method] = { type, handler };\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        delete requestHandlers[method];\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new Error('Connection got disposed.');\n            Object.keys(responsePromises).forEach((key) => {\n                responsePromises[key].reject(error);\n            });\n            responsePromises = Object.create(null);\n            requestTokens = Object.create(null);\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            ral_1.default().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=connection.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n//# sourceMappingURL=disposable.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                ral_1.default().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n//# sourceMappingURL=events.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n//# sourceMappingURL=is.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[Symbol.toStringTag] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _a;\n        return (_a = this._head) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    get last() {\n        var _a;\n        return (_a = this._tail) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happend if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n//# sourceMappingURL=linkedMap.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders() {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n//# sourceMappingURL=messageBuffer.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        var _a;\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options !== null && options !== void 0 ? options : 'utf-8';\n        }\n        else {\n            charset = (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = ral_1.default().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = ral_1.default().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders();\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('Content-Length');\n                if (!contentLength) {\n                    throw new Error('Header must provide a Content-Length property.');\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    throw new Error('Content-Length value must be a number.');\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            let p;\n            if (this.options.contentDecoder !== undefined) {\n                p = this.options.contentDecoder.decode(body);\n            }\n            else {\n                p = Promise.resolve(body);\n            }\n            p.then((value) => {\n                this.options.contentTypeDecoder.decode(value, this.options).then((msg) => {\n                    this.callback(msg);\n                }, (error) => {\n                    this.fireError(error);\n                });\n            }, (error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            ral_1.default().timer.clearTimeout(this.partialMessageTimer);\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = ral_1.default().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n//# sourceMappingURL=messageReader.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        var _a, _b;\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options !== null && options !== void 0 ? options : 'utf-8', contentTypeEncoder: ral_1.default().applicationJson.encoder };\n        }\n        else {\n            return { charset: (_a = options.charset) !== null && _a !== void 0 ? _a : 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: (_b = options.contentTypeEncoder) !== null && _b !== void 0 ? _b : ral_1.default().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n//# sourceMappingURL=messageWriter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isResponseMessage = exports.isNotificationMessage = exports.isRequestMessage = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = ErrorCodes.jsonrpcReservedErrorRangeStart;\n    ErrorCodes.MessageWriteError = -32099;\n    ErrorCodes.MessageReadError = -32098;\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = ErrorCodes.jsonrpcReservedErrorRangeEnd;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        return {\n            code: this.code,\n            message: this.message,\n            data: this.data,\n        };\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\n/**\n * Tests if the given message is a request message\n */\nfunction isRequestMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n}\nexports.isRequestMessage = isRequestMessage;\n/**\n * Tests if the given message is a notification message\n */\nfunction isNotificationMessage(message) {\n    const candidate = message;\n    return candidate && is.string(candidate.method) && message.id === void 0;\n}\nexports.isNotificationMessage = isNotificationMessage;\n/**\n * Tests if the given message is a response message\n */\nfunction isResponseMessage(message) {\n    const candidate = message;\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n}\nexports.isResponseMessage = isResponseMessage;\n//# sourceMappingURL=messages.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n//# sourceMappingURL=ral.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        ral_1.default().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n//# sourceMappingURL=semaphore.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\nconst ril_1 = require(\"./ril\");\n// Install the node runtime abstract.\nril_1.default.install();\nconst api_1 = require(\"../common/api\");\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst crypto_1 = require(\"crypto\");\nconst net_1 = require(\"net\");\n__exportStar(require(\"../common/api\"), exports);\nclass IPCMessageReader extends api_1.AbstractMessageReader {\n    constructor(process) {\n        super();\n        this.process = process;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose());\n    }\n    listen(callback) {\n        this.process.on('message', callback);\n        return api_1.Disposable.create(() => this.process.off('message', callback));\n    }\n}\nexports.IPCMessageReader = IPCMessageReader;\nclass IPCMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(process) {\n        super();\n        this.process = process;\n        this.errorCount = 0;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose);\n    }\n    write(msg) {\n        try {\n            if (typeof this.process.send === 'function') {\n                this.process.send(msg, undefined, undefined, (error) => {\n                    if (error) {\n                        this.errorCount++;\n                        this.handleError(error, msg);\n                    }\n                    else {\n                        this.errorCount = 0;\n                    }\n                });\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.IPCMessageWriter = IPCMessageWriter;\nclass SocketMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(socket, encoding = 'utf-8') {\n        super(ril_1.default().stream.asReadableStream(socket), encoding);\n    }\n}\nexports.SocketMessageReader = SocketMessageReader;\nclass SocketMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(socket, options) {\n        super(ril_1.default().stream.asWritableStream(socket), options);\n        this.socket = socket;\n    }\n    dispose() {\n        super.dispose();\n        this.socket.destroy();\n    }\n}\nexports.SocketMessageWriter = SocketMessageWriter;\nclass StreamMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(readble, encoding) {\n        super(ril_1.default().stream.asReadableStream(readble), encoding);\n    }\n}\nexports.StreamMessageReader = StreamMessageReader;\nclass StreamMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(writable, options) {\n        super(ril_1.default().stream.asWritableStream(writable), options);\n    }\n}\nexports.StreamMessageWriter = StreamMessageWriter;\nconst XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];\nconst safeIpcPathLengths = new Map([\n    ['linux', 107],\n    ['darwin', 103]\n]);\nfunction generateRandomPipeName() {\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\n    if (process.platform === 'win32') {\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\n    }\n    let result;\n    if (XDG_RUNTIME_DIR) {\n        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n    }\n    else {\n        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);\n    }\n    const limit = safeIpcPathLengths.get(process.platform);\n    if (limit !== undefined && result.length >= limit) {\n        ril_1.default().console.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} characters.`);\n    }\n    return result;\n}\nexports.generateRandomPipeName = generateRandomPipeName;\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        let server = net_1.createServer((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(pipeName, () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientPipeTransport = createClientPipeTransport;\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\n    const socket = net_1.createConnection(pipeName);\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerPipeTransport = createServerPipeTransport;\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        const server = net_1.createServer((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(port, '127.0.0.1', () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientSocketTransport = createClientSocketTransport;\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\n    const socket = net_1.createConnection(port, '127.0.0.1');\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerSocketTransport = createServerSocketTransport;\nfunction isReadableStream(value) {\n    const candidate = value;\n    return candidate.read !== undefined && candidate.addListener !== undefined;\n}\nfunction isWritableStream(value) {\n    const candidate = value;\n    return candidate.write !== undefined && candidate.addListener !== undefined;\n}\nfunction createMessageConnection(input, output, logger, options) {\n    if (!logger) {\n        logger = api_1.NullLogger;\n    }\n    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;\n    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return api_1.createMessageConnection(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n//# sourceMappingURL=main.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ral_1 = require(\"../common/ral\");\nconst util_1 = require(\"util\");\nconst disposable_1 = require(\"../common/disposable\");\nconst messageBuffer_1 = require(\"../common/messageBuffer\");\nclass MessageBuffer extends messageBuffer_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, encoding) {\n        return Buffer.from(value, encoding);\n    }\n    toString(value, encoding) {\n        if (value instanceof Buffer) {\n            return value.toString(encoding);\n        }\n        else {\n            return new util_1.TextDecoder(encoding).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);\n        }\n        else {\n            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);\n        }\n    }\n    allocNative(length) {\n        return Buffer.allocUnsafe(length);\n    }\n}\nMessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);\nclass ReadableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    onData(listener) {\n        this.stream.on('data', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('data', listener));\n    }\n}\nclass WritableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return disposable_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error === undefined || error === null) {\n                    resolve();\n                }\n                else {\n                    reject(error);\n                }\n            };\n            if (typeof data === 'string') {\n                this.stream.write(data, encoding, callback);\n            }\n            else {\n                this.stream.write(data, callback);\n            }\n        });\n    }\n    end() {\n        this.stream.end();\n    }\n}\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                try {\n                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                try {\n                    if (buffer instanceof Buffer) {\n                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));\n                    }\n                    else {\n                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (stream) => new ReadableStreamWrapper(stream),\n        asWritableStream: (stream) => new WritableStreamWrapper(stream)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            return setTimeout(callback, ms, ...args);\n        },\n        clearTimeout(handle) {\n            clearTimeout(handle);\n        },\n        setImmediate(callback, ...args) {\n            return setImmediate(callback, ...args);\n        },\n        clearImmediate(handle) {\n            clearImmediate(handle);\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        ral_1.default.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n//# sourceMappingURL=ril.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"vscode-languageserver-protocol\"), exports);\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./commonClient\"), exports);\n//# sourceMappingURL=api.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass CallHierarchyProvider {\n    constructor(client) {\n        this.client = client;\n        this.middleware = client.clientOptions.middleware;\n    }\n    prepareCallHierarchy(document, position, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const prepareCallHierarchy = (document, position, token) => {\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, params, token).then((result) => {\n                return client.protocol2CodeConverter.asCallHierarchyItems(result);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, error, null);\n            });\n        };\n        return middleware.prepareCallHierarchy\n            ? middleware.prepareCallHierarchy(document, position, token, prepareCallHierarchy)\n            : prepareCallHierarchy(document, position, token);\n    }\n    provideCallHierarchyIncomingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyIncomingCalls = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asCallHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type, params, token).then((result) => {\n                return client.protocol2CodeConverter.asCallHierarchyIncomingCalls(result);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type, error, null);\n            });\n        };\n        return middleware.provideCallHierarchyIncomingCalls\n            ? middleware.provideCallHierarchyIncomingCalls(item, token, provideCallHierarchyIncomingCalls)\n            : provideCallHierarchyIncomingCalls(item, token);\n    }\n    provideCallHierarchyOutgoingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyOutgoingCalls = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asCallHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type, params, token).then((result) => {\n                return client.protocol2CodeConverter.asCallHierarchyOutgoingCalls(result);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type, error, null);\n            });\n        };\n        return middleware.provideCallHierarchyOutgoingCalls\n            ? middleware.provideCallHierarchyOutgoingCalls(item, token, provideCallHierarchyOutgoingCalls)\n            : provideCallHierarchyOutgoingCalls(item, token);\n    }\n}\nclass CallHierarchyFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type);\n    }\n    fillClientCapabilities(cap) {\n        const capabilities = cap;\n        const capability = ensure(ensure(capabilities, 'textDocument'), 'callHierarchy');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.callHierarchyProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const client = this._client;\n        const provider = new CallHierarchyProvider(client);\n        return [vscode_1.languages.registerCallHierarchyProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.CallHierarchyFeature = CallHierarchyFeature;\n//# sourceMappingURL=callHierarchy.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseLanguageClient = exports.MessageTransports = exports.TextDocumentFeature = exports.State = exports.RevealOutputChannelOn = exports.CloseAction = exports.ErrorAction = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst configuration_1 = require(\"./configuration\");\nconst c2p = require(\"./codeConverter\");\nconst p2c = require(\"./protocolConverter\");\nconst Is = require(\"./utils/is\");\nconst async_1 = require(\"./utils/async\");\nconst UUID = require(\"./utils/uuid\");\nconst progressPart_1 = require(\"./progressPart\");\nclass ConsoleLogger {\n    error(message) {\n        vscode_languageserver_protocol_1.RAL().console.error(message);\n    }\n    warn(message) {\n        vscode_languageserver_protocol_1.RAL().console.warn(message);\n    }\n    info(message) {\n        vscode_languageserver_protocol_1.RAL().console.info(message);\n    }\n    log(message) {\n        vscode_languageserver_protocol_1.RAL().console.log(message);\n    }\n}\nfunction createConnection(input, output, errorHandler, closeHandler, options) {\n    let logger = new ConsoleLogger();\n    let connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, options);\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    let result = {\n        listen: () => connection.listen(),\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: (type, handler) => connection.onRequest(Is.string(type) ? type : type.method, handler),\n        sendNotification: (type, params) => connection.sendNotification(Is.string(type) ? type : type.method, params),\n        onNotification: (type, handler) => connection.onNotification(Is.string(type) ? type : type.method, handler),\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\n            const defaultTraceOptions = {\n                sendNotification: false,\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\n            };\n            if (sendNotificationOrTraceOptions === undefined) {\n                connection.trace(value, tracer, defaultTraceOptions);\n            }\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n            else {\n                connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n        },\n        initialize: (params) => connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params),\n        shutdown: () => connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined),\n        exit: () => connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type),\n        onLogMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler),\n        onShowMessage: (handler) => connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler),\n        onTelemetry: (handler) => connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler),\n        didChangeConfiguration: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params),\n        didChangeWatchedFiles: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params),\n        didOpenTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params),\n        didChangeTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params),\n        didCloseTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params),\n        didSaveTextDocument: (params) => connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params),\n        onDiagnostics: (handler) => connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler),\n        end: () => connection.end(),\n        dispose: () => connection.dispose()\n    };\n    return result;\n}\n/**\n * An action to be performed when the connection is producing errors.\n */\nvar ErrorAction;\n(function (ErrorAction) {\n    /**\n     * Continue running the server.\n     */\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\n    /**\n     * Shutdown the server.\n     */\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\n/**\n * An action to be performed when the connection to a server got closed.\n */\nvar CloseAction;\n(function (CloseAction) {\n    /**\n     * Don't restart the server. The connection stays closed.\n     */\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\n    /**\n     * Restart the server.\n     */\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\nclass DefaultErrorHandler {\n    constructor(name, maxRestartCount) {\n        this.name = name;\n        this.maxRestartCount = maxRestartCount;\n        this.restarts = [];\n    }\n    error(_error, _message, count) {\n        if (count && count <= 3) {\n            return ErrorAction.Continue;\n        }\n        return ErrorAction.Shutdown;\n    }\n    closed() {\n        this.restarts.push(Date.now());\n        if (this.restarts.length <= this.maxRestartCount) {\n            return CloseAction.Restart;\n        }\n        else {\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n            if (diff <= 3 * 60 * 1000) {\n                vscode_1.window.showErrorMessage(`The ${this.name} server crashed ${this.maxRestartCount + 1} times in the last 3 minutes. The server will not be restarted.`);\n                return CloseAction.DoNotRestart;\n            }\n            else {\n                this.restarts.shift();\n                return CloseAction.Restart;\n            }\n        }\n    }\n}\nvar RevealOutputChannelOn;\n(function (RevealOutputChannelOn) {\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\nvar State;\n(function (State) {\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\n    State[State[\"Starting\"] = 3] = \"Starting\";\n    State[State[\"Running\"] = 2] = \"Running\";\n})(State = exports.State || (exports.State = {}));\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\n})(ClientState || (ClientState = {}));\nconst SupportedSymbolKinds = [\n    vscode_languageserver_protocol_1.SymbolKind.File,\n    vscode_languageserver_protocol_1.SymbolKind.Module,\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\n    vscode_languageserver_protocol_1.SymbolKind.Package,\n    vscode_languageserver_protocol_1.SymbolKind.Class,\n    vscode_languageserver_protocol_1.SymbolKind.Method,\n    vscode_languageserver_protocol_1.SymbolKind.Property,\n    vscode_languageserver_protocol_1.SymbolKind.Field,\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\n    vscode_languageserver_protocol_1.SymbolKind.Function,\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\n    vscode_languageserver_protocol_1.SymbolKind.String,\n    vscode_languageserver_protocol_1.SymbolKind.Number,\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\n    vscode_languageserver_protocol_1.SymbolKind.Array,\n    vscode_languageserver_protocol_1.SymbolKind.Object,\n    vscode_languageserver_protocol_1.SymbolKind.Key,\n    vscode_languageserver_protocol_1.SymbolKind.Null,\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\n    vscode_languageserver_protocol_1.SymbolKind.Event,\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\n];\nconst SupportedCompletionItemKinds = [\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\n];\nconst SupportedSymbolTags = [\n    vscode_languageserver_protocol_1.SymbolTag.Deprecated\n];\nfunction ensure(target, key) {\n    if (target[key] === undefined) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar FileFormattingOptions;\n(function (FileFormattingOptions) {\n    function fromConfiguration(document) {\n        const filesConfig = vscode_1.workspace.getConfiguration('files', document);\n        return {\n            trimTrailingWhitespace: filesConfig.get('trimTrailingWhitespace'),\n            trimFinalNewlines: filesConfig.get('trimFinalNewlines'),\n            insertFinalNewline: filesConfig.get('insertFinalNewline'),\n        };\n    }\n    FileFormattingOptions.fromConfiguration = fromConfiguration;\n})(FileFormattingOptions || (FileFormattingOptions = {}));\nvar DynamicFeature;\n(function (DynamicFeature) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.registrationType !== undefined;\n    }\n    DynamicFeature.is = is;\n})(DynamicFeature || (DynamicFeature = {}));\nclass DocumentNotifications {\n    constructor(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\n        this._client = _client;\n        this._event = _event;\n        this._type = _type;\n        this._middleware = _middleware;\n        this._createParams = _createParams;\n        this._selectorFilter = _selectorFilter;\n        this._selectors = new Map();\n    }\n    static textDocumentFilter(selectors, textDocument) {\n        for (const selector of selectors) {\n            if (vscode_1.languages.match(selector, textDocument)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(data) {\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\n            if (this._middleware) {\n                this._middleware(data, (data) => this._client.sendNotification(this._type, this._createParams(data)));\n            }\n            else {\n                this._client.sendNotification(this._type, this._createParams(data));\n            }\n            this.notificationSent(data);\n        }\n    }\n    notificationSent(_data) {\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getProvider(document) {\n        for (const selector of this._selectors.values()) {\n            if (vscode_1.languages.match(selector, document)) {\n                return {\n                    send: (data) => {\n                        this.callback(data);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }\n}\nclass DidOpenTextDocumentFeature extends DocumentNotifications {\n    constructor(client, _syncedDocuments) {\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), DocumentNotifications.textDocumentFilter);\n        this._syncedDocuments = _syncedDocuments;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register({ id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\n    }\n    register(data) {\n        super.register(data);\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let documentSelector = data.registerOptions.documentSelector;\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\n            let uri = textDocument.uri.toString();\n            if (this._syncedDocuments.has(uri)) {\n                return;\n            }\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\n                let middleware = this._client.clientOptions.middleware;\n                let didOpen = (textDocument) => {\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                if (middleware.didOpen) {\n                    middleware.didOpen(textDocument, didOpen);\n                }\n                else {\n                    didOpen(textDocument);\n                }\n                this._syncedDocuments.set(uri, textDocument);\n            }\n        });\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\n    }\n}\nclass DidCloseTextDocumentFeature extends DocumentNotifications {\n    constructor(client, _syncedDocuments) {\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), DocumentNotifications.textDocumentFilter);\n        this._syncedDocuments = _syncedDocuments;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register({ id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    notificationSent(textDocument) {\n        super.notificationSent(textDocument);\n        this._syncedDocuments.delete(textDocument.uri.toString());\n    }\n    unregister(id) {\n        let selector = this._selectors.get(id);\n        // The super call removed the selector from the map\n        // of selectors.\n        super.unregister(id);\n        let selectors = this._selectors.values();\n        this._syncedDocuments.forEach((textDocument) => {\n            if (vscode_1.languages.match(selector, textDocument) && !this._selectorFilter(selectors, textDocument)) {\n                let middleware = this._client.clientOptions.middleware;\n                let didClose = (textDocument) => {\n                    this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                this._syncedDocuments.delete(textDocument.uri.toString());\n                if (middleware.didClose) {\n                    middleware.didClose(textDocument, didClose);\n                }\n                else {\n                    didClose(textDocument);\n                }\n            }\n        });\n    }\n}\nclass DidChangeTextDocumentFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._changeData = new Map();\n        this._forcingDelivery = false;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== undefined && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\n            });\n        }\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\n        }\n        this._changeData.set(data.id, {\n            documentSelector: data.registerOptions.documentSelector,\n            syncKind: data.registerOptions.syncKind\n        });\n    }\n    callback(event) {\n        // Text document changes are send for dirty changes as well. We don't\n        // have dirty / un-dirty events in the LSP so we ignore content changes\n        // with length zero.\n        if (event.contentChanges.length === 0) {\n            return;\n        }\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\n                let middleware = this._client.clientOptions.middleware;\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\n                    let params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\n                    if (middleware.didChange) {\n                        middleware.didChange(event, () => this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params));\n                    }\n                    else {\n                        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                    }\n                }\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n                    let didChange = (event) => {\n                        if (this._changeDelayer) {\n                            if (this._changeDelayer.uri !== event.document.uri.toString()) {\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\n                                this.forceDelivery();\n                                this._changeDelayer.uri = event.document.uri.toString();\n                            }\n                            this._changeDelayer.delayer.trigger(() => {\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            });\n                        }\n                        else {\n                            this._changeDelayer = {\n                                uri: event.document.uri.toString(),\n                                delayer: new async_1.Delayer(200)\n                            };\n                            this._changeDelayer.delayer.trigger(() => {\n                                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            }, -1);\n                        }\n                    };\n                    if (middleware.didChange) {\n                        middleware.didChange(event, didChange);\n                    }\n                    else {\n                        didChange(event);\n                    }\n                }\n            }\n        }\n    }\n    unregister(id) {\n        this._changeData.delete(id);\n        if (this._changeData.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._changeDelayer = undefined;\n        this._forcingDelivery = false;\n        this._changeData.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    forceDelivery() {\n        if (this._forcingDelivery || !this._changeDelayer) {\n            return;\n        }\n        try {\n            this._forcingDelivery = true;\n            this._changeDelayer.delayer.forceDelivery();\n        }\n        finally {\n            this._forcingDelivery = false;\n        }\n    }\n    getProvider(document) {\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, document)) {\n                return {\n                    send: (event) => {\n                        this.callback(event);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }\n}\nclass WillSaveFeature extends DocumentNotifications {\n    constructor(client) {\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (selectors, willSaveEvent) => DocumentNotifications.textDocumentFilter(selectors, willSaveEvent.document));\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n}\nclass WillSaveWaitUntilFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._selectors = new Map();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSaveWaitUntil = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    }\n    callback(event) {\n        if (DocumentNotifications.textDocumentFilter(this._selectors.values(), event.document)) {\n            let middleware = this._client.clientOptions.middleware;\n            let willSaveWaitUntil = (event) => {\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then((edits) => {\n                    let vEdits = this._client.protocol2CodeConverter.asTextEdits(edits);\n                    return vEdits === undefined ? [] : vEdits;\n                });\n            };\n            event.waitUntil(middleware.willSaveWaitUntil\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\n                : willSaveWaitUntil(event));\n        }\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n}\nclass DidSaveTextDocumentFeature extends DocumentNotifications {\n    constructor(client) {\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), DocumentNotifications.textDocumentFilter);\n        this._includeText = false;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\n            const saveOptions = typeof textDocumentSyncOptions.save === 'boolean'\n                ? { includeText: false }\n                : { includeText: !!textDocumentSyncOptions.save.includeText };\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, saveOptions)\n            });\n        }\n    }\n    register(data) {\n        this._includeText = !!data.registerOptions.includeText;\n        super.register(data);\n    }\n}\nclass FileSystemWatcherFeature {\n    constructor(_client, _notifyFileEvent) {\n        this._client = _client;\n        this._notifyFileEvent = _notifyFileEvent;\n        this._watchers = new Map();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\n    }\n    initialize(_capabilities, _documentSelector) {\n    }\n    register(data) {\n        if (!Array.isArray(data.registerOptions.watchers)) {\n            return;\n        }\n        let disposables = [];\n        for (let watcher of data.registerOptions.watchers) {\n            if (!Is.string(watcher.globPattern)) {\n                continue;\n            }\n            let watchCreate = true, watchChange = true, watchDelete = true;\n            if (watcher.kind !== undefined && watcher.kind !== null) {\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) !== 0;\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) !== 0;\n            }\n            let fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\n            disposables.push(fileSystemWatcher);\n        }\n        this._watchers.set(data.id, disposables);\n    }\n    registerRaw(id, fileSystemWatchers) {\n        let disposables = [];\n        for (let fileSystemWatcher of fileSystemWatchers) {\n            this.hookListeners(fileSystemWatcher, true, true, true, disposables);\n        }\n        this._watchers.set(id, disposables);\n    }\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\n        if (watchCreate) {\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\n            }), null, listeners);\n        }\n        if (watchChange) {\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\n            }), null, listeners);\n        }\n        if (watchDelete) {\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\n            }), null, listeners);\n        }\n    }\n    unregister(id) {\n        let disposables = this._watchers.get(id);\n        if (disposables) {\n            for (let disposable of disposables) {\n                disposable.dispose();\n            }\n        }\n    }\n    dispose() {\n        this._watchers.forEach((disposables) => {\n            for (let disposable of disposables) {\n                disposable.dispose();\n            }\n        });\n        this._watchers.clear();\n    }\n}\nclass TextDocumentFeature {\n    constructor(_client, _registrationType) {\n        this._client = _client;\n        this._registrationType = _registrationType;\n        this._registrations = new Map();\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    dispose() {\n        this._registrations.forEach((value) => {\n            value.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getRegistration(documentSelector, capability) {\n        if (!capability) {\n            return [undefined, undefined];\n        }\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\n            const selector = capability.documentSelector || documentSelector;\n            if (selector) {\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\n            }\n        }\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\n            if (!documentSelector) {\n                return [undefined, undefined];\n            }\n            let options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n            return [UUID.generateUuid(), options];\n        }\n        return [undefined, undefined];\n    }\n    getRegistrationOptions(documentSelector, capability) {\n        if (!documentSelector || !capability) {\n            return undefined;\n        }\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n    }\n    getProvider(textDocument) {\n        for (const registration of this._registrations.values()) {\n            let selector = registration.data.registerOptions.documentSelector;\n            if (selector !== null && vscode_1.languages.match(selector, textDocument)) {\n                return registration.provider;\n            }\n        }\n        return undefined;\n    }\n    getAllProviders() {\n        const result = [];\n        for (const item of this._registrations.values()) {\n            result.push(item.provider);\n        }\n        return result;\n    }\n}\nexports.TextDocumentFeature = TextDocumentFeature;\nclass WorkspaceFeature {\n    constructor(_client, _registrationType) {\n        this._client = _client;\n        this._registrationType = _registrationType;\n        this._registrations = new Map();\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        const registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    dispose() {\n        this._registrations.forEach((registration) => {\n            registration.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getProviders() {\n        const result = [];\n        for (const registration of this._registrations.values()) {\n            result.push(registration.provider);\n        }\n        return result;\n    }\n}\nclass CompletionItemFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let completion = ensure(ensure(capabilities, 'textDocument'), 'completion');\n        completion.dynamicRegistration = true;\n        completion.contextSupport = true;\n        completion.completionItem = {\n            snippetSupport: true,\n            commitCharactersSupport: true,\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n            deprecatedSupport: true,\n            preselectSupport: true,\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] },\n            insertReplaceSupport: true,\n            resolveSupport: {\n                properties: ['documentation', 'detail', 'additionalTextEdits']\n            },\n            insertTextModeSupport: { valueSet: [vscode_languageserver_protocol_1.InsertTextMode.asIs, vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation] }\n        };\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const triggerCharacters = options.triggerCharacters || [];\n        const provider = {\n            provideCompletionItems: (document, position, token, context) => {\n                const client = this._client;\n                const middleware = this._client.clientOptions.middleware;\n                const provideCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error, null);\n                    });\n                };\n                return middleware.provideCompletionItem\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\n                    : provideCompletionItems(document, position, context, token);\n            },\n            resolveCompletionItem: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.clientOptions.middleware;\n                    const resolveCompletionItem = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error, item);\n                        });\n                    };\n                    return middleware.resolveCompletionItem\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\n                        : resolveCompletionItem(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCompletionItemProvider(options.documentSelector, provider, ...triggerCharacters), provider];\n    }\n}\nclass HoverFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const hoverCapability = (ensure(ensure(capabilities, 'textDocument'), 'hover'));\n        hoverCapability.dynamicRegistration = true;\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideHover: (document, position, token) => {\n                const client = this._client;\n                const provideHover = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideHover\n                    ? middleware.provideHover(document, position, token, provideHover)\n                    : provideHover(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerHoverProvider(options.documentSelector, provider), provider];\n    }\n}\nclass SignatureHelpFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let config = ensure(ensure(capabilities, 'textDocument'), 'signatureHelp');\n        config.dynamicRegistration = true;\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\n        config.signatureInformation.activeParameterSupport = true;\n        config.contextSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.signatureHelpProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideSignatureHelp: (document, position, token, context) => {\n                const client = this._client;\n                const providerSignatureHelp = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asSignatureHelpParams(document, position, context), token).then(client.protocol2CodeConverter.asSignatureHelp, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideSignatureHelp\n                    ? middleware.provideSignatureHelp(document, position, context, token, providerSignatureHelp)\n                    : providerSignatureHelp(document, position, context, token);\n            }\n        };\n        let disposable;\n        if (options.retriggerCharacters === undefined) {\n            const triggerCharacters = options.triggerCharacters || [];\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, ...triggerCharacters);\n        }\n        else {\n            const metaData = {\n                triggerCharacters: options.triggerCharacters || [],\n                retriggerCharacters: options.retriggerCharacters || []\n            };\n            disposable = vscode_1.languages.registerSignatureHelpProvider(options.documentSelector, provider, metaData);\n        }\n        return [disposable, provider];\n    }\n}\nclass DefinitionFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let definitionSupport = ensure(ensure(capabilities, 'textDocument'), 'definition');\n        definitionSupport.dynamicRegistration = true;\n        definitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.definitionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDefinition\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\n                    : provideDefinition(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDefinitionProvider(options.documentSelector, provider), provider];\n    }\n}\nclass ReferencesFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'references').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.referencesProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideReferences: (document, position, options, token) => {\n                const client = this._client;\n                const _providerReferences = (document, position, options, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideReferences\n                    ? middleware.provideReferences(document, position, options, token, _providerReferences)\n                    : _providerReferences(document, position, options, token);\n            }\n        };\n        return [vscode_1.languages.registerReferenceProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentHighlightFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentHighlightProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentHighlights: (document, position, token) => {\n                const client = this._client;\n                const _provideDocumentHighlights = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentHighlights\n                    ? middleware.provideDocumentHighlights(document, position, token, _provideDocumentHighlights)\n                    : _provideDocumentHighlights(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentSymbolFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = ensure(ensure(capabilities, 'textDocument'), 'documentSymbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupportedSymbolKinds\n        };\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n        symbolCapabilities.tagSupport = {\n            valueSet: SupportedSymbolTags\n        };\n        symbolCapabilities.labelSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentSymbols: (document, token) => {\n                const client = this._client;\n                const _provideDocumentSymbols = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then((data) => {\n                        if (data === null) {\n                            return undefined;\n                        }\n                        if (data.length === 0) {\n                            return [];\n                        }\n                        else {\n                            let element = data[0];\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\n                                return client.protocol2CodeConverter.asDocumentSymbols(data);\n                            }\n                            else {\n                                return client.protocol2CodeConverter.asSymbolInformations(data);\n                            }\n                        }\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentSymbols\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\n                    : _provideDocumentSymbols(document, token);\n            }\n        };\n        const metaData = options.label !== undefined ? { label: options.label } : undefined;\n        return [vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, provider, metaData), provider];\n    }\n}\nclass WorkspaceSymbolFeature extends WorkspaceFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = ensure(ensure(capabilities, 'workspace'), 'symbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupportedSymbolKinds\n        };\n        symbolCapabilities.tagSupport = {\n            valueSet: SupportedSymbolTags\n        };\n    }\n    initialize(capabilities) {\n        if (!capabilities.workspaceSymbolProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\n        });\n    }\n    registerLanguageProvider(_options) {\n        const provider = {\n            provideWorkspaceSymbols: (query, token) => {\n                const client = this._client;\n                const provideWorkspaceSymbols = (query, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then(client.protocol2CodeConverter.asSymbolInformations, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideWorkspaceSymbols\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\n                    : provideWorkspaceSymbols(query, token);\n            }\n        };\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\n    }\n}\nclass CodeActionFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const cap = ensure(ensure(capabilities, 'textDocument'), 'codeAction');\n        cap.dynamicRegistration = true;\n        cap.isPreferredSupport = true;\n        cap.disabledSupport = true;\n        cap.dataSupport = true;\n        // We can only resolve the edit property.\n        cap.resolveSupport = {\n            properties: ['edit']\n        };\n        cap.codeActionLiteralSupport = {\n            codeActionKind: {\n                valueSet: [\n                    vscode_languageserver_protocol_1.CodeActionKind.Empty,\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\n                ]\n            }\n        };\n        cap.honorsChangeAnnotations = false;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeActionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideCodeActions: (document, range, context, token) => {\n                const client = this._client;\n                const _provideCodeActions = (document, range, context, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        context: client.code2ProtocolConverter.asCodeActionContext(context)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\n                        if (values === null) {\n                            return undefined;\n                        }\n                        const result = [];\n                        for (let item of values) {\n                            if (vscode_languageserver_protocol_1.Command.is(item)) {\n                                result.push(client.protocol2CodeConverter.asCommand(item));\n                            }\n                            else {\n                                result.push(client.protocol2CodeConverter.asCodeAction(item));\n                            }\n                        }\n                        return result;\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideCodeActions\n                    ? middleware.provideCodeActions(document, range, context, token, _provideCodeActions)\n                    : _provideCodeActions(document, range, context, token);\n            },\n            resolveCodeAction: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.clientOptions.middleware;\n                    const resolveCodeAction = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, client.code2ProtocolConverter.asCodeAction(item), token).then(client.protocol2CodeConverter.asCodeAction, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, error, item);\n                        });\n                    };\n                    return middleware.resolveCodeAction\n                        ? middleware.resolveCodeAction(item, token, resolveCodeAction)\n                        : resolveCodeAction(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeActionsProvider(options.documentSelector, provider, (options.codeActionKinds\n                ? { providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\n                : undefined)), provider];\n    }\n}\nclass CodeLensFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'codeLens').dynamicRegistration = true;\n        ensure(ensure(capabilities, 'workspace'), 'codeLens').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.CodeLensRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeCodeLensEmitter.fire();\n            }\n        });\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeCodeLenses: eventEmitter.event,\n            provideCodeLenses: (document, token) => {\n                const client = this._client;\n                const provideCodeLenses = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideCodeLenses\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\n                    : provideCodeLenses(document, token);\n            },\n            resolveCodeLens: (options.resolveProvider)\n                ? (codeLens, token) => {\n                    const client = this._client;\n                    const resolveCodeLens = (codeLens, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error, codeLens);\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.resolveCodeLens\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\n                        : resolveCodeLens(codeLens, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeLensProvider(options.documentSelector, provider), { provider, onDidChangeCodeLensEmitter: eventEmitter }];\n    }\n}\nclass DocumentFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'formatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentFormattingEdits: (document, options, token) => {\n                const client = this._client;\n                const provideDocumentFormattingEdits = (document, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentFormattingEdits\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\n                    : provideDocumentFormattingEdits(document, options, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentRangeFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentRangeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\n                const client = this._client;\n                const provideDocumentRangeFormattingEdits = (document, range, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentRangeFormattingEdits\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, provider), provider];\n    }\n}\nclass DocumentOnTypeFormattingFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentOnTypeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\n                const client = this._client;\n                const provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        ch: ch,\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideOnTypeFormattingEdits\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\n            }\n        };\n        const moreTriggerCharacter = options.moreTriggerCharacter || [];\n        return [vscode_1.languages.registerOnTypeFormattingEditProvider(options.documentSelector, provider, options.firstTriggerCharacter, ...moreTriggerCharacter), provider];\n    }\n}\nclass RenameFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let rename = ensure(ensure(capabilities, 'textDocument'), 'rename');\n        rename.dynamicRegistration = true;\n        rename.prepareSupport = true;\n        rename.prepareSupportDefaultBehavior = vscode_languageserver_protocol_1.PrepareSupportDefaultBehavior.Identifier;\n        rename.honorsChangeAnnotations = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.renameProvider);\n        if (!options) {\n            return;\n        }\n        if (Is.boolean(capabilities.renameProvider)) {\n            options.prepareProvider = false;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideRenameEdits: (document, position, newName, token) => {\n                const client = this._client;\n                const provideRenameEdits = (document, position, newName, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        newName: newName\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideRenameEdits\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\n                    : provideRenameEdits(document, position, newName, token);\n            },\n            prepareRename: options.prepareProvider\n                ? (document, position, token) => {\n                    const client = this._client;\n                    const prepareRename = (document, position, token) => {\n                        let params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            position: client.code2ProtocolConverter.asPosition(position),\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\n                            if (vscode_languageserver_protocol_1.Range.is(result)) {\n                                return client.protocol2CodeConverter.asRange(result);\n                            }\n                            else if (this.isDefaultBehavior(result)) {\n                                return result.defaultBehavior === true\n                                    ? null\n                                    : Promise.reject(new Error(`The element can't be renamed.`));\n                            }\n                            else if (result && vscode_languageserver_protocol_1.Range.is(result.range)) {\n                                return {\n                                    range: client.protocol2CodeConverter.asRange(result.range),\n                                    placeholder: result.placeholder\n                                };\n                            }\n                            // To cancel the rename vscode API expects a rejected promise.\n                            return Promise.reject(new Error(`The element can't be renamed.`));\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, error, undefined);\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.prepareRename\n                        ? middleware.prepareRename(document, position, token, prepareRename)\n                        : prepareRename(document, position, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerRenameProvider(options.documentSelector, provider), provider];\n    }\n    isDefaultBehavior(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.defaultBehavior);\n    }\n}\nclass DocumentLinkFeature extends TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const documentLinkCapabilities = ensure(ensure(capabilities, 'textDocument'), 'documentLink');\n        documentLinkCapabilities.dynamicRegistration = true;\n        documentLinkCapabilities.tooltipSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentLinkProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDocumentLinks: (document, token) => {\n                const client = this._client;\n                const provideDocumentLinks = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentLinks\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\n                    : provideDocumentLinks(document, token);\n            },\n            resolveDocumentLink: options.resolveProvider\n                ? (link, token) => {\n                    const client = this._client;\n                    let resolveDocumentLink = (link, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error, link);\n                        });\n                    };\n                    const middleware = client.clientOptions.middleware;\n                    return middleware.resolveDocumentLink\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\n                        : resolveDocumentLink(link, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, provider), provider];\n    }\n}\nclass ConfigurationFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\n    }\n    initialize() {\n        let section = this._client.clientOptions.synchronize.configurationSection;\n        if (section !== undefined) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: {\n                    section: section\n                }\n            });\n        }\n    }\n    register(data) {\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\n        });\n        this._listeners.set(data.id, disposable);\n        if (data.registerOptions.section !== undefined) {\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\n        }\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable) {\n            this._listeners.delete(id);\n            disposable.dispose();\n        }\n    }\n    dispose() {\n        for (let disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n    }\n    onDidChangeConfiguration(configurationSection, event) {\n        let sections;\n        if (Is.string(configurationSection)) {\n            sections = [configurationSection];\n        }\n        else {\n            sections = configurationSection;\n        }\n        if (sections !== undefined && event !== undefined) {\n            let affected = sections.some((section) => event.affectsConfiguration(section));\n            if (!affected) {\n                return;\n            }\n        }\n        let didChangeConfiguration = (sections) => {\n            if (sections === undefined) {\n                this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\n                return;\n            }\n            this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\n        };\n        let middleware = this.getMiddleware();\n        middleware\n            ? middleware(sections, didChangeConfiguration)\n            : didChangeConfiguration(sections);\n    }\n    extractSettingsInformation(keys) {\n        function ensurePath(config, path) {\n            let current = config;\n            for (let i = 0; i < path.length - 1; i++) {\n                let obj = current[path[i]];\n                if (!obj) {\n                    obj = Object.create(null);\n                    current[path[i]] = obj;\n                }\n                current = obj;\n            }\n            return current;\n        }\n        let resource = this._client.clientOptions.workspaceFolder\n            ? this._client.clientOptions.workspaceFolder.uri\n            : undefined;\n        let result = Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let index = key.indexOf('.');\n            let config = null;\n            if (index >= 0) {\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\n            }\n            else {\n                config = vscode_1.workspace.getConfiguration(undefined, resource).get(key);\n            }\n            if (config) {\n                let path = keys[i].split('.');\n                ensurePath(result, path)[path[path.length - 1]] = configuration_1.toJSONObject(config);\n            }\n        }\n        return result;\n    }\n    getMiddleware() {\n        let middleware = this._client.clientOptions.middleware;\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\n            return middleware.workspace.didChangeConfiguration;\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nclass ExecuteCommandFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._commands = new Map();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n    }\n    initialize(capabilities) {\n        if (!capabilities.executeCommandProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n        });\n    }\n    register(data) {\n        const client = this._client;\n        const middleware = client.clientOptions.middleware;\n        const executeCommand = (command, args) => {\n            let params = {\n                command,\n                arguments: args\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error, undefined);\n            });\n        };\n        if (data.registerOptions.commands) {\n            const disposables = [];\n            for (const command of data.registerOptions.commands) {\n                disposables.push(vscode_1.commands.registerCommand(command, (...args) => {\n                    return middleware.executeCommand\n                        ? middleware.executeCommand(command, args, executeCommand)\n                        : executeCommand(command, args);\n                }));\n            }\n            this._commands.set(data.id, disposables);\n        }\n    }\n    unregister(id) {\n        let disposables = this._commands.get(id);\n        if (disposables) {\n            disposables.forEach(disposable => disposable.dispose());\n        }\n    }\n    dispose() {\n        this._commands.forEach((value) => {\n            value.forEach(disposable => disposable.dispose());\n        });\n        this._commands.clear();\n    }\n}\nvar MessageTransports;\n(function (MessageTransports) {\n    function is(value) {\n        let candidate = value;\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\n    }\n    MessageTransports.is = is;\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\nclass OnReady {\n    constructor(_resolve, _reject) {\n        this._resolve = _resolve;\n        this._reject = _reject;\n        this._used = false;\n    }\n    get isUsed() {\n        return this._used;\n    }\n    resolve() {\n        this._used = true;\n        this._resolve();\n    }\n    reject(error) {\n        this._used = true;\n        this._reject(error);\n    }\n}\nclass BaseLanguageClient {\n    constructor(id, name, clientOptions) {\n        var _a;\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        this._features = [];\n        this._dynamicFeatures = new Map();\n        this._id = id;\n        this._name = name;\n        clientOptions = clientOptions || {};\n        const markdown = { isTrusted: false };\n        if (clientOptions.markdown !== undefined && clientOptions.markdown.isTrusted === true) {\n            markdown.isTrusted = true;\n        }\n        this._clientOptions = {\n            documentSelector: clientOptions.documentSelector || [],\n            synchronize: clientOptions.synchronize || {},\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\n            outputChannelName: clientOptions.outputChannelName || this._name,\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\n            initializationOptions: clientOptions.initializationOptions,\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\n            progressOnInitialization: !!clientOptions.progressOnInitialization,\n            errorHandler: clientOptions.errorHandler || this.createDefaultErrorHandler((_a = clientOptions.connectionOptions) === null || _a === void 0 ? void 0 : _a.maxRestartCount),\n            middleware: clientOptions.middleware || {},\n            uriConverters: clientOptions.uriConverters,\n            workspaceFolder: clientOptions.workspaceFolder,\n            connectionOptions: clientOptions.connectionOptions,\n            markdown\n        };\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\n        this._state = ClientState.Initial;\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        this._initializeResult = undefined;\n        if (clientOptions.outputChannel) {\n            this._outputChannel = clientOptions.outputChannel;\n            this._disposeOutputChannel = false;\n        }\n        else {\n            this._outputChannel = undefined;\n            this._disposeOutputChannel = true;\n        }\n        this._traceOutputChannel = clientOptions.traceOutputChannel;\n        this._listeners = undefined;\n        this._providers = undefined;\n        this._diagnostics = undefined;\n        this._fileEvents = [];\n        this._fileEventDelayer = new async_1.Delayer(250);\n        this._onReady = new Promise((resolve, reject) => {\n            this._onReadyCallbacks = new OnReady(resolve, reject);\n        });\n        this._onStop = undefined;\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\n        this._tracer = {\n            log: (messageOrDataObject, data) => {\n                if (Is.string(messageOrDataObject)) {\n                    this.logTrace(messageOrDataObject, data);\n                }\n                else {\n                    this.logObjectTrace(messageOrDataObject);\n                }\n            },\n        };\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined, this._clientOptions.markdown.isTrusted);\n        this._syncedDocuments = new Map();\n        this.registerBuiltinFeatures();\n    }\n    get state() {\n        return this._state;\n    }\n    set state(value) {\n        let oldState = this.getPublicState();\n        this._state = value;\n        let newState = this.getPublicState();\n        if (newState !== oldState) {\n            this._stateChangeEmitter.fire({ oldState, newState });\n        }\n    }\n    getPublicState() {\n        if (this.state === ClientState.Running) {\n            return State.Running;\n        }\n        else if (this.state === ClientState.Starting) {\n            return State.Starting;\n        }\n        else {\n            return State.Stopped;\n        }\n    }\n    get initializeResult() {\n        return this._initializeResult;\n    }\n    sendRequest(type, ...params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            return this._resolvedConnection.sendRequest(type, ...params);\n        }\n        catch (error) {\n            this.error(`Sending request ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onRequest(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            return this._resolvedConnection.onRequest(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering request handler ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    sendNotification(type, params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendNotification(type, params);\n        }\n        catch (error) {\n            this.error(`Sending notification ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onNotification(type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            return this._resolvedConnection.onNotification(type, handler);\n        }\n        catch (error) {\n            this.error(`Registering notification handler ${Is.string(type) ? type : type.method} failed.`, error);\n            throw error;\n        }\n    }\n    onProgress(type, token, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            if (vscode_languageserver_protocol_1.WorkDoneProgress.is(type)) {\n                const handleWorkDoneProgress = this._clientOptions.middleware.handleWorkDoneProgress;\n                if (handleWorkDoneProgress !== undefined) {\n                    return this._resolvedConnection.onProgress(type, token, (params) => {\n                        handleWorkDoneProgress(token, params, () => handler(params));\n                    });\n                }\n            }\n            return this._resolvedConnection.onProgress(type, token, handler);\n        }\n        catch (error) {\n            this.error(`Registering progress handler for token ${token} failed.`, error);\n            throw error;\n        }\n    }\n    sendProgress(type, token, value) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendProgress(type, token, value);\n        }\n        catch (error) {\n            this.error(`Sending progress for token ${token} failed.`, error);\n            throw error;\n        }\n    }\n    get clientOptions() {\n        return this._clientOptions;\n    }\n    get protocol2CodeConverter() {\n        return this._p2c;\n    }\n    get code2ProtocolConverter() {\n        return this._c2p;\n    }\n    get onTelemetry() {\n        return this._telemetryEmitter.event;\n    }\n    get onDidChangeState() {\n        return this._stateChangeEmitter.event;\n    }\n    get outputChannel() {\n        if (!this._outputChannel) {\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\n        }\n        return this._outputChannel;\n    }\n    get traceOutputChannel() {\n        if (this._traceOutputChannel) {\n            return this._traceOutputChannel;\n        }\n        return this.outputChannel;\n    }\n    get diagnostics() {\n        return this._diagnostics;\n    }\n    createDefaultErrorHandler(maxRestartCount) {\n        if (maxRestartCount !== undefined && maxRestartCount < 0) {\n            throw new Error(`Invalid maxRestartCount: ${maxRestartCount}`);\n        }\n        return new DefaultErrorHandler(this._name, maxRestartCount !== null && maxRestartCount !== void 0 ? maxRestartCount : 4);\n    }\n    set trace(value) {\n        this._trace = value;\n        this.onReady().then(() => {\n            this.resolveConnection().then((connection) => {\n                connection.trace(this._trace, this._tracer, {\n                    sendNotification: false,\n                    traceFormat: this._traceFormat\n                });\n            });\n        }, () => {\n        });\n    }\n    data2String(data) {\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\n            const responseError = data;\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\n        }\n        if (data instanceof Error) {\n            if (Is.string(data.stack)) {\n                return data.stack;\n            }\n            return data.message;\n        }\n        if (Is.string(data)) {\n            return data;\n        }\n        return data.toString();\n    }\n    info(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Info  - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\n            this.showNotificationMessage();\n        }\n    }\n    warn(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Warn  - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\n            this.showNotificationMessage();\n        }\n    }\n    error(message, data, showNotification = true) {\n        this.outputChannel.appendLine(`[Error - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification && this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\n            this.showNotificationMessage();\n        }\n    }\n    showNotificationMessage() {\n        vscode_1.window.showInformationMessage('A request has failed. See the output for more information.', 'Go to output').then(() => {\n            this.outputChannel.show(true);\n        });\n    }\n    logTrace(message, data) {\n        this.traceOutputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.traceOutputChannel.appendLine(this.data2String(data));\n        }\n    }\n    logObjectTrace(data) {\n        if (data.isLSPMessage && data.type) {\n            this.traceOutputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\n        }\n        else {\n            this.traceOutputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\n        }\n        if (data) {\n            this.traceOutputChannel.appendLine(`${JSON.stringify(data)}`);\n        }\n    }\n    needsStart() {\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\n    }\n    needsStop() {\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\n    }\n    onReady() {\n        return this._onReady;\n    }\n    isConnectionActive() {\n        return this.state === ClientState.Running && !!this._resolvedConnection;\n    }\n    start() {\n        if (this._onReadyCallbacks.isUsed) {\n            this._onReady = new Promise((resolve, reject) => {\n                this._onReadyCallbacks = new OnReady(resolve, reject);\n            });\n        }\n        this._listeners = [];\n        this._providers = [];\n        // If we restart then the diagnostics collection is reused.\n        if (!this._diagnostics) {\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\n                : vscode_1.languages.createDiagnosticCollection();\n        }\n        this.state = ClientState.Starting;\n        this.resolveConnection().then((connection) => {\n            connection.onLogMessage((message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        this.error(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        this.warn(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        this.info(message.message, undefined, false);\n                        break;\n                    default:\n                        this.outputChannel.appendLine(message.message);\n                }\n            });\n            connection.onShowMessage((message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        vscode_1.window.showErrorMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        vscode_1.window.showWarningMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        vscode_1.window.showInformationMessage(message.message);\n                        break;\n                    default:\n                        vscode_1.window.showInformationMessage(message.message);\n                }\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\n                let messageFunc;\n                switch (params.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        messageFunc = vscode_1.window.showErrorMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        messageFunc = vscode_1.window.showWarningMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                        break;\n                    default:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                }\n                let actions = params.actions || [];\n                return messageFunc(params.message, ...actions);\n            });\n            connection.onTelemetry((data) => {\n                this._telemetryEmitter.fire(data);\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, async (params) => {\n                var _a;\n                const showDocument = async (params) => {\n                    const uri = this.protocol2CodeConverter.asUri(params.uri);\n                    try {\n                        if (params.external === true) {\n                            const success = await vscode_1.env.openExternal(uri);\n                            return { success };\n                        }\n                        else {\n                            const options = {};\n                            if (params.selection !== undefined) {\n                                options.selection = this.protocol2CodeConverter.asRange(params.selection);\n                            }\n                            if (params.takeFocus === undefined || params.takeFocus === false) {\n                                options.preserveFocus = true;\n                            }\n                            else if (params.takeFocus === true) {\n                                options.preserveFocus = false;\n                            }\n                            await vscode_1.window.showTextDocument(uri, options);\n                            return { success: true };\n                        }\n                    }\n                    catch (error) {\n                        return { success: true };\n                    }\n                };\n                const middleware = (_a = this._clientOptions.middleware.window) === null || _a === void 0 ? void 0 : _a.showDocument;\n                if (middleware !== undefined) {\n                    return middleware(params, showDocument);\n                }\n                else {\n                    return showDocument(params);\n                }\n            });\n            connection.listen();\n            // Error is handled in the initialize call.\n            return this.initialize(connection);\n        }).then(undefined, (error) => {\n            this.state = ClientState.StartFailed;\n            this._onReadyCallbacks.reject(error);\n            this.error('Starting client failed', error);\n            vscode_1.window.showErrorMessage(`Couldn't start client ${this._name}`);\n        });\n        return new vscode_1.Disposable(() => {\n            if (this.needsStop()) {\n                this.stop();\n            }\n        });\n    }\n    resolveConnection() {\n        if (!this._connectionPromise) {\n            this._connectionPromise = this.createConnection();\n        }\n        return this._connectionPromise;\n    }\n    initialize(connection) {\n        this.refreshTrace(connection, false);\n        let initOption = this._clientOptions.initializationOptions;\n        let rootPath = this._clientOptions.workspaceFolder\n            ? this._clientOptions.workspaceFolder.uri.fsPath\n            : this._clientGetRootPath();\n        let initParams = {\n            processId: null,\n            clientInfo: {\n                name: vscode_1.env.appName,\n                version: vscode_1.version\n            },\n            locale: this.getLocale(),\n            rootPath: rootPath ? rootPath : null,\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\n            capabilities: this.computeClientCapabilities(),\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\n            workspaceFolders: null\n        };\n        this.fillInitializeParams(initParams);\n        if (this._clientOptions.progressOnInitialization) {\n            const token = UUID.generateUuid();\n            const part = new progressPart_1.ProgressPart(connection, token);\n            initParams.workDoneToken = token;\n            return this.doInitialize(connection, initParams).then((result) => {\n                part.done();\n                return result;\n            }, (error) => {\n                part.cancel();\n                throw error;\n            });\n        }\n        else {\n            return this.doInitialize(connection, initParams);\n        }\n    }\n    doInitialize(connection, initParams) {\n        return connection.initialize(initParams).then((result) => {\n            this._resolvedConnection = connection;\n            this._initializeResult = result;\n            this.state = ClientState.Running;\n            let textDocumentSyncOptions = undefined;\n            if (Is.number(result.capabilities.textDocumentSync)) {\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n                    textDocumentSyncOptions = {\n                        openClose: false,\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\n                        save: undefined\n                    };\n                }\n                else {\n                    textDocumentSyncOptions = {\n                        openClose: true,\n                        change: result.capabilities.textDocumentSync,\n                        save: {\n                            includeText: false\n                        }\n                    };\n                }\n            }\n            else if (result.capabilities.textDocumentSync !== undefined && result.capabilities.textDocumentSync !== null) {\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\n            }\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\n            connection.onDiagnostics(params => this.handleDiagnostics(params));\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\n            this.hookFileEvents(connection);\n            this.hookConfigurationChanged(connection);\n            this.initializeFeatures(connection);\n            this._onReadyCallbacks.resolve();\n            return result;\n        }).then(undefined, (error) => {\n            if (this._clientOptions.initializationFailedHandler) {\n                if (this._clientOptions.initializationFailedHandler(error)) {\n                    this.initialize(connection);\n                }\n                else {\n                    this.stop();\n                    this._onReadyCallbacks.reject(error);\n                }\n            }\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: 'retry' }).then(item => {\n                    if (item && item.id === 'retry') {\n                        this.initialize(connection);\n                    }\n                    else {\n                        this.stop();\n                        this._onReadyCallbacks.reject(error);\n                    }\n                });\n            }\n            else {\n                if (error && error.message) {\n                    vscode_1.window.showErrorMessage(error.message);\n                }\n                this.error('Server initialization failed.', error);\n                this.stop();\n                this._onReadyCallbacks.reject(error);\n            }\n            throw error;\n        });\n    }\n    _clientGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    stop() {\n        this._initializeResult = undefined;\n        if (!this._connectionPromise) {\n            this.state = ClientState.Stopped;\n            return Promise.resolve();\n        }\n        if (this.state === ClientState.Stopping && this._onStop) {\n            return this._onStop;\n        }\n        this.state = ClientState.Stopping;\n        this.cleanUp(false);\n        // unhook listeners\n        return this._onStop = this.resolveConnection().then(connection => {\n            return connection.shutdown().then(() => {\n                connection.exit();\n                connection.end();\n                connection.dispose();\n                this.state = ClientState.Stopped;\n                this.cleanUpChannel();\n                this._onStop = undefined;\n                this._connectionPromise = undefined;\n                this._resolvedConnection = undefined;\n            });\n        });\n    }\n    cleanUp(channel = true, diagnostics = true) {\n        if (this._listeners) {\n            this._listeners.forEach(listener => listener.dispose());\n            this._listeners = undefined;\n        }\n        if (this._providers) {\n            this._providers.forEach(provider => provider.dispose());\n            this._providers = undefined;\n        }\n        if (this._syncedDocuments) {\n            this._syncedDocuments.clear();\n        }\n        for (const feature of this._features.values()) {\n            feature.dispose();\n        }\n        if (channel) {\n            this.cleanUpChannel();\n        }\n        if (diagnostics && this._diagnostics) {\n            this._diagnostics.dispose();\n            this._diagnostics = undefined;\n        }\n    }\n    cleanUpChannel() {\n        if (this._outputChannel && this._disposeOutputChannel) {\n            this._outputChannel.dispose();\n            this._outputChannel = undefined;\n        }\n    }\n    notifyFileEvent(event) {\n        var _a;\n        const client = this;\n        function didChangeWatchedFile(event) {\n            client._fileEvents.push(event);\n            client._fileEventDelayer.trigger(() => {\n                client.onReady().then(() => {\n                    client.resolveConnection().then(connection => {\n                        if (client.isConnectionActive()) {\n                            client.forceDocumentSync();\n                            connection.didChangeWatchedFiles({ changes: client._fileEvents });\n                        }\n                        client._fileEvents = [];\n                    });\n                }, (error) => {\n                    client.error(`Notify file events failed.`, error);\n                });\n            });\n        }\n        const workSpaceMiddleware = (_a = this.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        (workSpaceMiddleware === null || workSpaceMiddleware === void 0 ? void 0 : workSpaceMiddleware.didChangeWatchedFile) ? workSpaceMiddleware.didChangeWatchedFile(event, didChangeWatchedFile) : didChangeWatchedFile(event);\n    }\n    forceDocumentSync() {\n        if (this._didChangeTextDocumentFeature === undefined) {\n            this._didChangeTextDocumentFeature = this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method);\n        }\n        this._didChangeTextDocumentFeature.forceDelivery();\n    }\n    handleDiagnostics(params) {\n        if (!this._diagnostics) {\n            return;\n        }\n        let uri = this._p2c.asUri(params.uri);\n        let diagnostics = this._p2c.asDiagnostics(params.diagnostics);\n        let middleware = this.clientOptions.middleware;\n        if (middleware.handleDiagnostics) {\n            middleware.handleDiagnostics(uri, diagnostics, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\n        }\n        else {\n            this.setDiagnostics(uri, diagnostics);\n        }\n    }\n    setDiagnostics(uri, diagnostics) {\n        if (!this._diagnostics) {\n            return;\n        }\n        this._diagnostics.set(uri, diagnostics);\n    }\n    createConnection() {\n        let errorHandler = (error, message, count) => {\n            this.handleConnectionError(error, message, count);\n        };\n        let closeHandler = () => {\n            this.handleConnectionClosed();\n        };\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then((transports) => {\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler, this._clientOptions.connectionOptions);\n        });\n    }\n    handleConnectionClosed() {\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\n            return;\n        }\n        try {\n            if (this._resolvedConnection) {\n                this._resolvedConnection.dispose();\n            }\n        }\n        catch (error) {\n            // Disposing a connection could fail if error cases.\n        }\n        let action = CloseAction.DoNotRestart;\n        try {\n            action = this._clientOptions.errorHandler.closed();\n        }\n        catch (error) {\n            // Ignore errors coming from the error handler.\n        }\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        if (action === CloseAction.DoNotRestart) {\n            this.error('Connection to server got closed. Server will not be restarted.');\n            if (this.state === ClientState.Starting) {\n                this._onReadyCallbacks.reject(new Error(`Connection to server got closed. Server will not be restarted.`));\n                this.state = ClientState.StartFailed;\n            }\n            else {\n                this.state = ClientState.Stopped;\n            }\n            this.cleanUp(false, true);\n        }\n        else if (action === CloseAction.Restart) {\n            this.info('Connection to server got closed. Server will restart.');\n            this.cleanUp(false, false);\n            this.state = ClientState.Initial;\n            this.start();\n        }\n    }\n    handleConnectionError(error, message, count) {\n        let action = this._clientOptions.errorHandler.error(error, message, count);\n        if (action === ErrorAction.Shutdown) {\n            this.error('Connection to server is erroring. Shutting down server.');\n            this.stop();\n        }\n    }\n    hookConfigurationChanged(connection) {\n        vscode_1.workspace.onDidChangeConfiguration(() => {\n            this.refreshTrace(connection, true);\n        });\n    }\n    refreshTrace(connection, sendNotification = false) {\n        let config = vscode_1.workspace.getConfiguration(this._id);\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        if (config) {\n            const traceConfig = config.get('trace.server', 'off');\n            if (typeof traceConfig === 'string') {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\n            }\n            else {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\n            }\n        }\n        this._trace = trace;\n        this._traceFormat = traceFormat;\n        connection.trace(this._trace, this._tracer, {\n            sendNotification,\n            traceFormat: this._traceFormat\n        });\n    }\n    hookFileEvents(_connection) {\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\n        if (!fileEvents) {\n            return;\n        }\n        let watchers;\n        if (Is.array(fileEvents)) {\n            watchers = fileEvents;\n        }\n        else {\n            watchers = [fileEvents];\n        }\n        if (!watchers) {\n            return;\n        }\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\n    }\n    registerFeatures(features) {\n        for (let feature of features) {\n            this.registerFeature(feature);\n        }\n    }\n    registerFeature(feature) {\n        this._features.push(feature);\n        if (DynamicFeature.is(feature)) {\n            const registrationType = feature.registrationType;\n            this._dynamicFeatures.set(registrationType.method, feature);\n        }\n    }\n    getFeature(request) {\n        return this._dynamicFeatures.get(request);\n    }\n    registerBuiltinFeatures() {\n        this.registerFeature(new ConfigurationFeature(this));\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\n        this.registerFeature(new WillSaveFeature(this));\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\n        this.registerFeature(new CompletionItemFeature(this));\n        this.registerFeature(new HoverFeature(this));\n        this.registerFeature(new SignatureHelpFeature(this));\n        this.registerFeature(new DefinitionFeature(this));\n        this.registerFeature(new ReferencesFeature(this));\n        this.registerFeature(new DocumentHighlightFeature(this));\n        this.registerFeature(new DocumentSymbolFeature(this));\n        this.registerFeature(new WorkspaceSymbolFeature(this));\n        this.registerFeature(new CodeActionFeature(this));\n        this.registerFeature(new CodeLensFeature(this));\n        this.registerFeature(new DocumentFormattingFeature(this));\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\n        this.registerFeature(new RenameFeature(this));\n        this.registerFeature(new DocumentLinkFeature(this));\n        this.registerFeature(new ExecuteCommandFeature(this));\n    }\n    fillInitializeParams(params) {\n        for (let feature of this._features) {\n            if (Is.func(feature.fillInitializeParams)) {\n                feature.fillInitializeParams(params);\n            }\n        }\n    }\n    computeClientCapabilities() {\n        const result = {};\n        ensure(result, 'workspace').applyEdit = true;\n        const workspaceEdit = ensure(ensure(result, 'workspace'), 'workspaceEdit');\n        workspaceEdit.documentChanges = true;\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\n        workspaceEdit.normalizesLineEndings = true;\n        workspaceEdit.changeAnnotationSupport = {\n            groupsOnLabel: true\n        };\n        const diagnostics = ensure(ensure(result, 'textDocument'), 'publishDiagnostics');\n        diagnostics.relatedInformation = true;\n        diagnostics.versionSupport = false;\n        diagnostics.tagSupport = { valueSet: [vscode_languageserver_protocol_1.DiagnosticTag.Unnecessary, vscode_languageserver_protocol_1.DiagnosticTag.Deprecated] };\n        diagnostics.codeDescriptionSupport = true;\n        diagnostics.dataSupport = true;\n        const windowCapabilities = ensure(result, 'window');\n        const showMessage = ensure(windowCapabilities, 'showMessage');\n        showMessage.messageActionItem = { additionalPropertiesSupport: true };\n        const showDocument = ensure(windowCapabilities, 'showDocument');\n        showDocument.support = true;\n        const generalCapabilities = ensure(result, 'general');\n        generalCapabilities.regularExpressions = { engine: 'ECMAScript', version: 'ES2020' };\n        generalCapabilities.markdown = { parser: 'marked', version: '1.1.0' };\n        for (let feature of this._features) {\n            feature.fillClientCapabilities(result);\n        }\n        return result;\n    }\n    initializeFeatures(_connection) {\n        let documentSelector = this._clientOptions.documentSelector;\n        for (let feature of this._features) {\n            feature.initialize(this._capabilities, documentSelector);\n        }\n    }\n    handleRegistrationRequest(params) {\n        return new Promise((resolve, reject) => {\n            for (const registration of params.registrations) {\n                const feature = this._dynamicFeatures.get(registration.method);\n                if (feature === undefined) {\n                    reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\n                    return;\n                }\n                const options = registration.registerOptions || {};\n                options.documentSelector = options.documentSelector || this._clientOptions.documentSelector;\n                const data = {\n                    id: registration.id,\n                    registerOptions: options\n                };\n                try {\n                    feature.register(data);\n                }\n                catch (err) {\n                    reject(err);\n                    return;\n                }\n            }\n            resolve();\n        });\n    }\n    handleUnregistrationRequest(params) {\n        return new Promise((resolve, reject) => {\n            for (let unregistration of params.unregisterations) {\n                const feature = this._dynamicFeatures.get(unregistration.method);\n                if (!feature) {\n                    reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\n                    return;\n                }\n                feature.unregister(unregistration.id);\n            }\n            resolve();\n        });\n    }\n    handleApplyWorkspaceEdit(params) {\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\n        // However doing it here adds some safety since the server can lag more behind then an extension.\n        let workspaceEdit = params.edit;\n        let openTextDocuments = new Map();\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\n        let versionMismatch = false;\n        if (workspaceEdit.documentChanges) {\n            for (const change of workspaceEdit.documentChanges) {\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\n                    let textDocument = openTextDocuments.get(change.textDocument.uri);\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\n                        versionMismatch = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (versionMismatch) {\n            return Promise.resolve({ applied: false });\n        }\n        return Is.asPromise(vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then((value) => { return { applied: value }; }));\n    }\n    handleFailedRequest(type, error, defaultValue) {\n        // If we get a request cancel or a content modified don't log anything.\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError) {\n            if (error.code === vscode_languageserver_protocol_1.LSPErrorCodes.RequestCancelled) {\n                throw this.makeCancelError();\n            }\n            else if (error.code === vscode_languageserver_protocol_1.LSPErrorCodes.ContentModified) {\n                return defaultValue;\n            }\n        }\n        this.error(`Request ${type.method} failed.`, error);\n        throw error;\n    }\n    makeCancelError() {\n        const result = new Error(BaseLanguageClient.Canceled);\n        result.name = BaseLanguageClient.Canceled;\n        return result;\n    }\n}\nexports.BaseLanguageClient = BaseLanguageClient;\nBaseLanguageClient.Canceled = 'Canceled';\n//# sourceMappingURL=client.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar InsertReplaceRange;\n(function (InsertReplaceRange) {\n    function is(value) {\n        const candidate = value;\n        return candidate && !!candidate.inserting && !!candidate.replacing;\n    }\n    InsertReplaceRange.is = is;\n})(InsertReplaceRange || (InsertReplaceRange = {}));\nfunction createConverter(uriConverter) {\n    const nullConverter = (value) => value.toString();\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri)\n        };\n    }\n    function asVersionedTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri),\n            version: textDocument.version\n        };\n    }\n    function asOpenTextDocumentParams(textDocument) {\n        return {\n            textDocument: {\n                uri: _uriConverter(textDocument.uri),\n                languageId: textDocument.languageId,\n                version: textDocument.version,\n                text: textDocument.getText()\n            }\n        };\n    }\n    function isTextDocumentChangeEvent(value) {\n        let candidate = value;\n        return !!candidate.document && !!candidate.contentChanges;\n    }\n    function isTextDocument(value) {\n        let candidate = value;\n        return !!candidate.uri && !!candidate.version;\n    }\n    function asChangeTextDocumentParams(arg) {\n        if (isTextDocument(arg)) {\n            let result = {\n                textDocument: {\n                    uri: _uriConverter(arg.uri),\n                    version: arg.version\n                },\n                contentChanges: [{ text: arg.getText() }]\n            };\n            return result;\n        }\n        else if (isTextDocumentChangeEvent(arg)) {\n            let document = arg.document;\n            let result = {\n                textDocument: {\n                    uri: _uriConverter(document.uri),\n                    version: document.version\n                },\n                contentChanges: arg.contentChanges.map((change) => {\n                    let range = change.range;\n                    return {\n                        range: {\n                            start: { line: range.start.line, character: range.start.character },\n                            end: { line: range.end.line, character: range.end.character }\n                        },\n                        rangeLength: change.rangeLength,\n                        text: change.text\n                    };\n                })\n            };\n            return result;\n        }\n        else {\n            throw Error('Unsupported text document change parameter');\n        }\n    }\n    function asCloseTextDocumentParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\n        let result = {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n        if (includeContent) {\n            result.text = textDocument.getText();\n        }\n        return result;\n    }\n    function asTextDocumentSaveReason(reason) {\n        switch (reason) {\n            case code.TextDocumentSaveReason.Manual:\n                return proto.TextDocumentSaveReason.Manual;\n            case code.TextDocumentSaveReason.AfterDelay:\n                return proto.TextDocumentSaveReason.AfterDelay;\n            case code.TextDocumentSaveReason.FocusOut:\n                return proto.TextDocumentSaveReason.FocusOut;\n        }\n        return proto.TextDocumentSaveReason.Manual;\n    }\n    function asWillSaveTextDocumentParams(event) {\n        return {\n            textDocument: asTextDocumentIdentifier(event.document),\n            reason: asTextDocumentSaveReason(event.reason)\n        };\n    }\n    function asDidCreateFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asDidRenameFilesParams(event) {\n        return {\n            files: event.files.map((file) => ({\n                oldUri: _uriConverter(file.oldUri),\n                newUri: _uriConverter(file.newUri),\n            })),\n        };\n    }\n    function asDidDeleteFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asWillCreateFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asWillRenameFilesParams(event) {\n        return {\n            files: event.files.map((file) => ({\n                oldUri: _uriConverter(file.oldUri),\n                newUri: _uriConverter(file.newUri),\n            })),\n        };\n    }\n    function asWillDeleteFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asTextDocumentPositionParams(textDocument, position) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position)\n        };\n    }\n    function asCompletionTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.CompletionTriggerKind.TriggerCharacter:\n                return proto.CompletionTriggerKind.TriggerCharacter;\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\n            default:\n                return proto.CompletionTriggerKind.Invoked;\n        }\n    }\n    function asCompletionParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                triggerKind: asCompletionTriggerKind(context.triggerKind),\n                triggerCharacter: context.triggerCharacter\n            }\n        };\n    }\n    function asSignatureHelpTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.SignatureHelpTriggerKind.Invoke:\n                return proto.SignatureHelpTriggerKind.Invoked;\n            case code.SignatureHelpTriggerKind.TriggerCharacter:\n                return proto.SignatureHelpTriggerKind.TriggerCharacter;\n            case code.SignatureHelpTriggerKind.ContentChange:\n                return proto.SignatureHelpTriggerKind.ContentChange;\n        }\n    }\n    function asParameterInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label\n        };\n    }\n    function asParameterInformations(values) {\n        return values.map(asParameterInformation);\n    }\n    function asSignatureInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label,\n            parameters: asParameterInformations(value.parameters)\n        };\n    }\n    function asSignatureInformations(values) {\n        return values.map(asSignatureInformation);\n    }\n    function asSignatureHelp(value) {\n        if (value === undefined) {\n            return value;\n        }\n        return {\n            signatures: asSignatureInformations(value.signatures),\n            activeSignature: value.activeSignature,\n            activeParameter: value.activeParameter\n        };\n    }\n    function asSignatureHelpParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                isRetrigger: context.isRetrigger,\n                triggerCharacter: context.triggerCharacter,\n                triggerKind: asSignatureHelpTriggerKind(context.triggerKind),\n                activeSignatureHelp: asSignatureHelp(context.activeSignatureHelp)\n            }\n        };\n    }\n    function asWorkerPosition(position) {\n        return { line: position.line, character: position.character };\n    }\n    function asPosition(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return { line: value.line, character: value.character };\n    }\n    function asPositions(value) {\n        let result = [];\n        for (let elem of value) {\n            result.push(asPosition(elem));\n        }\n        return result;\n    }\n    function asRange(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return { start: asPosition(value.start), end: asPosition(value.end) };\n    }\n    function asLocation(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return proto.Location.create(asUri(value.uri), asRange(value.range));\n    }\n    function asDiagnosticSeverity(value) {\n        switch (value) {\n            case code.DiagnosticSeverity.Error:\n                return proto.DiagnosticSeverity.Error;\n            case code.DiagnosticSeverity.Warning:\n                return proto.DiagnosticSeverity.Warning;\n            case code.DiagnosticSeverity.Information:\n                return proto.DiagnosticSeverity.Information;\n            case code.DiagnosticSeverity.Hint:\n                return proto.DiagnosticSeverity.Hint;\n        }\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case code.DiagnosticTag.Unnecessary:\n                return proto.DiagnosticTag.Unnecessary;\n            case code.DiagnosticTag.Deprecated:\n                return proto.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asRelatedInformation(item) {\n        return {\n            message: item.message,\n            location: asLocation(item.location)\n        };\n    }\n    function asRelatedInformations(items) {\n        return items.map(asRelatedInformation);\n    }\n    function asDiagnosticCode(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        if (Is.number(value) || Is.string(value)) {\n            return value;\n        }\n        return { value: value.value, target: asUri(value.target) };\n    }\n    function asDiagnostic(item) {\n        const result = proto.Diagnostic.create(asRange(item.range), item.message);\n        const protocolDiagnostic = item instanceof protocolDiagnostic_1.ProtocolDiagnostic ? item : undefined;\n        if (protocolDiagnostic !== undefined && protocolDiagnostic.data !== undefined) {\n            result.data = protocolDiagnostic.data;\n        }\n        const code = asDiagnosticCode(item.code);\n        if (protocolDiagnostic_1.DiagnosticCode.is(code)) {\n            if (protocolDiagnostic !== undefined && protocolDiagnostic.hasDiagnosticCode) {\n                result.code = code;\n            }\n            else {\n                result.code = code.value;\n                result.codeDescription = { href: code.target };\n            }\n        }\n        else {\n            result.code = code;\n        }\n        if (Is.number(item.severity)) {\n            result.severity = asDiagnosticSeverity(item.severity);\n        }\n        if (Array.isArray(item.tags)) {\n            result.tags = asDiagnosticTags(item.tags);\n        }\n        if (item.relatedInformation) {\n            result.relatedInformation = asRelatedInformations(item.relatedInformation);\n        }\n        if (item.source) {\n            result.source = item.source;\n        }\n        return result;\n    }\n    function asDiagnostics(items) {\n        if (items === undefined || items === null) {\n            return items;\n        }\n        return items.map(asDiagnostic);\n    }\n    function asDocumentation(format, documentation) {\n        switch (format) {\n            case '$string':\n                return documentation;\n            case proto.MarkupKind.PlainText:\n                return { kind: format, value: documentation };\n            case proto.MarkupKind.Markdown:\n                return { kind: format, value: documentation.value };\n            default:\n                return `Unsupported Markup content received. Kind is: ${format}`;\n        }\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case code.CompletionItemTag.Deprecated:\n                return proto.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined) {\n            return tags;\n        }\n        const result = [];\n        for (let tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItemKind(value, original) {\n        if (original !== undefined) {\n            return original;\n        }\n        return value + 1;\n    }\n    function asCompletionItem(item) {\n        let result = { label: item.label };\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        // We only send items back we created. So this can't be something else than\n        // a string right now.\n        if (item.documentation) {\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\n                result.documentation = item.documentation;\n            }\n            else {\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\n            }\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        fillPrimaryInsertText(result, item);\n        if (Is.number(item.kind)) {\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (item.commitCharacters) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        const tags = asCompletionItemTags(item.tags);\n        if (protocolItem) {\n            if (protocolItem.data !== undefined) {\n                result.data = protocolItem.data;\n            }\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\n                if (protocolItem.deprecated === true && tags !== undefined && tags.length > 0) {\n                    const index = tags.indexOf(code.CompletionItemTag.Deprecated);\n                    if (index !== -1) {\n                        tags.splice(index, 1);\n                    }\n                }\n                result.deprecated = protocolItem.deprecated;\n            }\n            if (protocolItem.insertTextMode !== undefined) {\n                result.insertTextMode = protocolItem.insertTextMode;\n            }\n        }\n        if (tags !== undefined && tags.length > 0) {\n            result.tags = tags;\n        }\n        if (result.insertTextMode === undefined && item.keepWhitespace === true) {\n            result.insertTextMode = vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation;\n        }\n        return result;\n    }\n    function fillPrimaryInsertText(target, source) {\n        let format = proto.InsertTextFormat.PlainText;\n        let text = undefined;\n        let range = undefined;\n        if (source.textEdit) {\n            text = source.textEdit.newText;\n            range = source.textEdit.range;\n        }\n        else if (source.insertText instanceof code.SnippetString) {\n            format = proto.InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        else {\n            text = source.insertText;\n        }\n        if (source.range) {\n            range = source.range;\n        }\n        target.insertTextFormat = format;\n        if (source.fromEdit && text !== undefined && range !== undefined) {\n            target.textEdit = asCompletionTextEdit(text, range);\n        }\n        else {\n            target.insertText = text;\n        }\n    }\n    function asCompletionTextEdit(newText, range) {\n        if (InsertReplaceRange.is(range)) {\n            return proto.InsertReplaceEdit.create(newText, asRange(range.inserting), asRange(range.replacing));\n        }\n        else {\n            return { newText, range: asRange(range) };\n        }\n    }\n    function asTextEdit(edit) {\n        return { range: asRange(edit.range), newText: edit.newText };\n    }\n    function asTextEdits(edits) {\n        if (edits === undefined || edits === null) {\n            return edits;\n        }\n        return edits.map(asTextEdit);\n    }\n    function asSymbolKind(item) {\n        if (item <= code.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return (item + 1);\n        }\n        return proto.SymbolKind.Property;\n    }\n    function asSymbolTag(item) {\n        return item;\n    }\n    function asSymbolTags(items) {\n        return items.map(asSymbolTag);\n    }\n    function asReferenceParams(textDocument, position, options) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    }\n    function asCodeAction(item) {\n        let result = proto.CodeAction.create(item.title);\n        if (item instanceof protocolCodeAction_1.default && item.data !== undefined) {\n            result.data = item.data;\n        }\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = asDiagnostics(item.diagnostics);\n        }\n        if (item.edit !== undefined) {\n            throw new Error(`VS Code code actions can only be converted to a protocol code action without an edit.`);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    function asCodeActionContext(context) {\n        if (context === undefined || context === null) {\n            return context;\n        }\n        let only;\n        if (context.only && Is.string(context.only.value)) {\n            only = [context.only.value];\n        }\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), only);\n    }\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        return item.value;\n    }\n    function asCommand(item) {\n        let result = proto.Command.create(item.title, item.command);\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        let result = proto.CodeLens.create(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item instanceof protocolCodeLens_1.default) {\n            if (item.data) {\n                result.data = item.data;\n            }\n        }\n        return result;\n    }\n    function asFormattingOptions(options, fileOptions) {\n        const result = { tabSize: options.tabSize, insertSpaces: options.insertSpaces };\n        if (fileOptions.trimTrailingWhitespace) {\n            result.trimTrailingWhitespace = true;\n        }\n        if (fileOptions.trimFinalNewlines) {\n            result.trimFinalNewlines = true;\n        }\n        if (fileOptions.insertFinalNewline) {\n            result.insertFinalNewline = true;\n        }\n        return result;\n    }\n    function asDocumentSymbolParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCodeLensParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asDocumentLink(item) {\n        let result = proto.DocumentLink.create(asRange(item.range));\n        if (item.target) {\n            result.target = asUri(item.target);\n        }\n        if (item.tooltip !== undefined) {\n            result.tooltip = item.tooltip;\n        }\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\n        if (protocolItem && protocolItem.data) {\n            result.data = protocolItem.data;\n        }\n        return result;\n    }\n    function asDocumentLinkParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCallHierarchyItem(value) {\n        const result = {\n            name: value.name,\n            kind: asSymbolKind(value.kind),\n            uri: asUri(value.uri),\n            range: asRange(value.range),\n            selectionRange: asRange(value.selectionRange)\n        };\n        if (value.detail !== undefined && value.detail.length > 0) {\n            result.detail = value.detail;\n        }\n        if (value.tags !== undefined) {\n            result.tags = asSymbolTags(value.tags);\n        }\n        if (value instanceof protocolCallHierarchyItem_1.default && value.data !== undefined) {\n            result.data = value.data;\n        }\n        return result;\n    }\n    return {\n        asUri,\n        asTextDocumentIdentifier,\n        asVersionedTextDocumentIdentifier,\n        asOpenTextDocumentParams,\n        asChangeTextDocumentParams,\n        asCloseTextDocumentParams,\n        asSaveTextDocumentParams,\n        asWillSaveTextDocumentParams,\n        asDidCreateFilesParams,\n        asDidRenameFilesParams,\n        asDidDeleteFilesParams,\n        asWillCreateFilesParams,\n        asWillRenameFilesParams,\n        asWillDeleteFilesParams,\n        asTextDocumentPositionParams,\n        asCompletionParams,\n        asSignatureHelpParams,\n        asWorkerPosition,\n        asRange,\n        asPosition,\n        asPositions,\n        asLocation,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asDiagnostic,\n        asDiagnostics,\n        asCompletionItem,\n        asTextEdit,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asReferenceParams,\n        asCodeAction,\n        asCodeActionContext,\n        asCommand,\n        asCodeLens,\n        asFormattingOptions,\n        asDocumentSymbolParams,\n        asCodeLensParams,\n        asDocumentLink,\n        asDocumentLinkParams,\n        asCallHierarchyItem\n    };\n}\nexports.createConverter = createConverter;\n//# sourceMappingURL=codeConverter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorProviderFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass ColorProviderFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'colorProvider').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.colorProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideColorPresentations: (color, context, token) => {\n                const client = this._client;\n                const provideColorPresentations = (color, context, token) => {\n                    const requestParams = {\n                        color,\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\n                        range: client.code2ProtocolConverter.asRange(context.range)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(this.asColorPresentations.bind(this), (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideColorPresentations\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\n                    : provideColorPresentations(color, context, token);\n            },\n            provideDocumentColors: (document, token) => {\n                const client = this._client;\n                const provideDocumentColors = (document, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(this.asColorInformations.bind(this), (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDocumentColors\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\n                    : provideDocumentColors(document, token);\n            }\n        };\n        return [vscode_1.languages.registerColorProvider(options.documentSelector, provider), provider];\n    }\n    asColor(color) {\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    asColorInformations(colorInformation) {\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(ci => {\n                return new vscode_1.ColorInformation(this._client.protocol2CodeConverter.asRange(ci.range), this.asColor(ci.color));\n            });\n        }\n        return [];\n    }\n    asColorPresentations(colorPresentations) {\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(cp => {\n                let presentation = new vscode_1.ColorPresentation(cp.label);\n                presentation.additionalTextEdits = this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\n                presentation.textEdit = this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\n                return presentation;\n            });\n        }\n        return [];\n    }\n}\nexports.ColorProviderFeature = ColorProviderFeature;\n//# sourceMappingURL=colorProvider.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProposedFeatures = exports.CommonLanguageClient = void 0;\nconst client_1 = require(\"./client\");\nconst colorProvider_1 = require(\"./colorProvider\");\nconst configuration_1 = require(\"./configuration\");\nconst implementation_1 = require(\"./implementation\");\nconst typeDefinition_1 = require(\"./typeDefinition\");\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\nconst foldingRange_1 = require(\"./foldingRange\");\nconst declaration_1 = require(\"./declaration\");\nconst selectionRange_1 = require(\"./selectionRange\");\nconst progress_1 = require(\"./progress\");\nconst callHierarchy_1 = require(\"./callHierarchy\");\nconst semanticTokens_1 = require(\"./semanticTokens\");\nconst fileOperations_1 = require(\"./fileOperations\");\nconst linkedEditingRange_1 = require(\"./linkedEditingRange\");\nclass CommonLanguageClient extends client_1.BaseLanguageClient {\n    constructor(id, name, clientOptions) {\n        super(id, name, clientOptions);\n    }\n    registerProposedFeatures() {\n        this.registerFeatures(ProposedFeatures.createAll(this));\n    }\n    registerBuiltinFeatures() {\n        super.registerBuiltinFeatures();\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\n        this.registerFeature(new workspaceFolders_1.WorkspaceFoldersFeature(this));\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\n        this.registerFeature(new selectionRange_1.SelectionRangeFeature(this));\n        this.registerFeature(new progress_1.ProgressFeature(this));\n        this.registerFeature(new callHierarchy_1.CallHierarchyFeature(this));\n        this.registerFeature(new semanticTokens_1.SemanticTokensFeature(this));\n        this.registerFeature(new linkedEditingRange_1.LinkedEditingFeature(this));\n        this.registerFeature(new fileOperations_1.DidCreateFilesFeature(this));\n        this.registerFeature(new fileOperations_1.DidRenameFilesFeature(this));\n        this.registerFeature(new fileOperations_1.DidDeleteFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillCreateFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillRenameFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillDeleteFilesFeature(this));\n    }\n}\nexports.CommonLanguageClient = CommonLanguageClient;\n// Exporting proposed protocol.\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    function createAll(_client) {\n        let result = [];\n        return result;\n    }\n    ProposedFeatures.createAll = createAll;\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\n//# sourceMappingURL=commonClient.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toJSONObject = exports.ConfigurationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nclass ConfigurationFeature {\n    constructor(_client) {\n        this._client = _client;\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.configuration = true;\n    }\n    initialize() {\n        let client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\n            let configuration = (params) => {\n                let result = [];\n                for (let item of params.items) {\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\n                }\n                return result;\n            };\n            let middleware = client.clientOptions.middleware.workspace;\n            return middleware && middleware.configuration\n                ? middleware.configuration(params, token, configuration)\n                : configuration(params, token);\n        });\n    }\n    getConfiguration(resource, section) {\n        let result = null;\n        if (section) {\n            let index = section.lastIndexOf('.');\n            if (index === -1) {\n                result = toJSONObject(vscode_1.workspace.getConfiguration(undefined, resource).get(section));\n            }\n            else {\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index), resource);\n                if (config) {\n                    result = toJSONObject(config.get(section.substr(index + 1)));\n                }\n            }\n        }\n        else {\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\n            result = {};\n            for (let key of Object.keys(config)) {\n                if (config.has(key)) {\n                    result[key] = toJSONObject(config.get(key));\n                }\n            }\n        }\n        if (result === undefined) {\n            result = null;\n        }\n        return result;\n    }\n    dispose() {\n    }\n}\nexports.ConfigurationFeature = ConfigurationFeature;\nfunction toJSONObject(obj) {\n    if (obj) {\n        if (Array.isArray(obj)) {\n            return obj.map(toJSONObject);\n        }\n        else if (typeof obj === 'object') {\n            const res = Object.create(null);\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    res[key] = toJSONObject(obj[key]);\n                }\n            }\n            return res;\n        }\n    }\n    return obj;\n}\nexports.toJSONObject = toJSONObject;\n//# sourceMappingURL=configuration.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass DeclarationFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const declarationSupport = ensure(ensure(capabilities, 'textDocument'), 'declaration');\n        declarationSupport.dynamicRegistration = true;\n        declarationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.declarationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideDeclaration: (document, position, token) => {\n                const client = this._client;\n                const provideDeclaration = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDeclarationResult, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideDeclaration\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\n                    : provideDeclaration(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDeclarationProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.DeclarationFeature = DeclarationFeature;\n//# sourceMappingURL=declaration.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesFeature = exports.WillRenameFilesFeature = exports.WillCreateFilesFeature = exports.DidDeleteFilesFeature = exports.DidRenameFilesFeature = exports.DidCreateFilesFeature = void 0;\nconst code = require(\"vscode\");\nconst minimatch = require(\"minimatch\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nfunction access(target, key) {\n    return target[key];\n}\nfunction assign(target, key, value) {\n    target[key] = value;\n}\nclass FileOperationFeature {\n    constructor(client, event, registrationType, clientCapability, serverCapability) {\n        this._filters = new Map();\n        this._client = client;\n        this._event = event;\n        this._registrationType = registrationType;\n        this._clientCapability = clientCapability;\n        this._serverCapability = serverCapability;\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    fillClientCapabilities(capabilities) {\n        const value = ensure(ensure(capabilities, 'workspace'), 'fileOperations');\n        // this happens n times but it is the same value so we tolerate this.\n        assign(value, 'dynamicRegistration', true);\n        assign(value, this._clientCapability, true);\n    }\n    initialize(capabilities) {\n        var _a;\n        const options = (_a = capabilities.workspace) === null || _a === void 0 ? void 0 : _a.fileOperations;\n        const capability = options !== undefined ? access(options, this._serverCapability) : undefined;\n        if ((capability === null || capability === void 0 ? void 0 : capability.filters) !== undefined) {\n            try {\n                this.register({\n                    id: UUID.generateUuid(),\n                    registerOptions: { filters: capability.filters }\n                });\n            }\n            catch (e) {\n                this._client.warn(`Ignoring invalid glob pattern for ${this._serverCapability} registration: ${e}`);\n            }\n        }\n    }\n    register(data) {\n        if (!this._listener) {\n            this._listener = this._event(this.send, this);\n        }\n        const minimatchFilter = data.registerOptions.filters.map((filter) => {\n            const matcher = new minimatch.Minimatch(filter.pattern.glob, FileOperationFeature.asMinimatchOptions(filter.pattern.options));\n            if (!matcher.makeRe()) {\n                throw new Error(`Invalid pattern ${filter.pattern.glob}!`);\n            }\n            return { scheme: filter.scheme, matcher, kind: filter.pattern.matches };\n        });\n        this._filters.set(data.id, minimatchFilter);\n    }\n    unregister(id) {\n        this._filters.delete(id);\n        if (this._filters.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    dispose() {\n        this._filters.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    async filter(event, prop) {\n        // (Asynchronously) map each file onto a boolean of whether it matches\n        // any of the globs.\n        const fileMatches = await Promise.all(event.files.map(async (item) => {\n            const uri = prop(item);\n            // Use fsPath to make this consistent with file system watchers but help\n            // minimatch to use '/' instead of `\\\\` if present.\n            const path = uri.fsPath.replace(/\\\\/g, '/');\n            for (const filters of this._filters.values()) {\n                for (const filter of filters) {\n                    if (filter.scheme !== undefined && filter.scheme !== uri.scheme) {\n                        continue;\n                    }\n                    if (filter.matcher.match(path)) {\n                        // The pattern matches. If kind is undefined then everything is ok\n                        if (filter.kind === undefined) {\n                            return true;\n                        }\n                        const fileType = await FileOperationFeature.getFileType(uri);\n                        // If we can't determine the file type than we treat it as a match.\n                        // Dropping it would be another alternative.\n                        if (fileType === undefined) {\n                            this._client.error(`Failed to determine file type for ${uri.toString()}.`);\n                            return true;\n                        }\n                        if ((fileType === code.FileType.File && filter.kind === proto.FileOperationPatternKind.file) || (fileType === code.FileType.Directory && filter.kind === proto.FileOperationPatternKind.folder)) {\n                            return true;\n                        }\n                    }\n                    else if (filter.kind === proto.FileOperationPatternKind.folder) {\n                        const fileType = await FileOperationFeature.getFileType(uri);\n                        if (fileType === code.FileType.Directory && filter.matcher.match(`${path}/`)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }));\n        // Filter the files to those that matched.\n        const files = event.files.filter((_, index) => fileMatches[index]);\n        return Object.assign(Object.assign({}, event), { files });\n    }\n    static async getFileType(uri) {\n        try {\n            return (await code.workspace.fs.stat(uri)).type;\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    static asMinimatchOptions(options) {\n        if (options === undefined) {\n            return undefined;\n        }\n        if (options.ignoreCase === true) {\n            return { nocase: true };\n        }\n        return undefined;\n    }\n}\nclass NotificationFileOperationFeature extends FileOperationFeature {\n    constructor(client, event, notificationType, clientCapability, serverCapability, accessUri, createParams) {\n        super(client, event, notificationType, clientCapability, serverCapability);\n        this._notificationType = notificationType;\n        this._accessUri = accessUri;\n        this._createParams = createParams;\n    }\n    async send(originalEvent) {\n        // Create a copy of the event that has the files filtered to match what the\n        // server wants.\n        const filteredEvent = await this.filter(originalEvent, this._accessUri);\n        if (filteredEvent.files.length) {\n            const next = async (event) => {\n                this._client.sendNotification(this._notificationType, this._createParams(event));\n            };\n            this.doSend(filteredEvent, next);\n        }\n    }\n}\nclass DidCreateFilesFeature extends NotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidCreateFiles, proto.DidCreateFilesNotification.type, 'didCreate', 'didCreate', (i) => i, client.code2ProtocolConverter.asDidCreateFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.didCreateFiles) ? middleware.didCreateFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidCreateFilesFeature = DidCreateFilesFeature;\nclass DidRenameFilesFeature extends NotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidRenameFiles, proto.DidRenameFilesNotification.type, 'didRename', 'didRename', (i) => i.oldUri, client.code2ProtocolConverter.asDidRenameFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.didRenameFiles) ? middleware.didRenameFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidRenameFilesFeature = DidRenameFilesFeature;\nclass DidDeleteFilesFeature extends NotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidDeleteFiles, proto.DidDeleteFilesNotification.type, 'didDelete', 'didDelete', (i) => i, client.code2ProtocolConverter.asDidDeleteFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.didDeleteFiles) ? middleware.didDeleteFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidDeleteFilesFeature = DidDeleteFilesFeature;\nclass RequestFileOperationFeature extends FileOperationFeature {\n    constructor(client, event, requestType, clientCapability, serverCapability, accessUri, createParams) {\n        super(client, event, requestType, clientCapability, serverCapability);\n        this._requestType = requestType;\n        this._accessUri = accessUri;\n        this._createParams = createParams;\n    }\n    async send(originalEvent) {\n        const waitUntil = this.waitUntil(originalEvent);\n        originalEvent.waitUntil(waitUntil);\n    }\n    async waitUntil(originalEvent) {\n        // Create a copy of the event that has the files filtered to match what the\n        // server wants.\n        const filteredEvent = await this.filter(originalEvent, this._accessUri);\n        if (filteredEvent.files.length) {\n            const next = (event) => {\n                return this._client.sendRequest(this._requestType, this._createParams(event))\n                    .then(this._client.protocol2CodeConverter.asWorkspaceEdit);\n            };\n            return this.doSend(filteredEvent, next);\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nclass WillCreateFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillCreateFiles, proto.WillCreateFilesRequest.type, 'willCreate', 'willCreate', (i) => i, client.code2ProtocolConverter.asWillCreateFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.willCreateFiles) ? middleware.willCreateFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillCreateFilesFeature = WillCreateFilesFeature;\nclass WillRenameFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillRenameFiles, proto.WillRenameFilesRequest.type, 'willRename', 'willRename', (i) => i.oldUri, client.code2ProtocolConverter.asWillRenameFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.willRenameFiles) ? middleware.willRenameFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillRenameFilesFeature = WillRenameFilesFeature;\nclass WillDeleteFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillDeleteFiles, proto.WillDeleteFilesRequest.type, 'willDelete', 'willDelete', (i) => i, client.code2ProtocolConverter.asWillDeleteFilesParams);\n    }\n    doSend(event, next) {\n        var _a;\n        const middleware = (_a = this._client.clientOptions.middleware) === null || _a === void 0 ? void 0 : _a.workspace;\n        return (middleware === null || middleware === void 0 ? void 0 : middleware.willDeleteFiles) ? middleware.willDeleteFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillDeleteFilesFeature = WillDeleteFilesFeature;\n//# sourceMappingURL=fileOperations.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass FoldingRangeFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let capability = ensure(ensure(capabilities, 'textDocument'), 'foldingRange');\n        capability.dynamicRegistration = true;\n        capability.rangeLimit = 5000;\n        capability.lineFoldingOnly = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.foldingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideFoldingRanges: (document, context, token) => {\n                const client = this._client;\n                const provideFoldingRanges = (document, _, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(FoldingRangeFeature.asFoldingRanges, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideFoldingRanges\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\n                    : provideFoldingRanges(document, context, token);\n            }\n        };\n        return [vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, provider), provider];\n    }\n    static asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\n                    return vscode_1.FoldingRangeKind.Comment;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\n                    return vscode_1.FoldingRangeKind.Imports;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\n                    return vscode_1.FoldingRangeKind.Region;\n            }\n        }\n        return void 0;\n    }\n    static asFoldingRanges(foldingRanges) {\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(r => {\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, FoldingRangeFeature.asFoldingRangeKind(r.kind));\n            });\n        }\n        return [];\n    }\n}\nexports.FoldingRangeFeature = FoldingRangeFeature;\n//# sourceMappingURL=foldingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass ImplementationFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let implementationSupport = ensure(ensure(capabilities, 'textDocument'), 'implementation');\n        implementationSupport.dynamicRegistration = true;\n        implementationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.implementationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideImplementation: (document, position, token) => {\n                const client = this._client;\n                const provideImplementation = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideImplementation\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\n                    : provideImplementation(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerImplementationProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.ImplementationFeature = ImplementationFeature;\n//# sourceMappingURL=implementation.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/vscode-proposed.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingFeature = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass LinkedEditingFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, proto.LinkedEditingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const linkedEditingSupport = ensure(ensure(capabilities, 'textDocument'), 'linkedEditingRange');\n        linkedEditingSupport.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.linkedEditingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideLinkedEditingRanges: (document, position, token) => {\n                const client = this._client;\n                const provideLinkedEditing = (document, position, token) => {\n                    return client.sendRequest(proto.LinkedEditingRangeRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asLinkedEditingRanges, (error) => {\n                        return client.handleFailedRequest(proto.LinkedEditingRangeRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideLinkedEditingRange\n                    ? middleware.provideLinkedEditingRange(document, position, token, provideLinkedEditing)\n                    : provideLinkedEditing(document, position, token);\n            }\n        };\n        return [code.languages.registerLinkedEditingRangeProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.LinkedEditingFeature = LinkedEditingFeature;\n//# sourceMappingURL=linkedEditingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst progressPart_1 = require(\"./progressPart\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = Object.create(null);\n    }\n    return target[key];\n}\nclass ProgressFeature {\n    constructor(_client) {\n        this._client = _client;\n        this.activeParts = new Set();\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(capabilities, 'window').workDoneProgress = true;\n    }\n    initialize() {\n        const client = this._client;\n        const deleteHandler = (part) => {\n            this.activeParts.delete(part);\n        };\n        const createHandler = (params) => {\n            this.activeParts.add(new progressPart_1.ProgressPart(this._client, params.token, deleteHandler));\n        };\n        client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);\n    }\n    dispose() {\n        for (const part of this.activeParts) {\n            part.done();\n        }\n        this.activeParts.clear();\n    }\n}\nexports.ProgressFeature = ProgressFeature;\n//# sourceMappingURL=progress.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressPart = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nclass ProgressPart {\n    constructor(_client, _token, done) {\n        this._client = _client;\n        this._token = _token;\n        this._reported = 0;\n        this._disposable = this._client.onProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, (value) => {\n            switch (value.kind) {\n                case 'begin':\n                    this.begin(value);\n                    break;\n                case 'report':\n                    this.report(value);\n                    break;\n                case 'end':\n                    this.done();\n                    done && done(this);\n                    break;\n            }\n        });\n    }\n    begin(params) {\n        // Since we don't use commands this will be a silent window progress with a hidden notification.\n        vscode_1.window.withProgress({ location: vscode_1.ProgressLocation.Window, cancellable: params.cancellable, title: params.title }, async (progress, cancellationToken) => {\n            this._progress = progress;\n            this._infinite = params.percentage === undefined;\n            this._cancellationToken = cancellationToken;\n            this._cancellationToken.onCancellationRequested(() => {\n                this._client.sendNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, { token: this._token });\n            });\n            this.report(params);\n            return new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n            });\n        });\n    }\n    report(params) {\n        if (this._infinite && Is.string(params.message)) {\n            this._progress.report({ message: params.message });\n        }\n        else if (Is.number(params.percentage)) {\n            let percentage = Math.max(0, Math.min(params.percentage, 100));\n            let delta = Math.max(0, percentage - this._reported);\n            this._progress.report({ message: params.message, increment: delta });\n            this._reported += delta;\n        }\n    }\n    cancel() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = undefined;\n        }\n        if (this._reject) {\n            this._reject();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n    done() {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._disposable = undefined;\n        }\n        if (this._resolve) {\n            this._resolve();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n}\nexports.ProgressPart = ProgressPart;\n//# sourceMappingURL=progressPart.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCallHierarchyItem extends code.CallHierarchyItem {\n    constructor(kind, name, detail, uri, range, selectionRange, data) {\n        super(kind, name, detail, uri, range, selectionRange);\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n}\nexports.default = ProtocolCallHierarchyItem;\n//# sourceMappingURL=protocolCallHierarchyItem.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nclass ProtocolCodeAction extends vscode.CodeAction {\n    constructor(title, data) {\n        super(title);\n        this.data = data;\n    }\n}\nexports.default = ProtocolCodeAction;\n//# sourceMappingURL=protocolCodeAction.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCodeLens extends code.CodeLens {\n    constructor(range) {\n        super(range);\n    }\n}\nexports.default = ProtocolCodeLens;\n//# sourceMappingURL=protocolCodeLens.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCompletionItem extends code.CompletionItem {\n    constructor(label) {\n        super(label);\n    }\n}\nexports.default = ProtocolCompletionItem;\n//# sourceMappingURL=protocolCompletionItem.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/vscode-proposed.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst ls = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar CodeBlock;\n(function (CodeBlock) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n    }\n    CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter, trustMarkdown) {\n    const nullConverter = (value) => code.Uri.parse(value);\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asDiagnostics(diagnostics) {\n        return diagnostics.map(asDiagnostic);\n    }\n    function asDiagnostic(diagnostic) {\n        let result = new protocolDiagnostic_1.ProtocolDiagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity), diagnostic.data);\n        if (diagnostic.code !== undefined) {\n            if (ls.CodeDescription.is(diagnostic.codeDescription)) {\n                result.code = {\n                    value: diagnostic.code,\n                    target: asUri(diagnostic.codeDescription.href)\n                };\n            }\n            else if (protocolDiagnostic_1.DiagnosticCode.is(diagnostic.code)) {\n                result.hasDiagnosticCode = true;\n                result.code = {\n                    value: diagnostic.code.value,\n                    target: asUri(diagnostic.code.target)\n                };\n            }\n            else {\n                result.code = diagnostic.code;\n            }\n        }\n        if (diagnostic.source) {\n            result.source = diagnostic.source;\n        }\n        if (diagnostic.relatedInformation) {\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n        }\n        if (Array.isArray(diagnostic.tags)) {\n            result.tags = asDiagnosticTags(diagnostic.tags);\n        }\n        return result;\n    }\n    function asRelatedInformation(relatedInformation) {\n        return relatedInformation.map(asDiagnosticRelatedInformation);\n    }\n    function asDiagnosticRelatedInformation(information) {\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case ls.DiagnosticTag.Unnecessary:\n                return code.DiagnosticTag.Unnecessary;\n            case ls.DiagnosticTag.Deprecated:\n                return code.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asPosition(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Position(value.line, value.character);\n    }\n    function asRange(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Range(asPosition(value.start), asPosition(value.end));\n    }\n    function asRanges(value) {\n        return value.map(value => asRange(value));\n    }\n    function asDiagnosticSeverity(value) {\n        if (value === undefined || value === null) {\n            return code.DiagnosticSeverity.Error;\n        }\n        switch (value) {\n            case ls.DiagnosticSeverity.Error:\n                return code.DiagnosticSeverity.Error;\n            case ls.DiagnosticSeverity.Warning:\n                return code.DiagnosticSeverity.Warning;\n            case ls.DiagnosticSeverity.Information:\n                return code.DiagnosticSeverity.Information;\n            case ls.DiagnosticSeverity.Hint:\n                return code.DiagnosticSeverity.Hint;\n        }\n        return code.DiagnosticSeverity.Error;\n    }\n    function asHoverContent(value) {\n        if (Is.string(value)) {\n            return asMarkdownString(value);\n        }\n        else if (CodeBlock.is(value)) {\n            let result = asMarkdownString();\n            return result.appendCodeblock(value.value, value.language);\n        }\n        else if (Array.isArray(value)) {\n            let result = [];\n            for (let element of value) {\n                let item = asMarkdownString();\n                if (CodeBlock.is(element)) {\n                    item.appendCodeblock(element.value, element.language);\n                }\n                else {\n                    item.appendMarkdown(element);\n                }\n                result.push(item);\n            }\n            return result;\n        }\n        else {\n            let result;\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return asMarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    result = asMarkdownString();\n                    result.appendText(value.value);\n                    return result;\n                default:\n                    result = asMarkdownString();\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\n                    return result;\n            }\n        }\n    }\n    function asDocumentation(value) {\n        if (Is.string(value)) {\n            return value;\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return asMarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    return value.value;\n                default:\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\n            }\n        }\n    }\n    function asMarkdownString(value) {\n        const result = new code.MarkdownString(value);\n        if (trustMarkdown === true) {\n            result.isTrusted = trustMarkdown;\n        }\n        return result;\n    }\n    function asHover(hover) {\n        if (!hover) {\n            return undefined;\n        }\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n    }\n    function asCompletionResult(result) {\n        if (!result) {\n            return undefined;\n        }\n        if (Array.isArray(result)) {\n            let items = result;\n            return items.map(asCompletionItem);\n        }\n        let list = result;\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\n    }\n    function asCompletionItemKind(value) {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        }\n        return [code.CompletionItemKind.Text, value];\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case ls.CompletionItemTag.Deprecated:\n                return code.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined || tags === null) {\n            return [];\n        }\n        const result = [];\n        for (let tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItem(item) {\n        let tags = asCompletionItemTags(item.tags);\n        let result = new protocolCompletionItem_1.default(item.label);\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        let insertText = asCompletionInsertText(item);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            let [itemKind, original] = asCompletionItemKind(item.kind);\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (Is.stringArray(item.commitCharacters)) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.deprecated === true || item.deprecated === false) {\n            result.deprecated = item.deprecated;\n            if (item.deprecated === true) {\n                tags.push(code.CompletionItemTag.Deprecated);\n            }\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        if (item.data !== undefined) {\n            result.data = item.data;\n        }\n        if (tags.length > 0) {\n            result.tags = tags;\n        }\n        if (item.insertTextMode !== undefined) {\n            result.insertTextMode = item.insertTextMode;\n            if (item.insertTextMode === vscode_languageserver_protocol_1.InsertTextMode.asIs) {\n                result.keepWhitespace = true;\n            }\n        }\n        return result;\n    }\n    function asCompletionInsertText(item) {\n        if (item.textEdit) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.textEdit.newText), range: asCompletionRange(item.textEdit), fromEdit: true };\n            }\n            else {\n                return { text: item.textEdit.newText, range: asCompletionRange(item.textEdit), fromEdit: true };\n            }\n        }\n        else if (item.insertText) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\n            }\n            else {\n                return { text: item.insertText, fromEdit: false };\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    function asCompletionRange(value) {\n        if (ls.InsertReplaceEdit.is(value)) {\n            return { inserting: asRange(value.insert), replacing: asRange(value.replace) };\n        }\n        else {\n            return asRange(value.range);\n        }\n    }\n    function asTextEdit(edit) {\n        if (!edit) {\n            return undefined;\n        }\n        return new code.TextEdit(asRange(edit.range), edit.newText);\n    }\n    function asTextEdits(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asTextEdit);\n    }\n    function asSignatureHelp(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new code.SignatureHelp();\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = asSignatureInformations(item.signatures);\n        }\n        return result;\n    }\n    function asSignatureInformations(items) {\n        return items.map(asSignatureInformation);\n    }\n    function asSignatureInformation(item) {\n        let result = new code.SignatureInformation(item.label);\n        if (item.documentation !== undefined) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        if (item.parameters !== undefined) {\n            result.parameters = asParameterInformations(item.parameters);\n        }\n        if (item.activeParameter !== undefined) {\n            result.activeParameter = item.activeParameter;\n        }\n        {\n            return result;\n        }\n    }\n    function asParameterInformations(item) {\n        return item.map(asParameterInformation);\n    }\n    function asParameterInformation(item) {\n        let result = new code.ParameterInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        return result;\n    }\n    function asLocation(item) {\n        if (!item) {\n            return undefined;\n        }\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\n    }\n    function asDeclarationResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item);\n    }\n    function asDefinitionResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item);\n    }\n    function asLocationLink(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = {\n            targetUri: _uriConverter(item.targetUri),\n            targetRange: asRange(item.targetRange),\n            originSelectionRange: asRange(item.originSelectionRange),\n            targetSelectionRange: asRange(item.targetSelectionRange)\n        };\n        if (!result.targetSelectionRange) {\n            throw new Error(`targetSelectionRange must not be undefined or null`);\n        }\n        return result;\n    }\n    function asLocationResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            if (item.length === 0) {\n                return [];\n            }\n            else if (ls.LocationLink.is(item[0])) {\n                let links = item;\n                return links.map((link) => asLocationLink(link));\n            }\n            else {\n                let locations = item;\n                return locations.map((location) => asLocation(location));\n            }\n        }\n        else if (ls.LocationLink.is(item)) {\n            return [asLocationLink(item)];\n        }\n        else {\n            return asLocation(item);\n        }\n    }\n    function asReferences(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(location => asLocation(location));\n    }\n    function asDocumentHighlights(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(asDocumentHighlight);\n    }\n    function asDocumentHighlight(item) {\n        let result = new code.DocumentHighlight(asRange(item.range));\n        if (Is.number(item.kind)) {\n            result.kind = asDocumentHighlightKind(item.kind);\n        }\n        return result;\n    }\n    function asDocumentHighlightKind(item) {\n        switch (item) {\n            case ls.DocumentHighlightKind.Text:\n                return code.DocumentHighlightKind.Text;\n            case ls.DocumentHighlightKind.Read:\n                return code.DocumentHighlightKind.Read;\n            case ls.DocumentHighlightKind.Write:\n                return code.DocumentHighlightKind.Write;\n        }\n        return code.DocumentHighlightKind.Text;\n    }\n    function asSymbolInformations(values, uri) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(information => asSymbolInformation(information, uri));\n    }\n    function asSymbolKind(item) {\n        if (item <= ls.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return code.SymbolKind.Property;\n    }\n    function asSymbolTag(value) {\n        switch (value) {\n            case ls.SymbolTag.Deprecated:\n                return code.SymbolTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asSymbolTags(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        const result = [];\n        for (const item of items) {\n            const converted = asSymbolTag(item);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length === 0 ? undefined : result;\n    }\n    function asSymbolInformation(item, uri) {\n        // Symbol kind is one based in the protocol and zero based in code.\n        let result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\n        fillTags(result, item);\n        if (item.containerName) {\n            result.containerName = item.containerName;\n        }\n        return result;\n    }\n    function asDocumentSymbols(values) {\n        if (values === undefined || values === null) {\n            return undefined;\n        }\n        return values.map(asDocumentSymbol);\n    }\n    function asDocumentSymbol(value) {\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n        fillTags(result, value);\n        if (value.children !== undefined && value.children.length > 0) {\n            let children = [];\n            for (let child of value.children) {\n                children.push(asDocumentSymbol(child));\n            }\n            result.children = children;\n        }\n        return result;\n    }\n    function fillTags(result, value) {\n        result.tags = asSymbolTags(value.tags);\n        if (value.deprecated) {\n            if (!result.tags) {\n                result.tags = [code.SymbolTag.Deprecated];\n            }\n            else {\n                if (!result.tags.includes(code.SymbolTag.Deprecated)) {\n                    result.tags = result.tags.concat(code.SymbolTag.Deprecated);\n                }\n            }\n        }\n    }\n    function asCommand(item) {\n        let result = { title: item.title, command: item.command };\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCommands(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asCommand);\n    }\n    const kindMapping = new Map();\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = kindMapping.get(item);\n        if (result) {\n            return result;\n        }\n        let parts = item.split('.');\n        result = code.CodeActionKind.Empty;\n        for (let part of parts) {\n            result = result.append(part);\n        }\n        return result;\n    }\n    function asCodeActionKinds(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        return items.map(kind => asCodeActionKind(kind));\n    }\n    function asCodeAction(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = new protocolCodeAction_1.default(item.title, item.data);\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = asDiagnostics(item.diagnostics);\n        }\n        if (item.edit !== undefined) {\n            result.edit = asWorkspaceEdit(item.edit);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new protocolCodeLens_1.default(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.data !== undefined && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    function asCodeLenses(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map((codeLens) => asCodeLens(codeLens));\n    }\n    function asWorkspaceEdit(item) {\n        if (!item) {\n            return undefined;\n        }\n        const sharedMetadata = new Map();\n        if (item.changeAnnotations !== undefined) {\n            for (const key of Object.keys(item.changeAnnotations)) {\n                const metaData = asWorkspaceEditEntryMetadata(item.changeAnnotations[key]);\n                sharedMetadata.set(key, metaData);\n            }\n        }\n        const asMetadata = (annotation) => {\n            if (annotation === undefined) {\n                return undefined;\n            }\n            else {\n                return sharedMetadata.get(annotation);\n            }\n        };\n        const result = new code.WorkspaceEdit();\n        if (item.documentChanges) {\n            for (const change of item.documentChanges) {\n                if (ls.CreateFile.is(change)) {\n                    result.createFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.RenameFile.is(change)) {\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.DeleteFile.is(change)) {\n                    result.deleteFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.TextDocumentEdit.is(change)) {\n                    const uri = _uriConverter(change.textDocument.uri);\n                    for (const edit of change.edits) {\n                        if (vscode_languageserver_protocol_1.AnnotatedTextEdit.is(edit)) {\n                            result.replace(uri, asRange(edit.range), edit.newText, asMetadata(edit.annotationId));\n                        }\n                        else {\n                            result.replace(uri, asRange(edit.range), edit.newText);\n                        }\n                    }\n                }\n                else {\n                    throw new Error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\n                }\n            }\n        }\n        else if (item.changes) {\n            Object.keys(item.changes).forEach(key => {\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\n            });\n        }\n        return result;\n    }\n    function asWorkspaceEditEntryMetadata(annotation) {\n        if (annotation === undefined) {\n            return undefined;\n        }\n        return { label: annotation.label, needsConfirmation: !!annotation.needsConfirmation, description: annotation.description };\n    }\n    function asDocumentLink(item) {\n        let range = asRange(item.range);\n        let target = item.target ? asUri(item.target) : undefined;\n        // target must be optional in DocumentLink\n        let link = new protocolDocumentLink_1.default(range, target);\n        if (item.tooltip !== undefined) {\n            link.tooltip = item.tooltip;\n        }\n        if (item.data !== undefined && item.data !== null) {\n            link.data = item.data;\n        }\n        return link;\n    }\n    function asDocumentLinks(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asDocumentLink);\n    }\n    function asColor(color) {\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    function asColorInformation(ci) {\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n    }\n    function asColorInformations(colorInformation) {\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(asColorInformation);\n        }\n        return undefined;\n    }\n    function asColorPresentation(cp) {\n        let presentation = new code.ColorPresentation(cp.label);\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\n        if (cp.textEdit) {\n            presentation.textEdit = asTextEdit(cp.textEdit);\n        }\n        return presentation;\n    }\n    function asColorPresentations(colorPresentations) {\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(asColorPresentation);\n        }\n        return undefined;\n    }\n    function asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case ls.FoldingRangeKind.Comment:\n                    return code.FoldingRangeKind.Comment;\n                case ls.FoldingRangeKind.Imports:\n                    return code.FoldingRangeKind.Imports;\n                case ls.FoldingRangeKind.Region:\n                    return code.FoldingRangeKind.Region;\n            }\n        }\n        return undefined;\n    }\n    function asFoldingRange(r) {\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n    }\n    function asFoldingRanges(foldingRanges) {\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(asFoldingRange);\n        }\n        return undefined;\n    }\n    function asSelectionRange(selectionRange) {\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\n    }\n    function asSelectionRanges(selectionRanges) {\n        if (!Array.isArray(selectionRanges)) {\n            return [];\n        }\n        let result = [];\n        for (let range of selectionRanges) {\n            result.push(asSelectionRange(range));\n        }\n        return result;\n    }\n    function asCallHierarchyItem(item) {\n        if (item === null) {\n            return undefined;\n        }\n        let result = new protocolCallHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    function asCallHierarchyItems(items) {\n        if (items === null) {\n            return undefined;\n        }\n        return items.map(item => asCallHierarchyItem(item));\n    }\n    function asCallHierarchyIncomingCall(item) {\n        return new code.CallHierarchyIncomingCall(asCallHierarchyItem(item.from), asRanges(item.fromRanges));\n    }\n    function asCallHierarchyIncomingCalls(items) {\n        if (items === null) {\n            return undefined;\n        }\n        return items.map(item => asCallHierarchyIncomingCall(item));\n    }\n    function asCallHierarchyOutgoingCall(item) {\n        return new code.CallHierarchyOutgoingCall(asCallHierarchyItem(item.to), asRanges(item.fromRanges));\n    }\n    function asCallHierarchyOutgoingCalls(items) {\n        if (items === null) {\n            return undefined;\n        }\n        return items.map(item => asCallHierarchyOutgoingCall(item));\n    }\n    function asSemanticTokens(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokens(new Uint32Array(value.data), value.resultId);\n    }\n    function asSemanticTokensEdit(value) {\n        return new code.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\n    }\n    function asSemanticTokensEdits(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\n    }\n    function asSemanticTokensLegend(value) {\n        return value;\n    }\n    function asLinkedEditingRanges(value) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new code.LinkedEditingRanges(asRanges(value.ranges), asRegularExpression(value.wordPattern));\n    }\n    function asRegularExpression(value) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new RegExp(value);\n    }\n    return {\n        asUri,\n        asDiagnostics,\n        asDiagnostic,\n        asRange,\n        asRanges,\n        asPosition,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asHover,\n        asCompletionResult,\n        asCompletionItem,\n        asTextEdit,\n        asTextEdits,\n        asSignatureHelp,\n        asSignatureInformations,\n        asSignatureInformation,\n        asParameterInformations,\n        asParameterInformation,\n        asDeclarationResult,\n        asDefinitionResult,\n        asLocation,\n        asReferences,\n        asDocumentHighlights,\n        asDocumentHighlight,\n        asDocumentHighlightKind,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asSymbolInformations,\n        asSymbolInformation,\n        asDocumentSymbols,\n        asDocumentSymbol,\n        asCommand,\n        asCommands,\n        asCodeAction,\n        asCodeActionKind,\n        asCodeActionKinds,\n        asCodeLens,\n        asCodeLenses,\n        asWorkspaceEdit,\n        asDocumentLink,\n        asDocumentLinks,\n        asFoldingRangeKind,\n        asFoldingRange,\n        asFoldingRanges,\n        asColor,\n        asColorInformation,\n        asColorInformations,\n        asColorPresentation,\n        asColorPresentations,\n        asSelectionRange,\n        asSelectionRanges,\n        asSemanticTokensLegend,\n        asSemanticTokens,\n        asSemanticTokensEdit,\n        asSemanticTokensEdits,\n        asCallHierarchyItem,\n        asCallHierarchyItems,\n        asCallHierarchyIncomingCall,\n        asCallHierarchyIncomingCalls,\n        asCallHierarchyOutgoingCall,\n        asCallHierarchyOutgoingCalls,\n        asLinkedEditingRanges: asLinkedEditingRanges\n    };\n}\nexports.createConverter = createConverter;\n//# sourceMappingURL=protocolConverter.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolDiagnostic = exports.DiagnosticCode = void 0;\nconst vscode = require(\"vscode\");\nconst Is = require(\"./utils/is\");\nvar DiagnosticCode;\n(function (DiagnosticCode) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && (Is.number(candidate.value) || Is.string(candidate.value)) && Is.string(candidate.target);\n    }\n    DiagnosticCode.is = is;\n})(DiagnosticCode = exports.DiagnosticCode || (exports.DiagnosticCode = {}));\nclass ProtocolDiagnostic extends vscode.Diagnostic {\n    constructor(range, message, severity, data) {\n        super(range, message, severity);\n        this.data = data;\n        this.hasDiagnosticCode = false;\n    }\n}\nexports.ProtocolDiagnostic = ProtocolDiagnostic;\n//# sourceMappingURL=protocolDiagnostic.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolDocumentLink extends code.DocumentLink {\n    constructor(range, target) {\n        super(range, target);\n    }\n}\nexports.default = ProtocolDocumentLink;\n//# sourceMappingURL=protocolDocumentLink.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = Object.create(null);\n    }\n    return target[key];\n}\nclass SelectionRangeFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let capability = ensure(ensure(capabilities, 'textDocument'), 'selectionRange');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideSelectionRanges: (document, positions, token) => {\n                const client = this._client;\n                const provideSelectionRanges = (document, positions, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        positions: client.code2ProtocolConverter.asPositions(positions)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => client.protocol2CodeConverter.asSelectionRanges(ranges), (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideSelectionRanges\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\n                    : provideSelectionRanges(document, positions, token);\n            }\n        };\n        return [vscode_1.languages.registerSelectionRangeProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.SelectionRangeFeature = SelectionRangeFeature;\n//# sourceMappingURL=selectionRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensFeature = void 0;\nconst vscode = require(\"vscode\");\nconst client_1 = require(\"./client\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass SemanticTokensFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SemanticTokensRegistrationType.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = ensure(ensure(capabilities, 'textDocument'), 'semanticTokens');\n        capability.dynamicRegistration = true;\n        capability.tokenTypes = [\n            vscode_languageserver_protocol_1.SemanticTokenTypes.namespace,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.type,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.class,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.enum,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.interface,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.struct,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.typeParameter,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.parameter,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.variable,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.property,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.enumMember,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.event,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.function,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.method,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.macro,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.keyword,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.modifier,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.comment,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.string,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.number,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.regexp,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.operator\n        ];\n        capability.tokenModifiers = [\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.declaration,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.definition,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.readonly,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.static,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.deprecated,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.abstract,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.async,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.modification,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.documentation,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.defaultLibrary\n        ];\n        capability.formats = [vscode_languageserver_protocol_1.TokenFormat.Relative];\n        capability.requests = {\n            range: true,\n            full: {\n                delta: true\n            }\n        };\n        capability.multilineTokenSupport = false;\n        capability.overlappingTokenSupport = false;\n        ensure(ensure(capabilities, 'workspace'), 'semanticTokens').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.SemanticTokensRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeSemanticTokensEmitter.fire();\n            }\n        });\n        const [id, options] = this.getRegistration(documentSelector, capabilities.semanticTokensProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const fullProvider = Is.boolean(options.full) ? options.full : options.full !== undefined;\n        const hasEditProvider = options.full !== undefined && typeof options.full !== 'boolean' && options.full.delta === true;\n        const eventEmitter = new vscode.EventEmitter();\n        const documentProvider = fullProvider\n            ? {\n                onDidChangeSemanticTokens: eventEmitter.event,\n                provideDocumentSemanticTokens: (document, token) => {\n                    const client = this._client;\n                    const middleware = client.clientOptions.middleware;\n                    const provideDocumentSemanticTokens = (document, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRequest.type, params, token).then((result) => {\n                            return client.protocol2CodeConverter.asSemanticTokens(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensRequest.type, error, null);\n                        });\n                    };\n                    return middleware.provideDocumentSemanticTokens\n                        ? middleware.provideDocumentSemanticTokens(document, token, provideDocumentSemanticTokens)\n                        : provideDocumentSemanticTokens(document, token);\n                },\n                provideDocumentSemanticTokensEdits: hasEditProvider\n                    ? (document, previousResultId, token) => {\n                        const client = this._client;\n                        const middleware = client.clientOptions.middleware;\n                        const provideDocumentSemanticTokensEdits = (document, previousResultId, token) => {\n                            const params = {\n                                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                                previousResultId\n                            };\n                            return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type, params, token).then((result) => {\n                                if (vscode_languageserver_protocol_1.SemanticTokens.is(result)) {\n                                    return client.protocol2CodeConverter.asSemanticTokens(result);\n                                }\n                                else {\n                                    return client.protocol2CodeConverter.asSemanticTokensEdits(result);\n                                }\n                            }, (error) => {\n                                return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type, error, null);\n                            });\n                        };\n                        return middleware.provideDocumentSemanticTokensEdits\n                            ? middleware.provideDocumentSemanticTokensEdits(document, previousResultId, token, provideDocumentSemanticTokensEdits)\n                            : provideDocumentSemanticTokensEdits(document, previousResultId, token);\n                    }\n                    : undefined\n            }\n            : undefined;\n        const hasRangeProvider = options.range === true;\n        const rangeProvider = hasRangeProvider\n            ? {\n                provideDocumentRangeSemanticTokens: (document, range, token) => {\n                    const client = this._client;\n                    const middleware = client.clientOptions.middleware;\n                    const provideDocumentRangeSemanticTokens = (document, range, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            range: client.code2ProtocolConverter.asRange(range)\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type, params, token).then((result) => {\n                            return client.protocol2CodeConverter.asSemanticTokens(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type, error, null);\n                        });\n                    };\n                    return middleware.provideDocumentRangeSemanticTokens\n                        ? middleware.provideDocumentRangeSemanticTokens(document, range, token, provideDocumentRangeSemanticTokens)\n                        : provideDocumentRangeSemanticTokens(document, range, token);\n                }\n            }\n            : undefined;\n        const disposables = [];\n        const client = this._client;\n        const legend = client.protocol2CodeConverter.asSemanticTokensLegend(options.legend);\n        if (documentProvider !== undefined) {\n            disposables.push(vscode.languages.registerDocumentSemanticTokensProvider(options.documentSelector, documentProvider, legend));\n        }\n        if (rangeProvider !== undefined) {\n            disposables.push(vscode.languages.registerDocumentRangeSemanticTokensProvider(options.documentSelector, rangeProvider, legend));\n        }\n        return [new vscode.Disposable(() => disposables.forEach(item => item.dispose())), { range: rangeProvider, full: documentProvider, onDidChangeSemanticTokensEmitter: eventEmitter }];\n    }\n}\nexports.SemanticTokensFeature = SemanticTokensFeature;\n//# sourceMappingURL=semanticTokens.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nclass TypeDefinitionFeature extends client_1.TextDocumentFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\n        let typeDefinitionSupport = ensure(ensure(capabilities, 'textDocument'), 'typeDefinition');\n        typeDefinitionSupport.dynamicRegistration = true;\n        typeDefinitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.typeDefinitionProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideTypeDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideTypeDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error, null);\n                    });\n                };\n                const middleware = client.clientOptions.middleware;\n                return middleware.provideTypeDefinition\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\n                    : provideTypeDefinition(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, provider), provider];\n    }\n}\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\n//# sourceMappingURL=typeDefinition.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Delayer = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = undefined;\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        if (delay >= 0) {\n            this.cancelTimeout();\n        }\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve) => {\n                this.onSuccess = resolve;\n            }).then(() => {\n                this.completionPromise = undefined;\n                this.onSuccess = undefined;\n                var result = this.task();\n                this.task = undefined;\n                return result;\n            });\n        }\n        if (delay >= 0 || this.timeout === void 0) {\n            this.timeout = vscode_languageserver_protocol_1.RAL().timer.setTimeout(() => {\n                this.timeout = undefined;\n                this.onSuccess(undefined);\n            }, delay >= 0 ? delay : this.defaultDelay);\n        }\n        return this.completionPromise;\n    }\n    forceDelivery() {\n        if (!this.completionPromise) {\n            return undefined;\n        }\n        this.cancelTimeout();\n        let result = this.task();\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n        return result;\n    }\n    isTriggered() {\n        return this.timeout !== void 0;\n    }\n    cancel() {\n        this.cancelTimeout();\n        this.completionPromise = undefined;\n    }\n    cancelTimeout() {\n        if (this.timeout !== void 0) {\n            vscode_languageserver_protocol_1.RAL().timer.clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n    }\n}\nexports.Delayer = Delayer;\n//# sourceMappingURL=async.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asPromise = exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\nfunction asPromise(value) {\n    if (value instanceof Promise) {\n        return value;\n    }\n    else if (thenable(value)) {\n        return new Promise((resolve, reject) => {\n            value.then((resolved) => resolve(resolved), (error) => reject(error));\n        });\n    }\n    else {\n        return Promise.resolve(value);\n    }\n}\nexports.asPromise = asPromise;\n//# sourceMappingURL=is.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n//# sourceMappingURL=uuid.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFoldersFeature = exports.arrayDiff = void 0;\nconst UUID = require(\"./utils/uuid\");\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nfunction access(target, key) {\n    if (target === void 0) {\n        return undefined;\n    }\n    return target[key];\n}\nfunction arrayDiff(left, right) {\n    return left.filter(element => right.indexOf(element) < 0);\n}\nexports.arrayDiff = arrayDiff;\nclass WorkspaceFoldersFeature {\n    constructor(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\n    }\n    fillInitializeParams(params) {\n        const folders = vscode_1.workspace.workspaceFolders;\n        this.initializeWithFolders(folders);\n        if (folders === void 0) {\n            params.workspaceFolders = null;\n        }\n        else {\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\n        }\n    }\n    initializeWithFolders(currentWorkspaceFolders) {\n        this._initialFolders = currentWorkspaceFolders;\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.workspaceFolders = true;\n    }\n    initialize(capabilities) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\n            const workspaceFolders = () => {\n                const folders = vscode_1.workspace.workspaceFolders;\n                if (folders === undefined) {\n                    return null;\n                }\n                const result = folders.map((folder) => {\n                    return this.asProtocol(folder);\n                });\n                return result;\n            };\n            const middleware = client.clientOptions.middleware.workspace;\n            return middleware && middleware.workspaceFolders\n                ? middleware.workspaceFolders(token, workspaceFolders)\n                : workspaceFolders(token);\n        });\n        const value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\n        let id;\n        if (typeof value === 'string') {\n            id = value;\n        }\n        else if (value === true) {\n            id = UUID.generateUuid();\n        }\n        if (id) {\n            this.register({ id: id, registerOptions: undefined });\n        }\n    }\n    sendInitialEvent(currentWorkspaceFolders) {\n        if (this._initialFolders && currentWorkspaceFolders) {\n            const removed = arrayDiff(this._initialFolders, currentWorkspaceFolders);\n            const added = arrayDiff(currentWorkspaceFolders, this._initialFolders);\n            if (added.length > 0 || removed.length > 0) {\n                this.doSendEvent(added, removed);\n            }\n        }\n        else if (this._initialFolders) {\n            this.doSendEvent([], this._initialFolders);\n        }\n        else if (currentWorkspaceFolders) {\n            this.doSendEvent(currentWorkspaceFolders, []);\n        }\n    }\n    doSendEvent(addedFolders, removedFolders) {\n        let params = {\n            event: {\n                added: addedFolders.map(folder => this.asProtocol(folder)),\n                removed: removedFolders.map(folder => this.asProtocol(folder))\n            }\n        };\n        this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\n    }\n    register(data) {\n        let id = data.id;\n        let client = this._client;\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\n            let didChangeWorkspaceFolders = (event) => {\n                this.doSendEvent(event.added, event.removed);\n            };\n            let middleware = client.clientOptions.middleware.workspace;\n            middleware && middleware.didChangeWorkspaceFolders\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\n                : didChangeWorkspaceFolders(event);\n        });\n        this._listeners.set(id, disposable);\n        this.sendInitialEvent(vscode_1.workspace.workspaceFolders);\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable === void 0) {\n            return;\n        }\n        this._listeners.delete(id);\n        disposable.dispose();\n    }\n    dispose() {\n        for (let disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n    }\n    asProtocol(workspaceFolder) {\n        if (workspaceFolder === void 0) {\n            return null;\n        }\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\n    }\n}\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n//# sourceMappingURL=workspaceFolders.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SettingMonitor = exports.LanguageClient = exports.TransportKind = void 0;\nconst cp = require(\"child_process\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst SemVer = require(\"semver\");\nconst vscode_1 = require(\"vscode\");\nconst Is = require(\"../common/utils/is\");\nconst commonClient_1 = require(\"../common/commonClient\");\nconst client_1 = require(\"../common/client\");\nconst processes_1 = require(\"./processes\");\nconst node_1 = require(\"vscode-languageserver-protocol/node\");\n__exportStar(require(\"vscode-languageserver-protocol/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nconst REQUIRED_VSCODE_VERSION = '^1.52.0'; // do not change format, updated by `updateVSCode` script\nvar Executable;\n(function (Executable) {\n    function is(value) {\n        return Is.string(value.command);\n    }\n    Executable.is = is;\n})(Executable || (Executable = {}));\nvar TransportKind;\n(function (TransportKind) {\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\n})(TransportKind = exports.TransportKind || (exports.TransportKind = {}));\nvar Transport;\n(function (Transport) {\n    function isSocket(value) {\n        let candidate = value;\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\n    }\n    Transport.isSocket = isSocket;\n})(Transport || (Transport = {}));\nvar NodeModule;\n(function (NodeModule) {\n    function is(value) {\n        return Is.string(value.module);\n    }\n    NodeModule.is = is;\n})(NodeModule || (NodeModule = {}));\nvar StreamInfo;\n(function (StreamInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.writer !== void 0 && candidate.reader !== void 0;\n    }\n    StreamInfo.is = is;\n})(StreamInfo || (StreamInfo = {}));\nvar ChildProcessInfo;\n(function (ChildProcessInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.process !== void 0 && typeof candidate.detached === 'boolean';\n    }\n    ChildProcessInfo.is = is;\n})(ChildProcessInfo || (ChildProcessInfo = {}));\nclass LanguageClient extends commonClient_1.CommonLanguageClient {\n    constructor(arg1, arg2, arg3, arg4, arg5) {\n        let id;\n        let name;\n        let serverOptions;\n        let clientOptions;\n        let forceDebug;\n        if (Is.string(arg2)) {\n            id = arg1;\n            name = arg2;\n            serverOptions = arg3;\n            clientOptions = arg4;\n            forceDebug = !!arg5;\n        }\n        else {\n            id = arg1.toLowerCase();\n            name = arg1;\n            serverOptions = arg2;\n            clientOptions = arg3;\n            forceDebug = arg4;\n        }\n        if (forceDebug === void 0) {\n            forceDebug = false;\n        }\n        super(id, name, clientOptions);\n        this._serverOptions = serverOptions;\n        this._forceDebug = forceDebug;\n        try {\n            this.checkVersion();\n        }\n        catch (error) {\n            if (Is.string(error.message)) {\n                this.outputChannel.appendLine(error.message);\n            }\n            throw error;\n        }\n    }\n    checkVersion() {\n        let codeVersion = SemVer.parse(vscode_1.version);\n        if (!codeVersion) {\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\n        }\n        // Remove the insider pre-release since we stay API compatible.\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\n            codeVersion.prerelease = [];\n        }\n        if (!SemVer.satisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\n        }\n    }\n    stop() {\n        return super.stop().then(() => {\n            if (this._serverProcess) {\n                let toCheck = this._serverProcess;\n                this._serverProcess = undefined;\n                if (this._isDetached === void 0 || !this._isDetached) {\n                    this.checkProcessDied(toCheck);\n                }\n                this._isDetached = undefined;\n            }\n        });\n    }\n    checkProcessDied(childProcess) {\n        if (!childProcess) {\n            return;\n        }\n        setTimeout(() => {\n            // Test if the process is still alive. Throws an exception if not\n            try {\n                process.kill(childProcess.pid, 0);\n                processes_1.terminate(childProcess);\n            }\n            catch (error) {\n                // All is fine.\n            }\n        }, 2000);\n    }\n    handleConnectionClosed() {\n        this._serverProcess = undefined;\n        super.handleConnectionClosed();\n    }\n    fillInitializeParams(params) {\n        super.fillInitializeParams(params);\n        if (params.processId === null) {\n            params.processId = process.pid;\n        }\n    }\n    createMessageTransports(encoding) {\n        function getEnvironment(env, fork) {\n            if (!env && !fork) {\n                return undefined;\n            }\n            let result = Object.create(null);\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\n            if (fork) {\n                result['ELECTRON_RUN_AS_NODE'] = '1';\n                result['ELECTRON_NO_ASAR'] = '1';\n            }\n            if (env) {\n                Object.keys(env).forEach(key => result[key] = env[key]);\n            }\n            return result;\n        }\n        const debugStartWith = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];\n        const debugEquals = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];\n        function startedInDebugMode() {\n            let args = process.execArgv;\n            if (args) {\n                return args.some((arg) => {\n                    return debugStartWith.some(value => arg.startsWith(value)) ||\n                        debugEquals.some(value => arg === value);\n                });\n            }\n            return false;\n        }\n        function assertStdio(process) {\n            if (process.stdin === null || process.stdout === null || process.stderr === null) {\n                throw new Error('Process created without stdio streams');\n            }\n        }\n        let server = this._serverOptions;\n        // We got a function.\n        if (Is.func(server)) {\n            return server().then((result) => {\n                if (client_1.MessageTransports.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return result;\n                }\n                else if (StreamInfo.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return { reader: new node_1.StreamMessageReader(result.reader), writer: new node_1.StreamMessageWriter(result.writer) };\n                }\n                else {\n                    let cp;\n                    if (ChildProcessInfo.is(result)) {\n                        cp = result.process;\n                        this._isDetached = result.detached;\n                    }\n                    else {\n                        cp = result;\n                        this._isDetached = false;\n                    }\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                    return { reader: new node_1.StreamMessageReader(cp.stdout), writer: new node_1.StreamMessageWriter(cp.stdin) };\n                }\n            });\n        }\n        let json;\n        let runDebug = server;\n        if (runDebug.run || runDebug.debug) {\n            if (this._forceDebug || startedInDebugMode()) {\n                json = runDebug.debug;\n            }\n            else {\n                json = runDebug.run;\n            }\n        }\n        else {\n            json = server;\n        }\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\n            if (NodeModule.is(json) && json.module) {\n                let node = json;\n                let transport = node.transport || TransportKind.stdio;\n                if (node.runtime) {\n                    let args = [];\n                    let options = node.options || Object.create(null);\n                    if (options.execArgv) {\n                        options.execArgv.forEach(element => args.push(element));\n                    }\n                    args.push(node.module);\n                    if (node.args) {\n                        node.args.forEach(element => args.push(element));\n                    }\n                    const execOptions = Object.create(null);\n                    execOptions.cwd = serverWorkingDir;\n                    execOptions.env = getEnvironment(options.env, false);\n                    const runtime = this._getRuntimePath(node.runtime, serverWorkingDir);\n                    let pipeName = undefined;\n                    if (transport === TransportKind.ipc) {\n                        // exec options not correctly typed in lib\n                        execOptions.stdio = [null, null, null, 'ipc'];\n                        args.push('--node-ipc');\n                    }\n                    else if (transport === TransportKind.stdio) {\n                        args.push('--stdio');\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        pipeName = node_1.generateRandomPipeName();\n                        args.push(`--pipe=${pipeName}`);\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        args.push(`--socket=${transport.port}`);\n                    }\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                        let serverProcess = cp.spawn(runtime, args, execOptions);\n                        if (!serverProcess || !serverProcess.pid) {\n                            return Promise.reject(`Launching server using runtime ${runtime} failed.`);\n                        }\n                        this._serverProcess = serverProcess;\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        if (transport === TransportKind.ipc) {\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return Promise.resolve({ reader: new node_1.IPCMessageReader(serverProcess), writer: new node_1.IPCMessageWriter(serverProcess) });\n                        }\n                        else {\n                            return Promise.resolve({ reader: new node_1.StreamMessageReader(serverProcess.stdout), writer: new node_1.StreamMessageWriter(serverProcess.stdin) });\n                        }\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        return node_1.createClientPipeTransport(pipeName).then((transport) => {\n                            let process = cp.spawn(runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return Promise.reject(`Launching server using runtime ${runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        return node_1.createClientSocketTransport(transport.port).then((transport) => {\n                            let process = cp.spawn(runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return Promise.reject(`Launching server using runtime ${runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                }\n                else {\n                    let pipeName = undefined;\n                    return new Promise((resolve, _reject) => {\n                        let args = node.args && node.args.slice() || [];\n                        if (transport === TransportKind.ipc) {\n                            args.push('--node-ipc');\n                        }\n                        else if (transport === TransportKind.stdio) {\n                            args.push('--stdio');\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            pipeName = node_1.generateRandomPipeName();\n                            args.push(`--pipe=${pipeName}`);\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            args.push(`--socket=${transport.port}`);\n                        }\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\n                        let options = node.options || Object.create(null);\n                        options.env = getEnvironment(options.env, true);\n                        options.execArgv = options.execArgv || [];\n                        options.cwd = serverWorkingDir;\n                        options.silent = true;\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                            let sp = cp.fork(node.module, args || [], options);\n                            assertStdio(sp);\n                            this._serverProcess = sp;\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            if (transport === TransportKind.ipc) {\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                resolve({ reader: new node_1.IPCMessageReader(this._serverProcess), writer: new node_1.IPCMessageWriter(this._serverProcess) });\n                            }\n                            else {\n                                resolve({ reader: new node_1.StreamMessageReader(sp.stdout), writer: new node_1.StreamMessageWriter(sp.stdin) });\n                            }\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            node_1.createClientPipeTransport(pipeName).then((transport) => {\n                                let sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                });\n                            });\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            node_1.createClientSocketTransport(transport.port).then((transport) => {\n                                let sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                });\n                            });\n                        }\n                    });\n                }\n            }\n            else if (Executable.is(json) && json.command) {\n                let command = json;\n                let args = command.args || [];\n                let options = Object.assign({}, command.options);\n                options.cwd = options.cwd || serverWorkingDir;\n                let serverProcess = cp.spawn(command.command, args, options);\n                if (!serverProcess || !serverProcess.pid) {\n                    return Promise.reject(`Launching server using command ${command.command} failed.`);\n                }\n                serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                this._serverProcess = serverProcess;\n                this._isDetached = !!options.detached;\n                return Promise.resolve({ reader: new node_1.StreamMessageReader(serverProcess.stdout), writer: new node_1.StreamMessageWriter(serverProcess.stdin) });\n            }\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\n        });\n    }\n    _getRuntimePath(runtime, serverWorkingDirectory) {\n        if (path.isAbsolute(runtime)) {\n            return runtime;\n        }\n        const mainRootPath = this._mainGetRootPath();\n        if (mainRootPath !== undefined) {\n            const result = path.join(mainRootPath, runtime);\n            if (fs.existsSync(result)) {\n                return result;\n            }\n        }\n        if (serverWorkingDirectory !== undefined) {\n            const result = path.join(serverWorkingDirectory, runtime);\n            if (fs.existsSync(result)) {\n                return result;\n            }\n        }\n        return runtime;\n    }\n    _mainGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    _getServerWorkingDir(options) {\n        let cwd = options && options.cwd;\n        if (!cwd) {\n            cwd = this.clientOptions.workspaceFolder\n                ? this.clientOptions.workspaceFolder.uri.fsPath\n                : this._mainGetRootPath();\n        }\n        if (cwd) {\n            // make sure the folder exists otherwise creating the process will fail\n            return new Promise(s => {\n                fs.lstat(cwd, (err, stats) => {\n                    s(!err && stats.isDirectory() ? cwd : undefined);\n                });\n            });\n        }\n        return Promise.resolve(undefined);\n    }\n    getLocale() {\n        const envValue = process.env['VSCODE_NLS_CONFIG'];\n        if (envValue === undefined) {\n            return 'en';\n        }\n        let config = undefined;\n        try {\n            config = JSON.parse(envValue);\n        }\n        catch (err) {\n        }\n        if (config === undefined || typeof config.locale !== 'string') {\n            return 'en';\n        }\n        return config.locale;\n    }\n}\nexports.LanguageClient = LanguageClient;\nclass SettingMonitor {\n    constructor(_client, _setting) {\n        this._client = _client;\n        this._setting = _setting;\n        this._listeners = [];\n    }\n    start() {\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\n        this.onDidChangeConfiguration();\n        return new vscode_1.Disposable(() => {\n            if (this._client.needsStop()) {\n                this._client.stop();\n            }\n        });\n    }\n    onDidChangeConfiguration() {\n        let index = this._setting.indexOf('.');\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\n        if (enabled && this._client.needsStart()) {\n            this._client.start();\n        }\n        else if (!enabled && this._client.needsStop()) {\n            this._client.stop();\n        }\n    }\n}\nexports.SettingMonitor = SettingMonitor;\n//# sourceMappingURL=main.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.terminate = void 0;\nconst cp = require(\"child_process\");\nconst path_1 = require(\"path\");\nconst isWindows = (process.platform === 'win32');\nconst isMacintosh = (process.platform === 'darwin');\nconst isLinux = (process.platform === 'linux');\nfunction terminate(process, cwd) {\n    if (isWindows) {\n        try {\n            // This we run in Atom execFileSync is available.\n            // Ignore stderr since this is otherwise piped to parent.stderr\n            // which might be already closed.\n            let options = {\n                stdio: ['pipe', 'pipe', 'ignore']\n            };\n            if (cwd) {\n                options.cwd = cwd;\n            }\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else if (isLinux || isMacintosh) {\n        try {\n            var cmd = path_1.join(__dirname, 'terminateProcess.sh');\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\n            return result.error ? false : true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else {\n        process.kill('SIGKILL');\n        return true;\n    }\n}\nexports.terminate = terminate;\n//# sourceMappingURL=processes.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSPErrorCodes = exports.createProtocolConnection = void 0;\n__exportStar(require(\"vscode-jsonrpc\"), exports);\n__exportStar(require(\"vscode-languageserver-types\"), exports);\n__exportStar(require(\"./messages\"), exports);\n__exportStar(require(\"./protocol\"), exports);\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"createProtocolConnection\", { enumerable: true, get: function () { return connection_1.createProtocolConnection; } });\nvar LSPErrorCodes;\n(function (LSPErrorCodes) {\n    /**\n    * This is the start range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeStart = -32899;\n    LSPErrorCodes.ContentModified = -32801;\n    LSPErrorCodes.RequestCancelled = -32800;\n    /**\n    * This is the end range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;\n})(LSPErrorCodes = exports.LSPErrorCodes || (exports.LSPErrorCodes = {}));\n//# sourceMappingURL=api.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nfunction createProtocolConnection(input, output, logger, options) {\n    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return vscode_jsonrpc_1.createMessageConnection(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n//# sourceMappingURL=connection.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n// let x: ProtocolNotificationType<number, { value: number}>;\n// let y: ProtocolNotificationType<string, { value: number}>;\n// x = y;\n//# sourceMappingURL=messages.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to a incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\n//# sourceMappingURL=protocol.callHierarchy.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to list all color symbols found in a given text document. The request's\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentColorRequest;\n(function (DocumentColorRequest) {\n    DocumentColorRequest.method = 'textDocument/documentColor';\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\n/**\n * A request to list all presentation for a color. The request's\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\n * that resolves to such.\n */\nvar ColorPresentationRequest;\n(function (ColorPresentationRequest) {\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\n//# sourceMappingURL=protocol.colorProvider.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\n * configuration setting.\n *\n * This pull model replaces the old push model were the client signaled configuration change via an\n * event. If the server still needs to react to configuration changes (since the server caches the\n * result of `workspace/configuration` requests) the server should register for an empty configuration\n * change event and empty the cache if such an event is received.\n */\nvar ConfigurationRequest;\n(function (ConfigurationRequest) {\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\n//# sourceMappingURL=protocol.configuration.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\n * to such.\n */\nvar DeclarationRequest;\n(function (DeclarationRequest) {\n    DeclarationRequest.method = 'textDocument/declaration';\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\n//# sourceMappingURL=protocol.declaration.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind = exports.FileOperationPatternKind || (exports.FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest = exports.WillCreateFilesRequest || (exports.WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification = exports.DidCreateFilesNotification || (exports.DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest = exports.WillRenameFilesRequest || (exports.WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification = exports.DidRenameFilesNotification || (exports.DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification = exports.DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest = exports.WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = {}));\n//# sourceMappingURL=protocol.fileOperations.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeRequest = exports.FoldingRangeKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Enum of known range kinds\n */\nvar FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\n/**\n * A request to provide folding ranges in a document. The request's\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\n * that resolves to such.\n */\nvar FoldingRangeRequest;\n(function (FoldingRangeRequest) {\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\n//# sourceMappingURL=protocol.foldingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the implementation locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\n * Thenable that resolves to such.\n */\nvar ImplementationRequest;\n(function (ImplementationRequest) {\n    ImplementationRequest.method = 'textDocument/implementation';\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\n//# sourceMappingURL=protocol.implementation.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeError = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.DocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = void 0;\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"SemanticTokenTypes\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenTypes; } });\nObject.defineProperty(exports, \"SemanticTokenModifiers\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokenModifiers; } });\nObject.defineProperty(exports, \"SemanticTokens\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokens; } });\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The DocumentFilter namespace provides helper functions to work with\n * [DocumentFilter](#DocumentFilter) literals.\n */\nvar DocumentFilter;\n(function (DocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\n    }\n    DocumentFilter.is = is;\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * [DocumentSelector](#DocumentSelector)s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type [InitializeParams](#InitializeParams)\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeError`;\n */\nvar InitializeError;\n(function (InitializeError) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeError.unknownProtocolVersion = 1;\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent = exports.TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type [CompletionItem](#CompletionItem) the response\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\n * type [Hover](#Hover) or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\n * to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type [ReferenceParams](#ReferenceParams) the response is of type\n * [Location[]](#Location) or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\n/**\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\n * text document position. The request's parameter is of type [TextDocumentPosition]\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\n * (#DocumentHighlight) or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type [CodeAction](#CodeAction) the response\n * is of type [CodeAction](#CodeAction) or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest = exports.CodeActionResolveRequest || (exports.CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\n * resolves to such.\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest = exports.CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type [DocumentLink](#DocumentLink) the response\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\n/**\n * A request to to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\n/**\n * A request to to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior = exports.PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\n//# sourceMappingURL=protocol.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide ranges that can be edited together.\n *\n * @since 3.16.0\n */\nvar LinkedEditingRangeRequest;\n(function (LinkedEditingRangeRequest) {\n    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';\n    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);\n})(LinkedEditingRangeRequest = exports.LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = {}));\n//# sourceMappingURL=protocol.linkedEditingRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Moniker uniqueness level to define scope of the moniker.\n *\n * @since 3.16.0\n */\nvar UniquenessLevel;\n(function (UniquenessLevel) {\n    /**\n     * The moniker is only unique inside a document\n     */\n    UniquenessLevel[\"document\"] = \"document\";\n    /**\n     * The moniker is unique inside a project for which a dump got created\n     */\n    UniquenessLevel[\"project\"] = \"project\";\n    /**\n     * The moniker is unique inside the group to which a project belongs\n     */\n    UniquenessLevel[\"group\"] = \"group\";\n    /**\n     * The moniker is unique inside the moniker scheme.\n     */\n    UniquenessLevel[\"scheme\"] = \"scheme\";\n    /**\n     * The moniker is globally unique\n     */\n    UniquenessLevel[\"global\"] = \"global\";\n})(UniquenessLevel = exports.UniquenessLevel || (exports.UniquenessLevel = {}));\n/**\n * The moniker kind.\n *\n * @since 3.16.0\n */\nvar MonikerKind;\n(function (MonikerKind) {\n    /**\n     * The moniker represent a symbol that is imported into a project\n     */\n    MonikerKind[\"import\"] = \"import\";\n    /**\n     * The moniker represents a symbol that is exported from a project\n     */\n    MonikerKind[\"export\"] = \"export\";\n    /**\n     * The moniker represents a symbol that is local to a project (e.g. a local\n     * variable of a function, a class not visible outside the project, ...)\n     */\n    MonikerKind[\"local\"] = \"local\";\n})(MonikerKind = exports.MonikerKind || (exports.MonikerKind = {}));\n/**\n * A request to get the moniker of a symbol at a given text document position.\n * The request parameter is of type [TextDocumentPositionParams](#TextDocumentPositionParams).\n * The response is of type [Moniker[]](#Moniker[]) or `null`.\n */\nvar MonikerRequest;\n(function (MonikerRequest) {\n    MonikerRequest.method = 'textDocument/moniker';\n    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);\n})(MonikerRequest = exports.MonikerRequest || (exports.MonikerRequest = {}));\n//# sourceMappingURL=protocol.moniker.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\n//# sourceMappingURL=protocol.progress.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide selection ranges in a document. The request's\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\n * that resolves to such.\n */\nvar SelectionRangeRequest;\n(function (SelectionRangeRequest) {\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\n//# sourceMappingURL=protocol.selectionRange.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nvar SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nvar SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat = exports.TokenFormat || (exports.TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType = exports.SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n})(SemanticTokensDeltaRequest = exports.SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest = exports.SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = {}));\n//# sourceMappingURL=protocol.semanticTokens.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to show a document. This request might open an\n * external program depending on the value of the URI to open.\n * For example a request to open `https://code.visualstudio.com/`\n * will very likely open the URI in a WEB browser.\n *\n * @since 3.16.0\n*/\nvar ShowDocumentRequest;\n(function (ShowDocumentRequest) {\n    ShowDocumentRequest.method = 'window/showDocument';\n    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);\n})(ShowDocumentRequest = exports.ShowDocumentRequest || (exports.ShowDocumentRequest = {}));\n//# sourceMappingURL=protocol.showDocument.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type [TextDocumentPositioParams]\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\n * Thenable that resolves to such.\n */\nvar TypeDefinitionRequest;\n(function (TypeDefinitionRequest) {\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\n//# sourceMappingURL=protocol.typeDefinition.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\n//# sourceMappingURL=protocol.workspaceFolders.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n//# sourceMappingURL=is.js.map","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst node_1 = require(\"vscode-jsonrpc/node\");\n__exportStar(require(\"vscode-jsonrpc/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nfunction createProtocolConnection(input, output, logger, options) {\n    return node_1.createMessageConnection(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","module.exports = require(\"child_process\");;","module.exports = require(\"crypto\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"https\");;","module.exports = require(\"net\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"stream\");;","module.exports = require(\"url\");;","module.exports = require(\"util\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension/extension.ts\");\n"],"sourceRoot":""}